{"version":3,"sources":["Model/defaults.ts","Model/types.ts","App/hooks.ts","Display/weaknessSlice.ts","Model/options.tsx","Display/targetSlice.ts","Display/ByLevelInput.tsx","Model/newActivityInfo.ts","Routines/RoutineSlice/RoutineTypes.ts","Routines/RoutineSlice/routineSlice.ts","Calculation/Distribution.ts","Calculation/Calculation.ts","Calculation/EvaluateActivityPath.ts","Display/sharingSlice.ts","Display/useGenerateGraphs.tsx","Display/SingleLevelInput.tsx","Display/JointInput.tsx","Sharing/Upload.tsx","Display/Display.tsx","Routines/ActivityPathStub.tsx","TooltipSelect.tsx","Routines/Activity/LevelList.tsx","Routines/Activity/Damage.tsx","Routines/Activity/Effect.tsx","Routines/Activity/ActivityPath.tsx","Routines/SelectedRoutine.tsx","Routines/Routines.tsx","Sharing/Export.tsx","Routines/NewActivity/NewActivity.tsx","App/PF2App.tsx","App/store.ts","Model/exampleRoutines.ts","serviceWorker.js","App/theme.ts","index.js"],"names":["graphTypes","DISTRIBUTION","PMDEFENSE","PMRES","importStates","ACTrends","LOW","MODERATE","HIGH","EXTREME","SaveTrends","TERRIBLE","HPTrends","conditions","ALWAYS","CRIT","SUCC","FAIL","CRIF","AT_LEAST_SUCC","AT_LEAST_FAIL","FAIL_WORSE","SUCC_WORSE","rollTypes","NORMAL","ADVANTAGE","DISADVANTAGE","activityTypes","STRIKE","SAVE","SKILL","SPELLATTACK","profTrends","UNTRAINED","TRAINED","FIGHTERWEAPON","MARTIALWEAPON","CASTERWEAPON","ALCHWEAPON","CASTERSPELL","CLASSDC1","CLASSDC2","MCSPELL","MAXSKILL","ANIMALCOMPANION","SAVAGEACATHLETICS","statTrends","AS10","AS18a","AS18","AS16a","AS16pp","AS16p","AS14pp","AS14p","AS12p","AS10p","NIMBLEAC","SAVAGEAC","itemTrends","NONE","WEAPON","BOMB","MUTAGEN","MAPs","N1","N2","N3","A1","A2","A3","R1","R2","R3","RA1","RA2","RA3","RAA1","RAA2","RAA3","nextMAPs","defenses","AC","FORT","REF","WILL","PER","selfDC","targetDC","dCond","BASIC","dieTrends","SPELLLEVEL1","SPELLLEVEL2","LEVEL","HALFLEVEL","RUNE","RUNE2","DEADLY","SNEAK","STRATEGIC","PRECISE","PRECISIONEDGE","PRECISIONEDGE2","PRECISIONEDGE3","KISTRIKE","damageTrends","FIGHTERWEAPONSPEC","MARTIALWEAPONSPEC","CASTERWEAPONSPEC","BOMBPLUS","RAGE","ANIMALRAGE","DRAGONRAGE","GIANTRAGE","SPIRITRAGE","ARCANECASCADE","OVERDRIVES","OVERDRIVEC","IMPLEMENT","CONSTRUCT","NIMBLE","SAVAGE","damageTypes","B","P","S","BLEED","FIRE","COLD","MENTAL","FORCE","PRECISION","materials","COLD_IRON","SILVER","ADAMANTINE","effectStateTypes","FLATFOOT","PRONE","GRAPPLED","RESTRAINED","effectValueTypes","FRIGHTENED","CLUMSY","BONUSC1","BONUSSA","effectTypes","whenConditions","Always","diceSizes","useAppDispatch","useDispatch","useAppSelector","useSelector","weaknessAdapter","createEntityAdapter","weakness","weaknessesSlice","createSlice","name","initialState","getInitialState","reducers","weaknessAdded","addOne","weaknessUpdated","updateOne","weaknessCreated","reducer","state","action","payload","id","type","value","prepare","parentId","weaknessRemoved","removeOne","actions","getSelectors","weaknesses","selectweaknessById","selectById","selectweaknessEntities","selectIds","selectEntities","selectAll","selectTotal","proficiencyValues","levels","valuesFromBonusLevels","concat","addLevel","currentValue","values","i","level","valuesFromBonuses","bonuses","bonus","zero","halfLevel","trained","maxSkill","maxScore","score16pp","score16p","score16","score14p","score14","score12","score10","DexNimbleAC","StrSavageAC","martialProf","alchProf","casterProf","spellProf","weaponItem","skillItem","bomb","mutagen","weaponDice","spellDice","spellDice2","Math","floor","runes","runes2","deadly","sneak","strategic","precise","kiStrike","preEdge1","preEdge2","preEdge3","acDice","martialSpec","casterSpec","constructDamage","nimbleDamage","savageDamage","bombPlusSplash","rage","animalrage","dragonrage","giantrage","spiritrage","arcaneCascade","overdriveSuccess","overdriveCritical","implementEmpower","fighterAB","martialAB","casterAB","alchAB","casterSpellAttack","casterSaveDC","classdc1","classdc2","mcspell","ACunarmedPro","ACathleticsProf","fighterStatic","fighterRanged","martialStatic","martialRanged","casterStatic","casterRanged","profTrendValues","statTrendValues","itemTrendValues","MAPvalues","dieTrendValues","damageTrendValues","extremeAC","highAC","moderateAC","lowAC","gt","defaultACs","defaultSaves","standardDC","defaultHP","targetAdapter","targetsSlice","targetAdded","targetUpdated","changes","updateTargetLevel","targetLevel","extraReducers","builder","addCase","weaknessId","entities","push","filter","wid","targets","selecttargetById","selecttargetEntities","overrideAC","ACTrend","overrideFort","FortTrend","overrideRef","RefTrend","overrideWill","WillTrend","overridePer","PerTrend","currentHP","round","HPTrend","overrideHP","makeOptions","options","element","optionElements","graphTypeOptions","c","levelOptions","rt","conditionOptions","at","rollOptions","pt","activityTypeOptions","st","profTrendOptions","it","statTrendOptions","m","itemBTrendOptions","d","MAPOptions","act","defenseOptions","svt","ACOptions","dc","SaveOptions","dieT","damageConditionOptions","ds","dieTrendOptions","damT","diceSizeOptions","dt","damageTrendOptions","mat","damageTypeOptions","materialOptions","weaknessOptions","multiplierOptions","est","evt","effectTypeOptions","ByLevelInput","levelDiff","percentHP","useState","tempName","setTempName","dispatch","container","spacing","xs","sm","sx","my","py","item","md","lg","fullWidth","label","placeholder","onChange","e","target","onBlur","step","min","max","marks","nv","labelId","justifyContent","px","width","valueLabelDisplay","_","newPercentHP","Number","Strike","Skill","Cantrip","Spell","runeTrends","classes","noOptions","strikeActivities","classOptions","Alchemist","Barbarian","Bard","Champion","Cleric","Druid","Fighter","Gunslinger","Inventor","Investigator","Magus","Monk","Oracle","Ranger","Rogue","Sorcerer","Summoner","Swashbuckler","Witch","Wizard","weaponTraits","critSpecs","skillProfTrends","spellProfTrends","skillActivities","cantrips","spells","attackSpells","getWeaponTraits","weapon","info","dieSize","trait","traits","fatalSize","deadlySize","critSpec","critSpecType","getStrikeName","strikeInfo","useWeapon2","weapon2","weapon1","cClass","classOption","activity","classWeaponProf","className","includes","classWeaponMAP","classAdjustments","strikeNumber","adjustments","numPrevStrikes","twf","activityWeaponDiceAdjustments","hasClassPrecisionDamage","previousHits","classPrecisionDamage","dieTrend","diceSize","damageWhen","damageTrend","hasActivityDamageDice","activityDamageDice","damageType","getSpellDamage","spell","cantripScore","hasSplashDamage","getSplashDamage","damageAdjustments","abilityScore","hasActivityCritDamage","activityCritDamage","persistent","classWeaponDamageTrends","trends","damageScore","thisWeaponStrikes","isStrikeSecondaryWeapon","isWeapon2","classDamageAdjustments","hasBackswing","hasDeadly","hasFatal","hasPickCritSpec","hasKnifeCritSpec","hasCritSpecEffect","hasSwordCritSpec","hasHammerCritSpec","hasSpearCritSpec","critSpecDice","critSpecLevel","critSpecDamage","getSkillTarget","skillInfo","skillActivity","isRoutineObject","routine","display","description","isActivityPaths","apIds","startLevel","endLevel","Array","isArray","apId","Object","condition","rollType","profTrend","statTrend","itemTrend","isAdjustment","bonusAdjustments","MAP","targetType","isDamages","damages","isEffects","effects","damage","dw","damageCondition","dieAdjustments","fatal","fatalDie","material","multiplier","effect","effectCondition","effectType","routinesAdapter","activityPathAdapter","damageAdapter","effectAdapter","routineId","activityPathId","damageId","effectId","empty","one","savedState","serializedState","localStorage","getItem","JSON","parse","routines","ids","activityPaths","err","console","log","loadState","selectedRoutine","selectedActivityPath","undefined","parentRoutine","parentActivity","importRoutine","defaultActivity","defaultStrikeParent","defaultSaveParent","defaultDamage","defaultEffect","effectValue","routinesSlice","setRoutine","stringify","setItem","saveState","setActivityPath","routineAdded","routineUpdated","activityPathAdded","activityPathUpdated","damageAdded","damageUpdated","effectAdded","effectUpdated","routineCreated","copy","copyActivityPaths","routineRemoved","childrenIds","removeActivityPaths","length","setNewActivityParent","emptyActivityPathCreated","activityType","ap","copyDamages","copyEffects","activityPathCreated","cantripInfo","spellInfo","createStrikeActivity","numStrikes","getStrikeRoutineName","proficiency","itemBonus","getSkillRoutineName","createSkillActivity","cantrip","getCantripRoutineName","createCantripActivity","getSpellRoutineName","createSpellActivity","activityPathContinued","parentAP","newDamages","newEffects","activityPathRemoved","damageCreated","damageRemoved","did","effectCreated","effectRemoved","eid","routineObject","insertRoutine","error","selectRoutineById","selectRoutineEntities","selectAllRoutines","selectactivityPathById","selectactivityPathEntities","selectdamageById","selectdamageEntities","selecteffectById","selecteffectEntities","selectSelectedRoutine","selectSelectedActivityPath","selectParentActivityId","selectCreateNewActivity","selectSelectedRoutineObject","getActivityPaths","selectRoutineDescriptions","map","selectImportState","index","removeMany","onCrit","onHit","onMiss","createStrikeDamages","createStrikeEffects","attackScore","addDoubleSliceDamage","doubleSliceCondition","weaponDamage","runeDamage","classDamage","critDamage","activityDamage","splashDamage","critSpecEffect","backswingEffect","createSkillDamages","createSkillEffects","hasSkillDamage","skillDamage","getSkillEffects","skillEffect","createCantripDamages","getCantripTarget","cantripDamage","getCantripDamage","persDamage","createSpellDamages","createSpellEffects","getSpellTarget","spellDamage","crfa","fail","succ","e3","e6","e9","newApIds","newAps","aps","getDamages","getEffects","insertActivityPaths","insertDamages","insertEffects","convolve","vec1","vec2","Error","volume","kernel","displacement","convVec","j","multiplyDist","dam","dist","staticDamage","damageDist","newDist","newDam","oldValue","chance","newValue","diff","applyMin","shift","addDamage","baseContext","context","normal","oldAveDamage","newAveDamage","validateCondition","degreeOfSuccess","indicies","ActivityPathEvaluator","this","routineLevel","ACBonus","resBonus","maxDamage","initialTargetState","persistentDamages","Flatfooted","flatfooted","dataArray","cumulative","expD","routineDDist","activityPath","evalPath","newDamageDist","remainingChance","slice","reduce","pv","cv","applyMax","currentSum","targetState","defenseBonus","resistanceBonus","currentTarget","currentDamages","currentEffects","currentWeaknesses","isLeaf","targetValue","DC","targetDefault","targetPenalty","Frightened","Clumsy","critPercent","dif","getCritSuccessPercent","succPercent","getSuccessPercent","failPercent","getFailurePercent","crfaPercent","getCritFailurePercent","notcrit","nothit","notfail","notcrfa","notsucc","chances","critDamagesByType","succDamagesByType","failDamagesByType","crfaDamagesByType","damageTreesByType","damageTrees","forEach","shouldAddThisDamage","val","diceNum","fatalDist","diceArray","damageTreeIndex","damageTree","finalTree","totalStaticDamage","totalDamageDist","maxW","maxR","persistentMultiplier","calculateExpectedDamage","targetStates","shouldAddThisEffect","Restrained","Grappled","Prone","evaluations","Map","has","pathDist","set","get","dists","distribution","consolidateDists","sharingSlice","graphUrl","singleLevelGraphUrl","imgLink","graphSaved","singleLevelGraphSaved","saveImgLink","Plot","createPlotlyComponent","Plotly","evaluateByLevel","evaluator","datasets","selectedRoutineDamage","percentSelectedRoutine","canEvaluate","evalRoutine","levelArray","expDbyLevel","x","y","yaxis","evaluatePM","defense","expectedDamages","canEvaluateSingleLevel","bonusArray","expDbyBonus","toFixed","evaluateDistribution","useGenerateGraphs","graphType","saveGraph","_figure","graphDiv","toImage","format","height","then","url","saveSingleLevelGraph","title","byLevelTile","xtitle","ytitle","byLeveldatasets","damageChart","data","layout","autosize","xaxis","legend","xanchor","yanchor","margin","l","r","useResizeHandler","style","onInitialized","onUpdate","byLevelDamageChart","SingleLevelInput","toString","setAC","Fort","setFort","Ref","setRef","Will","setWill","Per","setPer","HP","setHP","useEffect","Fragment","p","alignItems","newTargetLevel","focus","newVal","parseInt","inputProps","newCurrentHP","WeaknessInput","tempVal","setTempVal","size","isNaN","AddWeakness","WeaknessSelect","JointInput","perMul","setPerMul","control","checked","parseFloat","ReactGA","initialize","Upload","byLevel","sharing","selectGraphUrl","split","routineDescriptions","isBigEnough","useMediaQuery","theme","breakpoints","up","fd","FormData","append","requestOptions","method","headers","Authorization","body","onClick","event","tab","window","open","fetch","response","json","link","location","catch","alert","close","variant","color","endIcon","Display","showByLevel","setShowByLevel","showSingleLevel","setShowSingleLevel","setGraphType","singleLevelHeight","in","ActivityPathStub","displayChildren","parentActivityId","icon","showMAP","disablePadding","secondaryAction","edge","selected","pl","primary","secondary","TooltipSelect","children","setOpen","onFocus","onMouseEnter","onMouseLeave","minWidth","generateAdjustments","entries","total","currentIndex","adjustmentsFromLevelChange","newLevel","sort","a","b","adjustmentsFromNewEntry","lastValue","LevelList","baseEntries","generateEntries","setEntries","be","levelList","newEntries","ni","Damage","showContent","setShowContent","dieLevelList","damageLevelList","damageTrendList","newdt","splice","damageInfo","mt","mb","bgcolor","multiple","renderValue","join","Divider","textAlign","DamageDisplay","setLevel","diceNumber","averageDamage","fatalString","damageString","columnSpacing","ml","component","Effect","setValue","showValue","validLevels","setValidLevels","align","getAriaLabel","getAriaValueText","v","ActivityPath","mountOnEnter","subheader","href","content_type","item_id","Roll","isSave","bonusLevelList","rollInfo","RollBonusDisplay","totalBonus","SelectedRoutine","createNewActivity","tempDescription","setTempDescription","displayAllRoutines","multiline","Routines","routineOptions","routineDisplays","maxWidth","onDelete","flexWrap","listStyle","ImportExport","importState","messageSeen","setMessageSeen","textValue","setTextValue","navigator","clipboard","writeText","maxRows","NewActivity","setActivityType","StrikeSelection","SkillSelection","CantripSelection","SpellSelection","fromEntries","setStrikeInfo","newStrikeInfo","setClass","WeaponInput","setWeapon","newNumStrikes","isSecondary","row","newIsSecondary","traitName","newTraits","setProficiency","setAbilityScore","setItemBonus","setSkillActivity","setCantrip","setSpell","Controls","Export","Donate","rel","src","alt","Contact","PF2App","send","xl","overflow","exampleRoutines","store","configureStore","routineReducer","weaknessReducer","targetReducer","sharingReducer","makeStore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","createTheme","palette","main","red","background","default","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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gE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEF,MAEF,KAAKjc,EAAMzE,KACTgsB,GACE+D,EACAtT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEF,MAEF,KAAKjc,EAAM1E,KACTisB,GACE8D,EACArT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEF,MAEF,KAAKjc,EAAMtE,cACT6rB,GACE+D,EACAtT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACE8D,EACArT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEF,MAEF,KAAKjc,EAAMrE,cACT4rB,GACEgE,EACAvT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACE+D,EACAtT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACE8D,EACArT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEF,MAEF,KAAKjc,EAAMpE,WACT2rB,GACEiE,EACAxT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACEgE,EACAvT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEF,MAEF,KAAKjc,EAAMnE,WACT0rB,GACEiE,EACAxT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACEgE,EACAvT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACE+D,EACAtT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAGF,MAEF,KAAKjc,EAAM3E,OACTksB,GACEiE,EACAxT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACEgE,EACAvT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACE+D,EACAtT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEFsL,GACE8D,EACArT,EACAgE,EACAtD,EACAmO,EACAC,EACa,EAAb7K,GAEF,MAEF,QACEwB,QAAQC,IAAR,2B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","file":"static/js/main.65a4734c.chunk.js","sourcesContent":["import {\r\n  ACTrends,\r\n  profTrends,\r\n  damageTrends,\r\n  dieTrends,\r\n  SaveTrends,\r\n  statTrends,\r\n  itemTrends,\r\n  HPTrends,\r\n} from \"./types\";\r\n\r\ninterface defaultValue {\r\n  [x: number]: number;\r\n}\r\n\r\nexport const proficiencyValues = (levels: number[]) => {\r\n  return valuesFromBonusLevels(levels.concat(levels), true);\r\n};\r\n\r\nexport const valuesFromBonusLevels = (levels: number[], addLevel = false) => {\r\n  let currentValue = 0;\r\n  let values: defaultValue = {};\r\n  for (let i = 1; i <= 20; i++) {\r\n    for (let level of levels) {\r\n      if (level === i) {\r\n        currentValue += 1;\r\n      }\r\n    }\r\n    values[i] = addLevel ? currentValue + i : currentValue;\r\n  }\r\n  return values;\r\n};\r\nexport const valuesFromBonuses = (bonuses: [number, number][]) => {\r\n  let currentValue = 0;\r\n  let values: defaultValue = {};\r\n  for (let i = 1; i <= 20; i++) {\r\n    for (let bonus of bonuses) {\r\n      if (bonus[0] === i) {\r\n        currentValue += bonus[1];\r\n      }\r\n    }\r\n    values[i] = currentValue;\r\n  }\r\n  return values;\r\n};\r\n\r\nconst zero: defaultValue = {};\r\nconst level: defaultValue = {};\r\nconst halfLevel: defaultValue = {};\r\n\r\nconst trained: defaultValue = {};\r\nconst maxSkill: defaultValue = {};\r\n\r\nconst maxScore: defaultValue = {};\r\nconst score16pp: defaultValue = {};\r\nconst score16p: defaultValue = {};\r\nconst score16: defaultValue = {};\r\nconst score14p: defaultValue = {};\r\nconst score14: defaultValue = {};\r\nconst score12: defaultValue = {};\r\nconst score10: defaultValue = {};\r\nconst DexNimbleAC: defaultValue = {};\r\nconst StrSavageAC: defaultValue = {};\r\n\r\nconst martialProf: defaultValue = {};\r\nconst alchProf: defaultValue = {};\r\nconst casterProf: defaultValue = {};\r\n\r\nconst spellProf: defaultValue = {};\r\n\r\nconst weaponItem: defaultValue = {};\r\nconst skillItem: defaultValue = {};\r\nconst bomb: defaultValue = {};\r\nconst mutagen: defaultValue = {};\r\n\r\nconst weaponDice: defaultValue = {};\r\nconst spellDice: defaultValue = {};\r\nconst spellDice2: defaultValue = {};\r\nfor (let i = 1; i <= 20; i++) {\r\n  spellDice[i] = Math.floor((i + 1) / 2);\r\n  spellDice2[i] = 2 * Math.floor((i + 1) / 2);\r\n}\r\nconst runes: defaultValue = {};\r\nconst runes2: defaultValue = {};\r\nconst deadly: defaultValue = {};\r\n\r\nconst sneak: defaultValue = {};\r\nconst strategic: defaultValue = {};\r\nconst precise: defaultValue = {};\r\n\r\nconst kiStrike: defaultValue = {};\r\n\r\nconst preEdge1: defaultValue = {};\r\nconst preEdge2: defaultValue = {};\r\nconst preEdge3: defaultValue = {};\r\n\r\nconst acDice: defaultValue = {};\r\n\r\nconst martialSpec: defaultValue = {};\r\nconst casterSpec: defaultValue = {};\r\n\r\nconst constructDamage: defaultValue = {};\r\nconst nimbleDamage: defaultValue = {};\r\nconst savageDamage: defaultValue = {};\r\n\r\nconst bombPlusSplash: defaultValue = {};\r\n\r\nconst rage: defaultValue = {};\r\nconst animalrage: defaultValue = {};\r\nconst dragonrage: defaultValue = {};\r\nconst giantrage: defaultValue = {};\r\nconst spiritrage: defaultValue = {};\r\n\r\nconst arcaneCascade: defaultValue = {};\r\n\r\nconst overdriveSuccess: defaultValue = {};\r\nconst overdriveCritical: defaultValue = {};\r\n\r\nconst implementEmpower: defaultValue = {};\r\n\r\nconst fighterAB: defaultValue = {};\r\nconst martialAB: defaultValue = {};\r\nconst casterAB: defaultValue = {};\r\nconst alchAB: defaultValue = {};\r\n\r\nconst casterSpellAttack: defaultValue = {};\r\nconst casterSaveDC: defaultValue = {};\r\nconst classdc1: defaultValue = {};\r\nconst classdc2: defaultValue = {};\r\nconst mcspell: defaultValue = {};\r\n\r\nconst ACunarmedPro: defaultValue = {};\r\nconst ACathleticsProf: defaultValue = {};\r\n\r\nconst fighterStatic: defaultValue = {};\r\nconst fighterRanged: defaultValue = {};\r\nconst martialStatic: defaultValue = {};\r\nconst martialRanged: defaultValue = {};\r\nconst casterStatic: defaultValue = {};\r\nconst casterRanged: defaultValue = {};\r\n\r\nfor (let i = 1; i <= 20; i++) {\r\n  zero[i] = 0;\r\n  level[i] = i;\r\n  halfLevel[i] = Math.floor(i / 2);\r\n  trained[i] = i + 2;\r\n  maxSkill[i] = i + 2;\r\n\r\n  maxScore[i] = 4;\r\n  score16pp[i] = 3;\r\n  score16p[i] = 3;\r\n  score16[i] = 3;\r\n  score14p[i] = 2;\r\n  score14[i] = 2;\r\n  score12[i] = 1;\r\n  score10[i] = 0;\r\n  DexNimbleAC[i] = 3;\r\n  StrSavageAC[i] = 3;\r\n\r\n  martialProf[i] = 2;\r\n  alchProf[i] = 2;\r\n  casterProf[i] = 2;\r\n\r\n  spellProf[i] = 2;\r\n  classdc1[i] = i + 2;\r\n  classdc2[i] = i + 2;\r\n  mcspell[i] = i + 2;\r\n\r\n  ACunarmedPro[i] = i + 2;\r\n  ACathleticsProf[i] = i + 2;\r\n\r\n  weaponItem[i] = 0;\r\n  skillItem[i] = 0;\r\n  bomb[i] = 0;\r\n  mutagen[i] = 1;\r\n\r\n  weaponDice[i] = 1;\r\n  runes[i] = 0;\r\n  runes2[i] = 0;\r\n  deadly[i] = 1;\r\n\r\n  sneak[i] = 1;\r\n  strategic[i] = 1;\r\n  precise[i] = 2;\r\n\r\n  kiStrike[i] = 1;\r\n\r\n  acDice[i] = 1;\r\n\r\n  preEdge1[i] = 1;\r\n  preEdge2[i] = 0;\r\n  preEdge3[i] = 0;\r\n\r\n  martialSpec[i] = 0;\r\n  casterSpec[i] = 0;\r\n\r\n  constructDamage[i] = 3;\r\n  nimbleDamage[i] = 2;\r\n  savageDamage[i] = 3;\r\n\r\n  bombPlusSplash[i] = 1;\r\n\r\n  rage[i] = 2;\r\n  animalrage[i] = 2;\r\n  dragonrage[i] = 4;\r\n  giantrage[i] = 6;\r\n  spiritrage[i] = 3;\r\n\r\n  arcaneCascade[i] = 1;\r\n\r\n  overdriveSuccess[i] = 2;\r\n  overdriveCritical[i] = 4;\r\n\r\n  implementEmpower[i] = 2;\r\n\r\n  if (i >= 2) {\r\n    weaponItem[i] = 1;\r\n  }\r\n  if (i >= 3) {\r\n    maxSkill[i] = i + 4;\r\n    skillItem[i] = 1;\r\n    bomb[i] = 1;\r\n    mutagen[i] = 2;\r\n\r\n    bombPlusSplash[i] = 2;\r\n\r\n    overdriveSuccess[i] = 3;\r\n    overdriveCritical[i] = 5;\r\n\r\n    implementEmpower[i] = 4;\r\n  }\r\n  if (i >= 4) {\r\n    weaponDice[i] = 2;\r\n    acDice[i] = 2;\r\n\r\n    constructDamage[i] = 4;\r\n    nimbleDamage[i] = 3;\r\n    savageDamage[i] = 4;\r\n\r\n    bombPlusSplash[i] = 4;\r\n\r\n    DexNimbleAC[i] = 4;\r\n    StrSavageAC[i] = 4;\r\n  }\r\n  if (i >= 5) {\r\n    martialProf[i] = 4;\r\n    score16pp[i] = 4;\r\n    score16p[i] = 4;\r\n    score16[i] = 4;\r\n    score14p[i] = 3;\r\n    score14[i] = 3;\r\n    score12[i] = 2;\r\n    score10[i] = 1;\r\n\r\n    sneak[i] = 2;\r\n    strategic[i] = 2;\r\n    precise[i] = 3;\r\n  }\r\n  if (i >= 7) {\r\n    alchProf[i] = 4;\r\n    martialSpec[i] = 1;\r\n    spellProf[i] = 4;\r\n    maxSkill[i] = i + 6;\r\n\r\n    rage[i] = 6;\r\n    animalrage[i] = 5;\r\n    dragonrage[i] = 8;\r\n    giantrage[i] = 10;\r\n    spiritrage[i] = 7;\r\n\r\n    arcaneCascade[i] = 2;\r\n\r\n    overdriveSuccess[i] = 4;\r\n    overdriveCritical[i] = 6;\r\n  }\r\n  if (i >= 8) {\r\n    ACathleticsProf[i] = i + 4;\r\n\r\n    runes[i] = 1;\r\n    runes2[i] = 1;\r\n\r\n    constructDamage[i] = 8;\r\n    nimbleDamage[i] = 6;\r\n    savageDamage[i] = 9;\r\n\r\n    DexNimbleAC[i] = 6;\r\n    StrSavageAC[i] = 6;\r\n  }\r\n  if (i >= 9) {\r\n    skillItem[i] = 2;\r\n    classdc1[i] = i + 4;\r\n\r\n    strategic[i] = 3;\r\n    precise[i] = 4;\r\n\r\n    kiStrike[i] = 2;\r\n  }\r\n  if (i >= 10) {\r\n    weaponItem[i] = 2;\r\n    maxScore[i] = 5;\r\n    score14p[i] = 4;\r\n    score14[i] = 4;\r\n    score12[i] = 3;\r\n    score10[i] = 2;\r\n\r\n    runes2[i] = 2;\r\n\r\n    bombPlusSplash[i] = 7;\r\n\r\n    overdriveCritical[i] = 7;\r\n  }\r\n  if (i >= 11) {\r\n    casterProf[i] = 4;\r\n    classdc2[i] = i + 4;\r\n\r\n    bomb[i] = 2;\r\n    mutagen[i] = 3;\r\n\r\n    bombPlusSplash[i] = 8;\r\n\r\n    sneak[i] = 3;\r\n    implementEmpower[i] = 6;\r\n\r\n    preEdge1[i] = 2;\r\n  }\r\n  if (i >= 12) {\r\n    weaponDice[i] = 3;\r\n    mcspell[i] = i + 4;\r\n    deadly[i] = 2;\r\n  }\r\n  if (i >= 13) {\r\n    martialProf[i] = 6;\r\n    casterSpec[i] = 1;\r\n\r\n    strategic[i] = 4;\r\n    precise[i] = 5;\r\n  }\r\n  if (i >= 14) {\r\n    ACunarmedPro[i] = i + 4;\r\n    ACathleticsProf[i] = i + 6;\r\n\r\n    acDice[i] = 3;\r\n    constructDamage[i] = 11;\r\n    nimbleDamage[i] = 8;\r\n    savageDamage[i] = 13;\r\n\r\n    DexNimbleAC[i] = 8;\r\n    StrSavageAC[i] = 7;\r\n  }\r\n  if (i >= 15) {\r\n    martialSpec[i] = 2;\r\n    score16pp[i] = 5;\r\n    score16p[i] = 5;\r\n    score12[i] = 4;\r\n    score10[i] = 3;\r\n    spellProf[i] = 6;\r\n    maxSkill[i] = i + 8;\r\n    runes[i] = 2;\r\n\r\n    rage[i] = 12;\r\n    animalrage[i] = 12;\r\n    dragonrage[i] = 16;\r\n    giantrage[i] = 18;\r\n    spiritrage[i] = 13;\r\n\r\n    arcaneCascade[i] = 1;\r\n\r\n    overdriveSuccess[i] = 5;\r\n    overdriveCritical[i] = 8;\r\n  }\r\n  if (i >= 16) {\r\n    weaponItem[i] = 3;\r\n    runes2[i] = 3;\r\n  }\r\n  if (i >= 17) {\r\n    score16pp[i] = 6;\r\n    maxScore[i] = 6;\r\n    skillItem[i] = 3;\r\n    classdc1[i] = i + 6;\r\n    bomb[i] = 3;\r\n    mutagen[i] = 4;\r\n    bombPlusSplash[i] = 10;\r\n\r\n    sneak[i] = 4;\r\n    strategic[i] = 5;\r\n    precise[i] = 6;\r\n\r\n    kiStrike[i] = 3;\r\n\r\n    preEdge2[i] = 1;\r\n\r\n    overdriveSuccess[i] = 6;\r\n    overdriveCritical[i] = 9;\r\n  }\r\n  if (i >= 18) {\r\n    mcspell[i] = i + 6;\r\n  }\r\n  if (i >= 19) {\r\n    weaponDice[i] = 4;\r\n    spellProf[i] = 8;\r\n    classdc2[i] = i + 6;\r\n    deadly[i] = 3;\r\n\r\n    implementEmpower[i] = 8;\r\n\r\n    preEdge1[i] = 3;\r\n    preEdge2[i] = 2;\r\n    preEdge3[i] = 1;\r\n  }\r\n  if (i >= 20) {\r\n    maxScore[i] = 7;\r\n    score10[i] = 4;\r\n    bombPlusSplash[i] = 11;\r\n\r\n    overdriveCritical[i] = 10;\r\n  }\r\n\r\n  fighterAB[i] = i + martialProf[i] + 2;\r\n  martialAB[i] = i + martialProf[i];\r\n  casterAB[i] = i + casterProf[i];\r\n  alchAB[i] = i + alchProf[i];\r\n  casterSpellAttack[i] = i + spellProf[i];\r\n  casterSaveDC[i] = 10 + i + spellProf[i] + maxScore[i];\r\n\r\n  fighterStatic[i] = maxScore[i] + (martialSpec[i] * (martialProf[i] + 2)) / 2;\r\n  fighterRanged[i] = (martialSpec[i] * (martialProf[i] + 2)) / 2;\r\n  martialStatic[i] = maxScore[i] + (martialSpec[i] * martialProf[i]) / 2;\r\n  martialRanged[i] = (martialSpec[i] * martialProf[i]) / 2;\r\n  casterStatic[i] = score16[i] + (casterSpec[i] * casterProf[i]) / 2;\r\n  casterRanged[i] = (casterSpec[i] * casterProf[i]) / 2;\r\n}\r\nexport const profTrendValues = {\r\n  [profTrends.UNTRAINED]: valuesFromBonusLevels([]),\r\n  [profTrends.TRAINED]: proficiencyValues([1]),\r\n  [profTrends.FIGHTERWEAPON]: proficiencyValues([1, 1, 5, 13]),\r\n  [profTrends.MARTIALWEAPON]: proficiencyValues([1, 5, 13]),\r\n  [profTrends.CASTERWEAPON]: proficiencyValues([1, 11]),\r\n  [profTrends.ALCHWEAPON]: proficiencyValues([1, 7]),\r\n  [profTrends.CASTERSPELL]: proficiencyValues([1, 7, 15, 19]),\r\n  [profTrends.CLASSDC1]: proficiencyValues([1, 9, 17]),\r\n  [profTrends.CLASSDC2]: proficiencyValues([1, 11, 19]),\r\n  [profTrends.MCSPELL]: proficiencyValues([1, 12, 18]),\r\n  [profTrends.MAXSKILL]: proficiencyValues([1, 3, 7, 15]),\r\n  [profTrends.ANIMALCOMPANION]: proficiencyValues([1, 14]),\r\n  [profTrends.SAVAGEACATHLETICS]: proficiencyValues([1, 4, 14]),\r\n};\r\nexport const statTrendValues = {\r\n  [statTrends.AS10]: valuesFromBonusLevels([]),\r\n  [statTrends.AS18]: valuesFromBonusLevels([1, 1, 1, 1, 10, 20]),\r\n  [statTrends.AS18a]: valuesFromBonusLevels([1, 1, 1, 1, 10, 17, 20]),\r\n  [statTrends.AS16a]: valuesFromBonusLevels([1, 1, 1, 5, 15, 17]),\r\n  [statTrends.AS16pp]: valuesFromBonusLevels([1, 1, 1, 5, 15]),\r\n  [statTrends.AS16p]: valuesFromBonusLevels([1, 1, 1, 5]),\r\n  [statTrends.AS14pp]: valuesFromBonusLevels([1, 1, 5, 10, 20]),\r\n  [statTrends.AS14p]: valuesFromBonusLevels([1, 1, 5, 10]),\r\n  [statTrends.AS12p]: valuesFromBonusLevels([1, 5, 10, 15]),\r\n  [statTrends.AS10p]: valuesFromBonusLevels([5, 10, 15, 20]),\r\n  [statTrends.NIMBLEAC]: DexNimbleAC,\r\n  [statTrends.SAVAGEAC]: StrSavageAC,\r\n};\r\nexport const itemTrendValues = {\r\n  [itemTrends.NONE]: valuesFromBonusLevels([]),\r\n  [itemTrends.WEAPON]: weaponItem,\r\n  [itemTrends.SKILL]: skillItem,\r\n  [itemTrends.BOMB]: bomb,\r\n  [itemTrends.MUTAGEN]: mutagen,\r\n};\r\n\r\nexport const MAPvalues = {\r\n  \"0 (0x-5)\": 0,\r\n  \"-5 (1x-5)\": -5,\r\n  \"-10 (2x-5)\": -10,\r\n  \"0 (0x-4)\": 0,\r\n  \"-4 (1x-4)\": -4,\r\n  \"-8 (2x-4)\": -8,\r\n  \"0 (0x-3)\": 0,\r\n  \"-3 (1x-3)\": -3,\r\n  \"-6 (2x-3)\": -6,\r\n  \"0 (0x-2)\": 0,\r\n  \"-2 (1x-2)\": -2,\r\n  \"-4 (2x-2)\": -4,\r\n  \"0 (0x-1)\": 0,\r\n  \"-1 (1x-1)\": -1,\r\n  \"-2 (2x-1)\": -2,\r\n};\r\n\r\nexport const dieTrendValues = {\r\n  [dieTrends.NONE]: zero,\r\n  [dieTrends.WEAPON]: weaponDice,\r\n  [dieTrends.SPELLLEVEL1]: spellDice,\r\n  [dieTrends.SPELLLEVEL2]: spellDice2,\r\n  [dieTrends.LEVEL]: level,\r\n  [dieTrends.HALFLEVEL]: halfLevel,\r\n  [dieTrends.RUNE]: runes,\r\n  [dieTrends.RUNE2]: runes2,\r\n  [dieTrends.DEADLY]: deadly,\r\n  [dieTrends.BOMB]: mutagen,\r\n  [dieTrends.SNEAK]: sneak,\r\n  [dieTrends.STRATEGIC]: strategic,\r\n  [dieTrends.PRECISE]: precise,\r\n  [dieTrends.PRECISIONEDGE]: preEdge1,\r\n  [dieTrends.PRECISIONEDGE2]: preEdge2,\r\n  [dieTrends.PRECISIONEDGE3]: preEdge3,\r\n  [dieTrends.KISTRIKE]: kiStrike,\r\n  [dieTrends.ANIMALCOMPANION]: acDice,\r\n};\r\n\r\nexport const damageTrendValues = {\r\n  ...statTrendValues,\r\n  [damageTrends.NONE]: zero,\r\n  [damageTrends.FIGHTERWEAPONSPEC]: fighterRanged,\r\n  [damageTrends.MARTIALWEAPONSPEC]: martialRanged,\r\n  [damageTrends.CASTERWEAPONSPEC]: casterRanged,\r\n  [damageTrends.WEAPON]: weaponDice,\r\n  [damageTrends.SPELLLEVEL1]: spellDice,\r\n  [damageTrends.LEVEL]: level,\r\n  [damageTrends.HALFLEVEL]: halfLevel,\r\n  [damageTrends.BOMB]: mutagen,\r\n  [damageTrends.BOMBPLUS]: bombPlusSplash,\r\n  [damageTrends.RAGE]: rage,\r\n  [damageTrends.ANIMALRAGE]: animalrage,\r\n  [damageTrends.DRAGONRAGE]: dragonrage,\r\n  [damageTrends.GIANTRAGE]: giantrage,\r\n  [damageTrends.SPIRITRAGE]: spiritrage,\r\n  [damageTrends.PRECISE]: precise,\r\n  [damageTrends.ARCANECASCADE]: arcaneCascade,\r\n  [damageTrends.OVERDRIVES]: overdriveSuccess,\r\n  [damageTrends.OVERDRIVEC]: overdriveCritical,\r\n  [damageTrends.IMPLEMENT]: implementEmpower,\r\n  [damageTrends.CONSTRUCT]: constructDamage,\r\n  [damageTrends.NIMBLE]: nimbleDamage,\r\n  [damageTrends.SAVAGE]: savageDamage,\r\n};\r\n\r\nconst extremeAC: defaultValue = {\r\n  \"-1\": 18,\r\n  0: 19,\r\n  1: 19,\r\n  2: 21,\r\n  3: 22,\r\n  4: 24,\r\n  5: 25,\r\n  6: 27,\r\n  7: 28,\r\n  8: 30,\r\n  9: 31,\r\n  10: 33,\r\n  11: 34,\r\n  12: 36,\r\n  13: 37,\r\n  14: 39,\r\n  15: 40,\r\n  16: 42,\r\n  17: 43,\r\n  18: 45,\r\n  19: 46,\r\n  20: 48,\r\n  21: 49,\r\n  22: 51,\r\n  23: 52,\r\n  24: 54,\r\n};\r\nconst highAC = { ...extremeAC };\r\nfor (let level in highAC) highAC[level] -= 3;\r\n\r\nconst moderateAC = { ...extremeAC };\r\nfor (let level in moderateAC) moderateAC[level] -= 4;\r\n\r\nconst lowAC = { ...extremeAC };\r\nfor (let level in lowAC) lowAC[level] -= 6;\r\n\r\nexport const defaultACs = {\r\n  [ACTrends.EXTREME]: extremeAC,\r\n  [ACTrends.HIGH]: highAC,\r\n  [ACTrends.MODERATE]: moderateAC,\r\n  [ACTrends.LOW]: lowAC,\r\n};\r\n\r\nconst extremeSaves: defaultValue = {\r\n  \"-1\": 9,\r\n  0: 10,\r\n  1: 11,\r\n  2: 12,\r\n  3: 14,\r\n  4: 15,\r\n  5: 17,\r\n  6: 18,\r\n  7: 20,\r\n  8: 21,\r\n  9: 23,\r\n  10: 24,\r\n  11: 26,\r\n  12: 27,\r\n  13: 29,\r\n  14: 30,\r\n  15: 32,\r\n  16: 33,\r\n  17: 35,\r\n  18: 36,\r\n  19: 38,\r\n  20: 39,\r\n  21: 41,\r\n  22: 43,\r\n  23: 44,\r\n  24: 46,\r\n};\r\nconst highSaves: defaultValue = {\r\n  \"-1\": 8,\r\n  0: 9,\r\n  1: 10,\r\n  2: 11,\r\n  3: 12,\r\n  4: 14,\r\n  5: 15,\r\n  6: 17,\r\n  7: 18,\r\n  8: 19,\r\n  9: 21,\r\n  10: 22,\r\n  11: 24,\r\n  12: 25,\r\n  13: 26,\r\n  14: 28,\r\n  15: 29,\r\n  16: 30,\r\n  17: 32,\r\n  18: 33,\r\n  19: 35,\r\n  20: 36,\r\n  21: 38,\r\n  22: 39,\r\n  23: 40,\r\n  24: 42,\r\n};\r\nconst moderateSaves: defaultValue = {\r\n  \"-1\": 5,\r\n  0: 6,\r\n  1: 7,\r\n  2: 8,\r\n  3: 9,\r\n  4: 11,\r\n  5: 12,\r\n  6: 14,\r\n  7: 15,\r\n  8: 16,\r\n  9: 18,\r\n  10: 19,\r\n  11: 21,\r\n  12: 22,\r\n  13: 23,\r\n  14: 25,\r\n  15: 26,\r\n  16: 28,\r\n  17: 29,\r\n  18: 30,\r\n  19: 32,\r\n  20: 33,\r\n  21: 35,\r\n  22: 36,\r\n  23: 37,\r\n  24: 38,\r\n};\r\nconst lowSaves: defaultValue = {\r\n  \"-1\": 2,\r\n  0: 3,\r\n  1: 4,\r\n  2: 5,\r\n  3: 6,\r\n  4: 8,\r\n  5: 9,\r\n  6: 11,\r\n  7: 12,\r\n  8: 13,\r\n  9: 15,\r\n  10: 16,\r\n  11: 18,\r\n  12: 19,\r\n  13: 20,\r\n  14: 22,\r\n  15: 23,\r\n  16: 25,\r\n  17: 26,\r\n  18: 27,\r\n  19: 29,\r\n  20: 30,\r\n  21: 32,\r\n  22: 33,\r\n  23: 34,\r\n  24: 36,\r\n};\r\nconst terribleSaves: defaultValue = {\r\n  \"-1\": 0,\r\n  0: 1,\r\n  1: 2,\r\n  2: 3,\r\n  3: 4,\r\n  4: 6,\r\n  5: 7,\r\n  6: 8,\r\n  7: 10,\r\n  8: 11,\r\n  9: 12,\r\n  10: 14,\r\n  11: 15,\r\n  12: 16,\r\n  13: 18,\r\n  14: 19,\r\n  15: 20,\r\n  16: 22,\r\n  17: 23,\r\n  18: 24,\r\n  19: 26,\r\n  20: 27,\r\n  21: 28,\r\n  22: 30,\r\n  23: 31,\r\n  24: 32,\r\n};\r\nexport const defaultSaves = {\r\n  [SaveTrends.EXTREME]: extremeSaves,\r\n  [SaveTrends.HIGH]: highSaves,\r\n  [SaveTrends.MODERATE]: moderateSaves,\r\n  [SaveTrends.LOW]: lowSaves,\r\n  [SaveTrends.TERRIBLE]: terribleSaves,\r\n};\r\nexport const standardDC: defaultValue = {\r\n  \"-1\": 12,\r\n  0: 14,\r\n  1: 15,\r\n  2: 16,\r\n  3: 18,\r\n  4: 19,\r\n  5: 20,\r\n  6: 22,\r\n  7: 23,\r\n  8: 24,\r\n  9: 26,\r\n  10: 27,\r\n  11: 28,\r\n  12: 30,\r\n  13: 31,\r\n  14: 32,\r\n  15: 34,\r\n  16: 35,\r\n  17: 36,\r\n  18: 38,\r\n  19: 39,\r\n  20: 40,\r\n  21: 42,\r\n  22: 44,\r\n  23: 46,\r\n  24: 48,\r\n  25: 50,\r\n} as const;\r\n\r\nconst lowHP: defaultValue = {\r\n  \"-1\": 5,\r\n  0: 12,\r\n  1: 15,\r\n  2: 23,\r\n  3: 34,\r\n  4: 45,\r\n  5: 56,\r\n  6: 71,\r\n  7: 86,\r\n  8: 101,\r\n  9: 116,\r\n  10: 131,\r\n  11: 146,\r\n  12: 161,\r\n  13: 176,\r\n  14: 191,\r\n  15: 206,\r\n  16: 221,\r\n  17: 236,\r\n  18: 251,\r\n  19: 266,\r\n  20: 281,\r\n  21: 300,\r\n  22: 323,\r\n  23: 345,\r\n  24: 375,\r\n} as const;\r\n\r\nconst moderateHP: defaultValue = {\r\n  \"-1\": 7,\r\n  0: 15,\r\n  1: 20,\r\n  2: 30,\r\n  3: 45,\r\n  4: 60,\r\n  5: 75,\r\n  6: 95,\r\n  7: 115,\r\n  8: 135,\r\n  9: 155,\r\n  10: 175,\r\n  11: 195,\r\n  12: 215,\r\n  13: 235,\r\n  14: 255,\r\n  15: 275,\r\n  16: 295,\r\n  17: 315,\r\n  18: 335,\r\n  19: 355,\r\n  20: 375,\r\n  21: 400,\r\n  22: 430,\r\n  23: 460,\r\n  24: 500,\r\n} as const;\r\n\r\nconst highHP: defaultValue = {\r\n  \"-1\": 9,\r\n  0: 18,\r\n  1: 25,\r\n  2: 38,\r\n  3: 56,\r\n  4: 75,\r\n  5: 94,\r\n  6: 119,\r\n  7: 144,\r\n  8: 169,\r\n  9: 194,\r\n  10: 219,\r\n  11: 244,\r\n  12: 269,\r\n  13: 294,\r\n  14: 319,\r\n  15: 344,\r\n  16: 369,\r\n  17: 394,\r\n  18: 419,\r\n  19: 444,\r\n  20: 469,\r\n  21: 499,\r\n  22: 538,\r\n  23: 575,\r\n  24: 625,\r\n} as const;\r\n\r\nexport const defaultHP = {\r\n  [HPTrends.HIGH]: highHP,\r\n  [HPTrends.MODERATE]: moderateHP,\r\n  [HPTrends.LOW]: lowHP,\r\n};\r\n","export const graphTypes = {\r\n  DISTRIBUTION: \"Damage Distribution\",\r\n  PMDEFENSE: \"+/- AC/Save Bonus\",\r\n  PMRES: \"+/- Resistance/Weakness\",\r\n} as const;\r\nexport type GraphType = typeof graphTypes[keyof typeof graphTypes];\r\n\r\nexport const importStates = {\r\n  Importing: \"Importing\",\r\n  Successful: \"Successful\",\r\n  Failure: \"Failure\",\r\n  MessageSeen: \"Message Seen\",\r\n} as const;\r\nexport type ImportStates = typeof importStates[keyof typeof importStates];\r\n\r\nexport const ACTrends = {\r\n  LOW: \"Low\",\r\n  MODERATE: \"Moderate\",\r\n  HIGH: \"High\",\r\n  EXTREME: \"Extreme\",\r\n} as const;\r\nexport type ACTrend = typeof ACTrends[keyof typeof ACTrends];\r\n\r\nexport const SaveTrends = {\r\n  TERRIBLE: \"Terrible\",\r\n  LOW: \"Low\",\r\n  MODERATE: \"Moderate\",\r\n  HIGH: \"High\",\r\n  EXTREME: \"Extreme\",\r\n} as const;\r\nexport type SaveTrend = typeof SaveTrends[keyof typeof SaveTrends];\r\n\r\nexport const HPTrends = {\r\n  LOW: \"Low\",\r\n  MODERATE: \"Moderate\",\r\n  HIGH: \"High\",\r\n} as const;\r\nexport type HPTrend = typeof HPTrends[keyof typeof HPTrends];\r\n\r\nexport const conditions = {\r\n  ALWAYS: \"Always\",\r\n  CRIT: \"On Crit\",\r\n  SUCC: \"On Success\",\r\n  FAIL: \"On Failure\",\r\n  CRIF: \"On Crit Fail\",\r\n  AT_LEAST_SUCC: \"Success or better\",\r\n  AT_LEAST_FAIL: \"Failure or better\",\r\n  FAIL_WORSE: \"Failure or worse\",\r\n  SUCC_WORSE: \"Success or worse\",\r\n} as const;\r\nexport type Condition = typeof conditions[keyof typeof conditions];\r\n\r\nexport const rollTypes = {\r\n  NORMAL: \"Normal\",\r\n  ADVANTAGE: \"Advantage\",\r\n  DISADVANTAGE: \"Disadvantage\",\r\n} as const;\r\nexport type RollType = typeof rollTypes[keyof typeof rollTypes];\r\n\r\nexport const activityTypes = {\r\n  STRIKE: \"Strike\",\r\n  SAVE: \"Save\",\r\n  SKILL: \"Skill Check\",\r\n  SPELLATTACK: \"Spell Attack\",\r\n} as const;\r\nexport type ActivityType = typeof activityTypes[keyof typeof activityTypes];\r\n\r\nexport const profTrends = {\r\n  UNTRAINED: \"Untrained\",\r\n  TRAINED: \"Trained Proficiency\",\r\n  FIGHTERWEAPON: \"Fighter Weapon (1, 5, 13)\",\r\n  MARTIALWEAPON: \"Martial Weapon (5, 13)\",\r\n  CASTERWEAPON: \"Caster Weapon (11)\",\r\n  ALCHWEAPON: \"Alchemist Weapon (7)\",\r\n  CASTERSPELL: \"Caster Spell (7, 15, 19)\",\r\n  CLASSDC1: \"Class/Spell (9, 17)\",\r\n  CLASSDC2: \"Class/Spell (11, 19)\",\r\n  MCSPELL: \"MC Spell (12, 18)\",\r\n  MAXSKILL: \"Max skill (3, 7, 15)\",\r\n  ANIMALCOMPANION: \"Animal/Construct Companion (14)\",\r\n  SAVAGEACATHLETICS: \"Construct/Savage AC Atheletics (8, 14)\",\r\n} as const;\r\nexport type ProfTrend = typeof profTrends[keyof typeof profTrends];\r\n\r\nexport const statTrends = {\r\n  AS10: \"10\",\r\n  AS18a: \"18 to 24 apex(17)\",\r\n  AS18: \"18 to 22\",\r\n  AS16a: \"16 to 22 apex(17)\",\r\n  AS16pp: \"16 to 20\",\r\n  AS16p: \"16 to 18\",\r\n  AS14pp: \"14 to 20\",\r\n  AS14p: \"14 to 18\",\r\n  AS12p: \"12 to 18\",\r\n  AS10p: \"10 to 18\",\r\n  NIMBLEAC: \"Dex 16 Nimble AC\",\r\n  SAVAGEAC: \"Str 16 Construct/Savage AC\",\r\n} as const;\r\nexport type StatTrend = typeof statTrends[keyof typeof statTrends];\r\n\r\nexport const itemTrends = {\r\n  NONE: \"None\",\r\n  WEAPON: \"Weapon (2, 10, 16)\",\r\n  SKILL: \"Skill (3, 9, 17)\",\r\n  BOMB: \"Bomb (3, 11, 17)\",\r\n  MUTAGEN: \"Mutagen (1, 3, 11, 17)\",\r\n} as const;\r\nexport type ItemTrend = typeof itemTrends[keyof typeof itemTrends];\r\n\r\nexport const MAPs = {\r\n  N1: \"0 (0x-5)\",\r\n  N2: \"-5 (1x-5)\",\r\n  N3: \"-10 (2x-5)\",\r\n  A1: \"0 (0x-4)\",\r\n  A2: \"-4 (1x-4)\",\r\n  A3: \"-8 (2x-4)\",\r\n  R1: \"0 (0x-3)\",\r\n  R2: \"-3 (1x-3)\",\r\n  R3: \"-6 (2x-3)\",\r\n  RA1: \"0 (0x-2)\",\r\n  RA2: \"-2 (1x-2)\",\r\n  RA3: \"-4 (2x-2)\",\r\n  RAA1: \"0 (0x-1)\",\r\n  RAA2: \"-1 (1x-1)\",\r\n  RAA3: \"-2 (2x-1)\",\r\n} as const;\r\nexport type MAP = typeof MAPs[keyof typeof MAPs];\r\n\r\nexport const nextMAPs = {\r\n  \"0 (0x-5)\": \"-5 (1x-5)\",\r\n  \"-5 (1x-5)\": \"-10 (2x-5)\",\r\n  \"-10 (2x-5)\": \"-10 (2x-5)\",\r\n  \"0 (0x-4)\": \"-4 (1x-4)\",\r\n  \"-4 (1x-4)\": \"-8 (2x-4)\",\r\n  \"-8 (2x-4)\": \"-8 (2x-4)\",\r\n  \"0 (0x-3)\": \"-3 (1x-3)\",\r\n  \"-3 (1x-3)\": \"-6 (2x-3)\",\r\n  \"-6 (2x-3)\": \"-6 (2x-3)\",\r\n  \"0 (0x-2)\": \"-2 (1x-2)\",\r\n  \"-2 (1x-2)\": \"-4 (2x-2)\",\r\n  \"-4 (2x-2)\": \"-4 (2x-2)\",\r\n  \"0 (0x-1)\": \"-1 (1x-1)\",\r\n  \"-1 (1x-1)\": \"-2 (2x-1)\",\r\n  \"-2 (2x-1)\": \"-2 (2x-1)\",\r\n} as const;\r\n\r\nexport const defenses = {\r\n  AC: \"AC\",\r\n  FORT: \"Fort\",\r\n  REF: \"Ref\",\r\n  WILL: \"Will\",\r\n  PER: \"Perception\",\r\n  selfDC: \"Self Standard DC\",\r\n  targetDC: \"Target Standard DC\",\r\n} as const;\r\nexport type Defense = typeof defenses[keyof typeof defenses];\r\n\r\nexport const dCond = {\r\n  STRIKE: \"x1 hit, x2 crit\",\r\n  BASIC: \"Basic save\",\r\n  ALWAYS: \"Always\",\r\n  CRIT: \"On Crit\",\r\n  SUCC: \"On Success\",\r\n  FAIL: \"On Failure\",\r\n  CRIF: \"On Crit Fail\",\r\n  AT_LEAST_SUCC: \"Success or better\",\r\n  AT_LEAST_FAIL: \"Failure or better\",\r\n  FAIL_WORSE: \"Failure or worse\",\r\n  SUCC_WORSE: \"Success or worse\",\r\n} as const;\r\nexport type DamageCond = typeof dCond[keyof typeof dCond];\r\n\r\nexport const dieTrends = {\r\n  NONE: \"None\",\r\n  WEAPON: \"Weapon (1, 4, 12, 19)\",\r\n  SPELLLEVEL1: \"1 x Spell Level\",\r\n  SPELLLEVEL2: \"2 x Spell Level\",\r\n  LEVEL: \"Level\",\r\n  HALFLEVEL: \"1/2 Level\",\r\n  RUNE: \"Runes (8, 15)\",\r\n  RUNE2: \"Runes (8, 10, 16)\",\r\n  DEADLY: \"Deadly (1, 12, 19)\",\r\n  BOMB: \"Bomb (1, 3, 11, 17)\",\r\n  SNEAK: \"Sneak Attack (1, 5, 11, 17)\",\r\n  STRATEGIC: \"Strategic Strike (1, 5, 9, 13, 17)\",\r\n  PRECISE: \"Precise Strike (1, 1, 5, 9, 13, 17)\",\r\n  PRECISIONEDGE: \"Precision Edge 1(1, 11, 19)\",\r\n  PRECISIONEDGE2: \"Precision Edge 2(17, 19)\",\r\n  PRECISIONEDGE3: \"Precision Edge 3(19)\",\r\n  KISTRIKE: \"Ki Strike (1, 9, 17)\",\r\n  ANIMALCOMPANION: \"Animal/Construct Companion (1, 4, 14)\",\r\n} as const;\r\nexport type DieTrend = typeof dieTrends[keyof typeof dieTrends];\r\n\r\nexport const damageTrends = {\r\n  NONE: \"None\",\r\n  FIGHTERWEAPONSPEC: \"Fighter Weapon Specialization\",\r\n  MARTIALWEAPONSPEC: \"Martial Weapon Specializaton\",\r\n  CASTERWEAPONSPEC: \"Caster Weapon Specializaton\",\r\n  ...statTrends,\r\n  WEAPON: \"Weapon (1, 4, 12, 19)\",\r\n  SPELLLEVEL1: \"1 x Spell Level\",\r\n  LEVEL: \"Level\",\r\n  HALFLEVEL: \"1/2 Level\",\r\n  BOMB: \"Bomb Splash (1, 3, 11, 17)\",\r\n  BOMBPLUS: \"Max Int Calculated/Expanded Splash\",\r\n  RAGE: \"Rage\",\r\n  ANIMALRAGE: \"Animal Rage\",\r\n  DRAGONRAGE: \"Dragon Rage\",\r\n  GIANTRAGE: \"Giant Rage\",\r\n  SPIRITRAGE: \"Spirit Rage\",\r\n  PRECISE: \"Precise Strike (1, 1, 5, 9, 13, 17)\",\r\n  ARCANECASCADE: \"Arcane Cascade\",\r\n  OVERDRIVES: \"Overdrive Success\",\r\n  OVERDRIVEC: \"Overdrive Critical\",\r\n  IMPLEMENT: \"Implement's Empowerment\",\r\n  CONSTRUCT: \"Construct Companion Damage\",\r\n  NIMBLE: \"Str 14 Nimble AC Damage\",\r\n  SAVAGE: \"Str 16 Savage AC Damage\",\r\n} as const;\r\nexport type DamageTrend = typeof damageTrends[keyof typeof damageTrends];\r\n\r\nexport const damageTypes = {\r\n  NONE: \"None\",\r\n  B: \"bludgeoning\",\r\n  P: \"piercing\",\r\n  S: \"slashing\",\r\n  BLEED: \"bleed\",\r\n  FIRE: \"fire\",\r\n  COLD: \"cold\",\r\n  MENTAL: \"mental\",\r\n  FORCE: \"force\",\r\n  PRECISION: \"precision\",\r\n} as const;\r\nexport type DamageType = typeof damageTypes[keyof typeof damageTypes];\r\n\r\nexport const materials = {\r\n  NONE: \"none\",\r\n  COLD_IRON: \"cold iron\",\r\n  SILVER: \"silver\",\r\n  ADAMANTINE: \"adamantine\",\r\n} as const;\r\nexport type Material = typeof materials[keyof typeof materials];\r\n\r\nexport const effectStateTypes = {\r\n  FLATFOOT: \"Flatfooted\",\r\n  PRONE: \"Prone\",\r\n  GRAPPLED: \"Grappled\",\r\n  RESTRAINED: \"Restrained\",\r\n} as const;\r\nexport type EffectStateType =\r\n  typeof effectStateTypes[keyof typeof effectStateTypes];\r\nexport const effectValueTypes = {\r\n  FRIGHTENED: \"Frightened\",\r\n  CLUMSY: \"Clumsy\",\r\n  BONUSC1: \"Cicumstance Bonus to next attack\",\r\n  BONUSSA: \"Status Bonus to all attacks\",\r\n} as const;\r\nexport type EffectValueType =\r\n  typeof effectValueTypes[keyof typeof effectValueTypes];\r\nexport const effectTypes = {\r\n  ...effectStateTypes,\r\n  ...effectValueTypes,\r\n} as const;\r\nexport type EffectType = EffectStateType | EffectValueType;\r\n\r\nexport const whenConditions = {\r\n  Always: \"Always\",\r\n\r\n  ...effectStateTypes,\r\n  ...effectValueTypes,\r\n} as const;\r\nexport type WhenConditions = typeof whenConditions[keyof typeof whenConditions];\r\n\r\nexport type TargetState = {\r\n  [key in EffectValueType]: number;\r\n} & {\r\n  [key in EffectStateType]: boolean;\r\n} & {\r\n  persistentDamages: {\r\n    [key in DamageType]?: {\r\n      material: Material;\r\n      staticDamage: number;\r\n      damageDist: number[];\r\n    };\r\n  };\r\n};\r\n\r\nexport const diceNums = {\r\n  0: 0,\r\n  1: 1,\r\n  2: 2,\r\n  3: 3,\r\n  4: 4,\r\n  5: 5,\r\n  6: 6,\r\n  7: 7,\r\n  8: 8,\r\n  9: 9,\r\n  10: 10,\r\n  11: 11,\r\n  12: 12,\r\n  13: 13,\r\n  14: 14,\r\n  15: 15,\r\n  16: 16,\r\n  17: 17,\r\n  18: 18,\r\n  19: 19,\r\n  20: 20,\r\n} as const;\r\n\r\nexport const diceSizes = {\r\n  \"4\": 4,\r\n  \"6\": 6,\r\n  \"8\": 8,\r\n  \"10\": 10,\r\n  \"12\": 12,\r\n} as const;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import {\r\n  createEntityAdapter,\r\n  createSlice,\r\n  EntityId,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\nimport { damageTypes, materials } from \"../Model/types\";\r\nimport { RootState } from \"../App/store\";\r\n\r\nexport interface Weakness {\r\n  id: number;\r\n  type:\r\n    | typeof damageTypes[keyof typeof damageTypes]\r\n    | typeof materials[keyof typeof materials];\r\n  value: number;\r\n}\r\nexport const weaknessAdapter = createEntityAdapter<Weakness>();\r\n\r\nlet weakness = 0;\r\n\r\nexport const weaknessesSlice = createSlice({\r\n  name: \"weaknesses\",\r\n  initialState: weaknessAdapter.getInitialState(),\r\n  reducers: {\r\n    weaknessAdded: weaknessAdapter.addOne,\r\n    weaknessUpdated: weaknessAdapter.updateOne,\r\n    weaknessCreated: {\r\n      reducer(state, action: PayloadAction<Weakness>) {\r\n        const { id, type, value } = action.payload;\r\n        weaknessAdapter.addOne(state, { id, type, value });\r\n      },\r\n      prepare({ parentId, type, value }) {\r\n        const id = ++weakness;\r\n        return {\r\n          payload: {\r\n            id,\r\n            parentId,\r\n            type,\r\n            value,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    weaknessRemoved(\r\n      state,\r\n      action: PayloadAction<{ parentId: EntityId; id: EntityId }>\r\n    ) {\r\n      weaknessAdapter.removeOne(state, action.payload.id);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  weaknessRemoved,\r\n  weaknessCreated,\r\n  weaknessAdded,\r\n  weaknessUpdated,\r\n} = weaknessesSlice.actions;\r\n\r\nexport default weaknessesSlice.reducer;\r\n\r\nexport const {\r\n  selectById: selectweaknessById,\r\n  selectIds: selectweaknessIds,\r\n  selectEntities: selectweaknessEntities,\r\n  selectAll: selectAllweaknesses,\r\n  selectTotal: selectTotalweaknesses,\r\n} = weaknessAdapter.getSelectors((state: RootState) => state.weaknesses);\r\n","import { MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nimport {\r\n  activityTypes,\r\n  profTrends,\r\n  conditions,\r\n  damageTrends,\r\n  damageTypes,\r\n  dCond,\r\n  defenses,\r\n  diceSizes,\r\n  dieTrends,\r\n  effectStateTypes,\r\n  effectValueTypes,\r\n  MAPs,\r\n  materials,\r\n  rollTypes,\r\n  statTrends,\r\n  itemTrends,\r\n  ACTrends,\r\n  SaveTrends,\r\n  graphTypes,\r\n} from \"./types\";\r\n\r\nexport const makeOptions = (options: object): JSX.Element[] => {\r\n  let element: keyof typeof options;\r\n  const optionElements: JSX.Element[] = [];\r\n  // @ts-ignore\r\n  for (element in options) {\r\n    optionElements.push(\r\n      <MenuItem key={element} value={options[element]}>\r\n        {options[element]}\r\n      </MenuItem>\r\n    );\r\n  }\r\n  return optionElements;\r\n};\r\n\r\nexport const arrayOptions = (options: string[]): JSX.Element[] => {\r\n  const optionElements: JSX.Element[] = [];\r\n  for (let element of options) {\r\n    optionElements.push(\r\n      <MenuItem key={element} value={element}>\r\n        {element}\r\n      </MenuItem>\r\n    );\r\n  }\r\n  return optionElements;\r\n};\r\n\r\nlet gt: keyof typeof graphTypes;\r\nexport const graphTypeOptions: JSX.Element[] = [];\r\nfor (gt in graphTypes) {\r\n  graphTypeOptions.push(<option key={gt}>{graphTypes[gt]}</option>);\r\n}\r\n\r\nexport const levelOptions: JSX.Element[] = [];\r\nfor (let level = 1; level <= 20; level++) {\r\n  levelOptions.push(\r\n    <MenuItem key={level} value={level}>\r\n      {level}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nlet c: keyof typeof conditions;\r\nexport const conditionOptions: JSX.Element[] = [];\r\nfor (c in conditions) {\r\n  conditionOptions.push(\r\n    <MenuItem key={c} value={conditions[c]}>\r\n      {conditions[c]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet rt: keyof typeof rollTypes;\r\nexport const rollOptions: JSX.Element[] = [];\r\nfor (rt in rollTypes) {\r\n  rollOptions.push(\r\n    <MenuItem key={rt} value={rollTypes[rt]}>\r\n      {rollTypes[rt]}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nlet at: keyof typeof activityTypes;\r\nexport const activityTypeOptions: JSX.Element[] = [];\r\nfor (at in activityTypes) {\r\n  activityTypeOptions.push(\r\n    <MenuItem key={at} value={activityTypes[at]}>\r\n      {activityTypes[at]}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nlet pt: keyof typeof profTrends;\r\nexport const profTrendOptions: JSX.Element[] = [];\r\nfor (pt in profTrends) {\r\n  profTrendOptions.push(\r\n    <MenuItem key={pt} value={profTrends[pt]}>\r\n      {profTrends[pt]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet st: keyof typeof statTrends;\r\nexport const statTrendOptions: JSX.Element[] = [];\r\nfor (st in statTrends) {\r\n  statTrendOptions.push(\r\n    <MenuItem key={st} value={statTrends[st]}>\r\n      {statTrends[st]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet it: keyof typeof itemTrends;\r\nexport const itemBTrendOptions: JSX.Element[] = [];\r\nfor (it in itemTrends) {\r\n  itemBTrendOptions.push(\r\n    <MenuItem key={it} value={itemTrends[it]}>\r\n      {itemTrends[it]}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nlet m: keyof typeof MAPs;\r\nexport const MAPOptions: JSX.Element[] = [];\r\nfor (m in MAPs) {\r\n  MAPOptions.push(\r\n    <MenuItem key={m} value={MAPs[m]}>\r\n      {MAPs[m]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet d: keyof typeof defenses;\r\nexport const defenseOptions: JSX.Element[] = [];\r\nfor (d in defenses) {\r\n  defenseOptions.push(\r\n    <MenuItem key={d} value={defenses[d]}>\r\n      {defenses[d]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet act: keyof typeof ACTrends;\r\nexport const ACOptions: JSX.Element[] = [];\r\nfor (act in ACTrends) {\r\n  ACOptions.push(\r\n    <MenuItem key={act} value={ACTrends[act]}>\r\n      {ACTrends[act]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet svt: keyof typeof SaveTrends;\r\nexport const SaveOptions: JSX.Element[] = [];\r\nfor (svt in SaveTrends) {\r\n  SaveOptions.push(\r\n    <MenuItem key={svt} value={SaveTrends[svt]}>\r\n      {SaveTrends[svt]}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nlet dc: keyof typeof dCond;\r\nexport const damageConditionOptions: JSX.Element[] = [];\r\nfor (dc in dCond) {\r\n  damageConditionOptions.push(\r\n    <MenuItem key={dc} value={dCond[dc]}>\r\n      {dCond[dc]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet dieT: keyof typeof dieTrends;\r\nexport const dieTrendOptions: JSX.Element[] = [];\r\nfor (dieT in dieTrends) {\r\n  dieTrendOptions.push(\r\n    <MenuItem key={dieT} value={dieTrends[dieT]}>\r\n      {dieTrends[dieT]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet ds: keyof typeof diceSizes;\r\nexport const diceSizeOptions: JSX.Element[] = [];\r\nfor (ds in diceSizes) {\r\n  diceSizeOptions.push(\r\n    <MenuItem key={ds} value={ds}>\r\n      {\"d\" + ds}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet damT: keyof typeof damageTrends;\r\nexport const damageTrendOptions: JSX.Element[] = [];\r\nfor (damT in damageTrends) {\r\n  damageTrendOptions.push(\r\n    <MenuItem key={damT} value={damageTrends[damT]}>\r\n      {damageTrends[damT]}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nlet dt: keyof typeof damageTypes;\r\nexport const damageTypeOptions: JSX.Element[] = [];\r\nfor (dt in damageTypes) {\r\n  damageTypeOptions.push(\r\n    <MenuItem key={dt} value={damageTypes[dt]}>\r\n      {damageTypes[dt]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet mat: keyof typeof materials;\r\nexport const materialOptions: JSX.Element[] = [];\r\nfor (mat in materials) {\r\n  materialOptions.push(\r\n    <MenuItem key={mat} value={materials[mat]}>\r\n      {materials[mat]}\r\n    </MenuItem>\r\n  );\r\n}\r\nexport const weaknessOptions: JSX.Element[] = [];\r\nfor (dt in damageTypes) {\r\n  weaknessOptions.push(\r\n    <MenuItem key={dt} value={damageTypes[dt]}>\r\n      {damageTypes[dt]}\r\n    </MenuItem>\r\n  );\r\n}\r\nfor (mat in materials) {\r\n  if (materials[mat] === materials.NONE) continue;\r\n  weaknessOptions.push(\r\n    <MenuItem key={mat} value={materials[mat]}>\r\n      {materials[mat]}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nexport const multiplierOptions: JSX.Element[] = [];\r\nfor (let m of [0.5, 1, 2]) {\r\n  multiplierOptions.push(\r\n    <MenuItem key={m} value={m}>\r\n      {m}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nexport const effectTypeOptions: JSX.Element[] = [];\r\nlet est: keyof typeof effectStateTypes;\r\nfor (est in effectStateTypes) {\r\n  effectTypeOptions.push(\r\n    <MenuItem key={est} value={effectStateTypes[est]}>\r\n      {effectStateTypes[est]}\r\n    </MenuItem>\r\n  );\r\n}\r\nlet evt: keyof typeof effectValueTypes;\r\nfor (evt in effectValueTypes) {\r\n  effectTypeOptions.push(\r\n    <MenuItem key={evt} value={effectValueTypes[evt]}>\r\n      {effectValueTypes[evt]}\r\n    </MenuItem>\r\n  );\r\n}\r\n","import {\r\n  createEntityAdapter,\r\n  createSlice,\r\n  EntityId,\r\n  EntityState,\r\n} from \"@reduxjs/toolkit\";\r\nimport { ACTrends, GraphType, HPTrends, SaveTrends } from \"../Model/types\";\r\nimport type { RootState } from \"../App/store\";\r\n// import { defaultACs, defaultSaves } from \"../defaults\";\r\n// import { defenses } from \"../types\";\r\nimport { weaknessCreated, weaknessRemoved } from \"./weaknessSlice\";\r\nimport { defaultACs, defaultHP, defaultSaves } from \"../Model/defaults\";\r\n\r\n// interface limited<Type> { typeof Type[keyof typeof Type] }\r\n// Define a type for the slice state\r\n// interface TargetState {  }\r\nconst id = 0;\r\nexport interface Target {\r\n  id: EntityId;\r\n  name: string;\r\n  levelDiff: number;\r\n  persistentMultiplier: number;\r\n  ACTrend: typeof ACTrends[keyof typeof ACTrends];\r\n  FortTrend: typeof SaveTrends[keyof typeof SaveTrends];\r\n  RefTrend: typeof SaveTrends[keyof typeof SaveTrends];\r\n  WillTrend: typeof SaveTrends[keyof typeof SaveTrends];\r\n  PerTrend: typeof SaveTrends[keyof typeof SaveTrends];\r\n  HPTrend: typeof HPTrends[keyof typeof HPTrends];\r\n  percentHP: number;\r\n\r\n  flatfooted: boolean;\r\n  percentSelectedRoutine: boolean;\r\n  weaknesses: number[];\r\n\r\n  graphType: GraphType;\r\n  routineLevel: number;\r\n  targetLevel: number;\r\n\r\n  overrideAC: number;\r\n  overrideFort: number;\r\n  overrideRef: number;\r\n  overrideWill: number;\r\n  overridePer: number;\r\n  overrideHP: number;\r\n  currentHP: number;\r\n}\r\n\r\nexport const targetAdapter = createEntityAdapter<Target>();\r\n\r\nexport const targetsSlice = createSlice({\r\n  name: \"targets\",\r\n  initialState: targetAdapter.getInitialState(),\r\n  reducers: {\r\n    targetAdded: targetAdapter.addOne,\r\n    targetUpdated: (state, action) => {\r\n      targetAdapter.updateOne(state, action.payload);\r\n      if (\"targetLevel\" in action.payload.changes) {\r\n        updateTargetLevel(state, action.payload.changes.targetLevel);\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(weaknessCreated, (state, action) => {\r\n        const { parentId: id, id: weaknessId } = action.payload;\r\n        state.entities[id]!.weaknesses.push(weaknessId);\r\n        // targetAdded.updateOne(state, { id, changes: { weaknesses: [...weaknesses, weaknessId] }});\r\n      })\r\n      .addCase(weaknessRemoved, (state, action) => {\r\n        const { parentId: id, id: weaknessId } = action.payload;\r\n        state.entities[id]!.weaknesses = state.entities[id]!.weaknesses.filter(\r\n          (wid) => wid !== weaknessId\r\n        );\r\n      });\r\n  },\r\n});\r\n\r\nexport const { targetAdded, targetUpdated } = targetsSlice.actions;\r\n\r\nexport default targetsSlice.reducer;\r\n\r\nexport const {\r\n  selectById: selecttargetById,\r\n  selectIds: selecttargetIds,\r\n  selectEntities: selecttargetEntities,\r\n  selectAll: selectAlltargets,\r\n  selectTotal: selectTotaltargets,\r\n} = targetAdapter.getSelectors((state: RootState) => state.targets);\r\n\r\nexport const selectRoutineLevel = (state: RootState) =>\r\n  state.targets.entities[0]!.routineLevel;\r\n\r\nconst updateTargetLevel = (state: EntityState<Target>, targetLevel: number) => {\r\n  state.entities[id]!.overrideAC =\r\n    defaultACs[state.entities[id]!.ACTrend][targetLevel];\r\n  state.entities[id]!.overrideFort =\r\n    defaultSaves[state.entities[id]!.FortTrend][targetLevel];\r\n  state.entities[id]!.overrideRef =\r\n    defaultSaves[state.entities[id]!.RefTrend][targetLevel];\r\n  state.entities[id]!.overrideWill =\r\n    defaultSaves[state.entities[id]!.WillTrend][targetLevel];\r\n  state.entities[id]!.overridePer =\r\n    defaultSaves[state.entities[id]!.PerTrend][targetLevel];\r\n  state.entities[id]!.currentHP = Math.round(\r\n    (state.entities[id]!.currentHP *\r\n      defaultHP[state.entities[id]!.HPTrend][targetLevel]) /\r\n      state.entities[id]!.overrideHP\r\n  );\r\n  state.entities[id]!.overrideHP =\r\n    defaultHP[state.entities[id]!.HPTrend][targetLevel];\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\nimport { selecttargetById, targetUpdated } from \"./targetSlice\";\r\nimport { RootState } from \"../App/store\";\r\nimport { ACOptions, makeOptions, SaveOptions } from \"../Model/options\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Grid,\r\n  TextField,\r\n  Slider,\r\n  Typography,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { HPTrends } from \"../Model/types\";\r\n\r\nfunction ByLevelInput() {\r\n  const id = 0;\r\n  const {\r\n    name,\r\n    levelDiff,\r\n    ACTrend,\r\n    FortTrend,\r\n    RefTrend,\r\n    WillTrend,\r\n    PerTrend,\r\n    HPTrend,\r\n    percentHP,\r\n  } = useAppSelector((state: RootState) => selecttargetById(state, id)!);\r\n\r\n  const [tempName, setTempName] = useState(name);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ my: 0, py: 1 }}>\r\n      <Grid item xs={12} sm={6} md={12} lg={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Graph Name\"\r\n          placeholder=\"Enter the name that will display on the graph\"\r\n          value={tempName}\r\n          onChange={(e) => {\r\n            setTempName(e.target.value);\r\n          }}\r\n          onBlur={() =>\r\n            dispatch(targetUpdated({ id, changes: { name: tempName } }))\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6} sm={3} md={6} lg={3}>\r\n        <Typography>Level Diff: {levelDiff}</Typography>\r\n        <Slider\r\n          value={levelDiff}\r\n          step={1}\r\n          min={-5}\r\n          max={5}\r\n          marks\r\n          onChange={(e, nv) => {\r\n            dispatch(\r\n              targetUpdated({\r\n                id,\r\n                changes: {\r\n                  levelDiff: nv,\r\n                },\r\n              })\r\n            );\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={3} md={6} lg={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"AC-input\">AC</InputLabel>\r\n          <Select\r\n            labelId=\"AC-input\"\r\n            id=\"AC\"\r\n            value={ACTrend}\r\n            label=\"AC\"\r\n            onChange={(e) =>\r\n              dispatch(\r\n                targetUpdated({ id, changes: { ACTrend: e.target.value } })\r\n              )\r\n            }\r\n          >\r\n            {ACOptions}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3} sm={3} md={3} lg={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"Fort-input\">Fort</InputLabel>\r\n          <Select\r\n            labelId=\"Fort-input\"\r\n            id=\"Fort\"\r\n            value={FortTrend}\r\n            label=\"Fort\"\r\n            onChange={(e) =>\r\n              dispatch(\r\n                targetUpdated({ id, changes: { FortTrend: e.target.value } })\r\n              )\r\n            }\r\n          >\r\n            {SaveOptions}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3} sm={3} md={3} lg={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"Ref-input\">Reflex</InputLabel>\r\n          <Select\r\n            labelId=\"Ref-input\"\r\n            id=\"Ref\"\r\n            value={RefTrend}\r\n            label=\"Reflex\"\r\n            onChange={(e) =>\r\n              dispatch(\r\n                targetUpdated({ id, changes: { RefTrend: e.target.value } })\r\n              )\r\n            }\r\n          >\r\n            {SaveOptions}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3} sm={3} md={3} lg={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"Will-input\">Will</InputLabel>\r\n          <Select\r\n            labelId=\"Will-input\"\r\n            id=\"Will\"\r\n            value={WillTrend}\r\n            label=\"Will\"\r\n            onChange={(e) =>\r\n              dispatch(\r\n                targetUpdated({ id, changes: { WillTrend: e.target.value } })\r\n              )\r\n            }\r\n          >\r\n            {SaveOptions}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3} sm={3} md={3} lg={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"Per-input\">Perception</InputLabel>\r\n          <Select\r\n            labelId=\"Per-input\"\r\n            id=\"Per\"\r\n            value={PerTrend}\r\n            label=\"Perception\"\r\n            onChange={(e) =>\r\n              dispatch(\r\n                targetUpdated({ id, changes: { PerTrend: e.target.value } })\r\n              )\r\n            }\r\n          >\r\n            {SaveOptions}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"HP-input\">Hit Points</InputLabel>\r\n          <Select\r\n            labelId=\"HP-input\"\r\n            id=\"HP\"\r\n            value={HPTrend}\r\n            label=\"Hit Points\"\r\n            onChange={(e) =>\r\n              dispatch(\r\n                targetUpdated({ id, changes: { HPTrend: e.target.value } })\r\n              )\r\n            }\r\n          >\r\n            {makeOptions(HPTrends)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} container justifyContent=\"center\">\r\n        <Typography id=\"percent-HP\">Remaining HP: {percentHP}%</Typography>\r\n\r\n        <Box sx={{ px: 2, width: 1 }}>\r\n          <Slider\r\n            aria-labelledby=\"percent-HP\"\r\n            valueLabelDisplay=\"auto\"\r\n            value={percentHP}\r\n            min={0}\r\n            max={100}\r\n            step={1}\r\n            onChange={(_, nv) => {\r\n              let newPercentHP = Number(nv);\r\n              dispatch(\r\n                targetUpdated({\r\n                  id,\r\n                  changes: {\r\n                    percentHP: newPercentHP,\r\n                  },\r\n                })\r\n              );\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport { ByLevelInput };\r\n","import {\r\n  statTrendValues,\r\n  valuesFromBonuses,\r\n  valuesFromBonusLevels,\r\n} from \"./defaults\";\r\nimport {\r\n  conditions,\r\n  DamageTrend,\r\n  damageTrends,\r\n  DamageType,\r\n  damageTypes,\r\n  dCond,\r\n  defenses,\r\n  diceSizes,\r\n  DieTrend,\r\n  dieTrends,\r\n  effectTypes,\r\n  ItemTrend,\r\n  MAPs,\r\n  ProfTrend,\r\n  profTrends,\r\n  StatTrend,\r\n  whenConditions,\r\n} from \"./types\";\r\n\r\nexport type WeaponInfo = {\r\n  dieSize: number;\r\n  traits: {\r\n    [k: string]: boolean;\r\n  };\r\n  deadlySize: number;\r\n  fatalSize: number;\r\n  critSpec: boolean;\r\n  critSpecLevel: number;\r\n  critSpecType: string;\r\n  runes: DieTrend;\r\n\r\n  numPrevStrikes: number;\r\n};\r\n\r\nexport type StrikeInfo = {\r\n  cClass: typeof classes[number];\r\n  classOption: string;\r\n\r\n  activity: typeof strikeActivities[number];\r\n  spell: typeof attackSpells[number];\r\n  attackScore: StatTrend;\r\n  damageScore: StatTrend;\r\n  cantripScore: StatTrend;\r\n\r\n  numPrevStrikes: number;\r\n  numStrikes: number;\r\n  twf: boolean;\r\n  isStrikeSecondaryWeapon: boolean[];\r\n  previousHits: number;\r\n\r\n  weapon1: WeaponInfo;\r\n  weapon2: WeaponInfo;\r\n};\r\nexport type SkillInfo = {\r\n  proficiency: ProfTrend;\r\n  abilityScore: StatTrend;\r\n  itemBonus: ItemTrend;\r\n  skillActivity: typeof skillActivities[number];\r\n};\r\nexport type CantripInfo = {\r\n  proficiency: ProfTrend;\r\n  abilityScore: StatTrend;\r\n  cantrip: typeof cantrips[number];\r\n};\r\nexport type SpellInfo = {\r\n  proficiency: ProfTrend;\r\n  abilityScore: StatTrend;\r\n  spell: typeof spells[number];\r\n};\r\n\r\nexport const activityTypes = {\r\n  Strike: \"Strike\",\r\n  Skill: \"Skill Action\",\r\n  Cantrip: \"Cantrip\",\r\n  Spell: \"Spell\",\r\n} as const;\r\n\r\nexport const runeTrends = [dieTrends.NONE, dieTrends.RUNE, dieTrends.RUNE2];\r\n\r\nexport const classes = [\r\n  \"Alchemist\",\r\n  \"Barbarian\",\r\n  \"Bard\",\r\n  \"Champion\",\r\n  \"Cleric\",\r\n  \"Druid\",\r\n  \"Fighter\",\r\n  \"Gunslinger\",\r\n  \"Inventor\",\r\n  \"Investigator\",\r\n  \"Magus\",\r\n  \"Monk\",\r\n  \"Oracle\",\r\n  \"Ranger\",\r\n  \"Rogue\",\r\n  \"Sorcerer\",\r\n  \"Summoner\",\r\n  \"Swashbuckler\",\r\n  \"Witch\",\r\n  \"Wizard\",\r\n] as const;\r\n\r\nconst noOptions = [] as const;\r\nconst alchemistOptions = [\r\n  \"Normal\",\r\n  \"Bomb Strike\",\r\n  \"Bomb w/ feats\",\r\n  \"Perpetual Bomb\",\r\n  \"Perpetual Bomb w/ feats\",\r\n] as const;\r\nconst barbarianOptions = [\r\n  \"Normal\",\r\n  \"animal rage\",\r\n  \"dragon rage\",\r\n  \"rage\",\r\n  \"giant rage\",\r\n  \"spirit rage\",\r\n] as const;\r\nconst clericOptions = [\"Cloistered\", \"Warpriest\"] as const;\r\nconst rangerOptions = [\"Normal\", \"Flurry Edge\", \"Precision Edge\"] as const;\r\nconst inventorOptions = [\r\n  \"Normal\",\r\n  \"Overdrive Success\",\r\n  \"Overdrive Critical\",\r\n] as const;\r\nconst investigatorOptions = [\"Normal\", \"Strategic Strike\"] as const;\r\nconst rogueOptions = [\"Normal\", \"Sneak Attack\"] as const;\r\nconst swashbucklerOptions = [\r\n  \"Normal\",\r\n  \"Precise Strike\",\r\n  \"Precise Finisher\",\r\n] as const;\r\nconst magusOptions = [\"Normal\", \"Arcane Cascade\"] as const;\r\n\r\nexport const strikeActivities = [\r\n  \"Strike\",\r\n  \"Double Slice\",\r\n  \"Power Attack\",\r\n  \"Spell Strike\",\r\n  \"Ki Strike\",\r\n] as const;\r\ntype ClassOptions = { [key in typeof classes[number]]: readonly string[] };\r\nexport const classOptions: ClassOptions = {\r\n  Alchemist: alchemistOptions,\r\n  Barbarian: barbarianOptions,\r\n  Bard: noOptions,\r\n  Champion: noOptions,\r\n  Cleric: clericOptions,\r\n  Druid: noOptions,\r\n  Fighter: noOptions,\r\n  Gunslinger: noOptions,\r\n  Inventor: inventorOptions,\r\n  Investigator: investigatorOptions,\r\n  Magus: magusOptions,\r\n  Monk: noOptions,\r\n  Oracle: noOptions,\r\n  Ranger: rangerOptions,\r\n  Rogue: rogueOptions,\r\n  Sorcerer: noOptions,\r\n  Summoner: noOptions,\r\n  Swashbuckler: swashbucklerOptions,\r\n  Witch: noOptions,\r\n  Wizard: noOptions,\r\n} as const;\r\n\r\nexport const weaponTraits = [\r\n  \"agile\",\r\n  \"backswing\",\r\n  \"deadly\",\r\n  \"fatal\",\r\n  \"forceful\",\r\n  \"ranged\",\r\n  \"propulsive\",\r\n] as const;\r\n\r\nexport const critSpecs = [\r\n  \"Sword\",\r\n  \"Hammer\",\r\n  \"Spear\",\r\n  \"Other\",\r\n  \"Pick\",\r\n  \"Knife\",\r\n] as const;\r\n\r\nexport const skillProfTrends = [profTrends.TRAINED, profTrends.MAXSKILL];\r\nexport const spellProfTrends = [\r\n  profTrends.TRAINED,\r\n  profTrends.CASTERSPELL,\r\n  profTrends.MCSPELL,\r\n  profTrends.CLASSDC1,\r\n  profTrends.CLASSDC2,\r\n];\r\n\r\nexport const skillActivities = [\"Trip\", \"Grapple\", \"Demoralize\"] as const;\r\nexport const cantrips = [\r\n  \"Electric Arc\",\r\n  \"Daze\",\r\n  \"Gouging Claw\",\r\n  \"Produce Flame\",\r\n  \"Ray of Frost\",\r\n  \"Telekinetic Projectile\",\r\n] as const;\r\nexport const spells = [\"Fear\", \"Fireball\", \"Heroism\"] as const;\r\n\r\nexport const attackSpells = [\r\n  \"Gouging Claw\",\r\n  \"Produce Flame\",\r\n  \"Ray of Frost\",\r\n  \"Telekinetic Projectile\",\r\n];\r\n\r\nexport const getStrikeRoutineName = (strikeInfo: StrikeInfo) => {\r\n  const { weapon1, weapon2 } = strikeInfo;\r\n  let name = strikeInfo.cClass;\r\n  let description = `${strikeInfo.numStrikes} ${\r\n    strikeInfo.activity\r\n  } with class ${strikeInfo.cClass} (${strikeInfo.classOption}) after ${\r\n    strikeInfo.numPrevStrikes\r\n  } previous strikes. Weapon is ${getWeaponTraits(weapon1)}`;\r\n\r\n  if (strikeInfo.classOption !== \"\")\r\n    name += \" (\" + strikeInfo.classOption + \")\";\r\n  name += \" - \";\r\n  if (strikeInfo.activity !== \"Double Slice\") {\r\n    name += strikeInfo.numStrikes + \" \";\r\n  }\r\n  name += strikeInfo.activity + \" - \" + getWeaponTraits(weapon1);\r\n\r\n  if (strikeInfo.twf) {\r\n    name += \" | \" + getWeaponTraits(weapon2);\r\n    description += \". Weapon two is \" + getWeaponTraits(weapon2);\r\n  }\r\n\r\n  return [name, description];\r\n};\r\n\r\nconst getWeaponTraits = (weapon: WeaponInfo) => {\r\n  let info = \"d\" + weapon.dieSize;\r\n\r\n  for (let trait in weapon.traits) {\r\n    if (weapon.traits[trait]) {\r\n      info += \" \" + trait;\r\n      if (trait === \"fatal\") {\r\n        info += \" d\" + weapon.fatalSize;\r\n      }\r\n      if (trait === \"deadly\") {\r\n        info += \" d\" + weapon.deadlySize;\r\n      }\r\n    }\r\n  }\r\n  if (weapon.critSpec) {\r\n    info += \" \" + weapon.critSpecType;\r\n  }\r\n\r\n  return info;\r\n};\r\n\r\nexport const getStrikeName = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  let name = strikeInfo.cClass;\r\n  if (strikeInfo.classOption !== \"\")\r\n    name += \" (\" + strikeInfo.classOption + \")\";\r\n  name += \" - \";\r\n  name +=\r\n    strikeInfo.activity +\r\n    // \" \" +\r\n    // (strikeNumber + 1) +\r\n    \" - d\" +\r\n    weapon.dieSize;\r\n  for (let trait in weapon.traits) {\r\n    if (weapon.traits[trait]) {\r\n      name += \" \" + trait;\r\n      if (trait === \"fatal\") {\r\n        name += \" d\" + weapon.fatalSize;\r\n      }\r\n      if (trait === \"deadly\") {\r\n        name += \" d\" + weapon.deadlySize;\r\n      }\r\n    }\r\n  }\r\n  if (weapon.critSpec) {\r\n    name += \" \" + weapon.critSpecType;\r\n  }\r\n\r\n  return name;\r\n};\r\nexport const getSpellRoutineName = (spellInfo: SpellInfo) => {\r\n  let name = spellInfo.spell;\r\n\r\n  let description = `Cast spell ${spellInfo.spell} with proficiency (${spellInfo.proficiency}) and ability score (${spellInfo.abilityScore}).`;\r\n\r\n  return [name, description];\r\n};\r\n\r\nexport const getSkillRoutineName = (skillInfo: SkillInfo) => {\r\n  let name = skillInfo.skillActivity;\r\n\r\n  let description = `Use action ${skillInfo.skillActivity} with proficiency (${skillInfo.proficiency}), ability score (${skillInfo.abilityScore}), and item bonus (${skillInfo.itemBonus}).`;\r\n\r\n  return [name, description];\r\n};\r\n\r\nexport const getCantripRoutineName = (cantripInfo: CantripInfo) => {\r\n  let name = cantripInfo.cantrip;\r\n\r\n  let description = `Cast spell ${cantripInfo.cantrip} with proficiency (${cantripInfo.proficiency}) and ability score (${cantripInfo.abilityScore}).`;\r\n\r\n  return [name, description];\r\n};\r\n\r\nexport const classWeaponProf = (className: string, classOption: string) => {\r\n  if ([\"Fighter\", \"Gunslinger\"].includes(className))\r\n    return profTrends.FIGHTERWEAPON;\r\n  if (\r\n    [\r\n      \"Bard\",\r\n      \"Druid\",\r\n      \"Oracle\",\r\n      \"Sorcerer\",\r\n      \"Summoner\",\r\n      \"Witch\",\r\n      \"Wizard\",\r\n    ].includes(className)\r\n  )\r\n    return profTrends.CASTERWEAPON;\r\n  if ([\"Alchemist\"].includes(className)) return profTrends.ALCHWEAPON;\r\n  if (className === \"Cleric\") {\r\n    if (classOption === \"Warpriest\") return profTrends.ALCHWEAPON;\r\n    return profTrends.CASTERWEAPON;\r\n  }\r\n  return profTrends.MARTIALWEAPON;\r\n};\r\n\r\nexport const classWeaponMAP = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  if (\r\n    strikeInfo.cClass === \"Ranger\" &&\r\n    strikeInfo.classOption === \"Flurry Edge\"\r\n  ) {\r\n    if (weapon.traits[\"agile\"]) return MAPs.RA1;\r\n    else return MAPs.R1;\r\n  } else {\r\n    if (weapon.traits[\"agile\"]) return MAPs.A1;\r\n    else return MAPs.N1;\r\n  }\r\n};\r\n\r\nexport const classAdjustments = (\r\n  strikeInfo: StrikeInfo,\r\n  strikeNumber: number\r\n) => {\r\n  const adjustments: { [key: number]: number } = {};\r\n  let currentValue = 0;\r\n  for (let i = 1; i <= 20; i++) {\r\n    currentValue = 0;\r\n\r\n    if (\r\n      strikeInfo.classOption === \"Perpetual Bomb\" ||\r\n      strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\r\n    ) {\r\n      currentValue -= 1;\r\n    }\r\n\r\n    if (\r\n      strikeInfo.cClass === \"Ranger\" &&\r\n      strikeInfo.classOption === \"Flurry Edge\" &&\r\n      i >= 17\r\n    )\r\n      currentValue += Math.min(strikeNumber + strikeInfo.numPrevStrikes, 2);\r\n\r\n    if (strikeInfo.activity === \"Ki Strike\") currentValue += 1;\r\n\r\n    if (\r\n      strikeInfo.activity === \"Double Slice\" &&\r\n      strikeNumber === 1 &&\r\n      (strikeInfo.twf\r\n        ? !strikeInfo.weapon2.traits[\"agile\"]\r\n        : !strikeInfo.weapon1.traits[\"agile\"])\r\n    ) {\r\n      currentValue -= 2;\r\n    }\r\n\r\n    adjustments[i] = currentValue;\r\n  }\r\n  return adjustments;\r\n};\r\n\r\nexport const activityWeaponDiceAdjustments = (strikeInfo: StrikeInfo) => {\r\n  const adjustments: { [key: number]: number } = {};\r\n  let currentValue = 0;\r\n  for (let i = 1; i <= 20; i++) {\r\n    currentValue = 0;\r\n    if (strikeInfo.activity === \"Power Attack\" && i >= 1) currentValue += 1;\r\n    if (strikeInfo.activity === \"Power Attack\" && i >= 10) currentValue += 1;\r\n    if (strikeInfo.activity === \"Power Attack\" && i >= 18) currentValue += 1;\r\n    if (\r\n      strikeInfo.classOption === \"Perpetual Bomb\" ||\r\n      strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\r\n    ) {\r\n      currentValue -= 1;\r\n    }\r\n    adjustments[i] = currentValue;\r\n  }\r\n  return adjustments;\r\n};\r\n\r\nexport const hasClassPrecisionDamage = (\r\n  strikeInfo: StrikeInfo,\r\n  previousHits: number\r\n) => {\r\n  if (\r\n    strikeInfo.cClass === \"Ranger\" &&\r\n    strikeInfo.classOption === \"Precision Edge\" &&\r\n    previousHits < 3\r\n  ) {\r\n    return true;\r\n  }\r\n  if (\r\n    strikeInfo.cClass === \"Rogue\" &&\r\n    strikeInfo.classOption === \"Sneak Attack\"\r\n  ) {\r\n    return true;\r\n  }\r\n  if (\r\n    strikeInfo.cClass === \"Investigator\" &&\r\n    strikeInfo.classOption === \"Strategic Strike\"\r\n  ) {\r\n    return true;\r\n  }\r\n  if (\r\n    strikeInfo.cClass === \"Swashbuckler\" &&\r\n    (strikeInfo.classOption === \"Precise Finisher\" ||\r\n      strikeInfo.classOption === \"Precise Strike\")\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const classPrecisionDamage = (\r\n  strikeInfo: StrikeInfo,\r\n  previousHits: number\r\n) => {\r\n  if (\r\n    strikeInfo.cClass === \"Ranger\" &&\r\n    strikeInfo.classOption === \"Precision Edge\" &&\r\n    previousHits < 3\r\n  ) {\r\n    let dieTrend: DieTrend = dieTrends.PRECISIONEDGE;\r\n    if (previousHits === 1) {\r\n      dieTrend = dieTrends.PRECISIONEDGE2;\r\n    }\r\n    if (previousHits === 2) {\r\n      dieTrend = dieTrends.PRECISIONEDGE3;\r\n    }\r\n    return {\r\n      dieTrend,\r\n      diceSize: diceSizes[8],\r\n      damageWhen: [whenConditions.Always],\r\n      damageTrend: [],\r\n    };\r\n  }\r\n  if (\r\n    strikeInfo.cClass === \"Rogue\" &&\r\n    strikeInfo.classOption === \"Sneak Attack\"\r\n  ) {\r\n    return {\r\n      dieTrend: dieTrends.SNEAK,\r\n      diceSize: diceSizes[6],\r\n      damageWhen: [whenConditions.FLATFOOT],\r\n      damageTrend: [],\r\n    };\r\n  }\r\n  if (\r\n    strikeInfo.cClass === \"Investigator\" &&\r\n    strikeInfo.classOption === \"Strategic Strike\"\r\n  ) {\r\n    return {\r\n      dieTrend: dieTrends.STRATEGIC,\r\n      diceSize: diceSizes[6],\r\n      damageWhen: [whenConditions.Always],\r\n      damageTrend: [],\r\n    };\r\n  }\r\n  if (\r\n    strikeInfo.cClass === \"Swashbuckler\" &&\r\n    strikeInfo.classOption === \"Precise Finisher\"\r\n  ) {\r\n    return {\r\n      dieTrend: dieTrends.PRECISE,\r\n      diceSize: diceSizes[6],\r\n      damageWhen: [whenConditions.Always],\r\n      damageTrend: [],\r\n    };\r\n  }\r\n  if (\r\n    strikeInfo.cClass === \"Swashbuckler\" &&\r\n    strikeInfo.classOption === \"Precise Strike\"\r\n  ) {\r\n    return {\r\n      dieTrend: dieTrends.NONE,\r\n      diceSize: diceSizes[6],\r\n      damageWhen: [whenConditions.Always],\r\n      damageTrend: [damageTrends.PRECISE],\r\n    };\r\n  }\r\n  return {\r\n    dieTrend: dieTrends.NONE,\r\n    diceSize: diceSizes[6],\r\n    damageWhen: [whenConditions.Always],\r\n    damageTrend: [],\r\n  };\r\n};\r\n\r\nexport const hasActivityDamageDice = (strikeInfo: StrikeInfo) => {\r\n  if (strikeInfo.activity === \"Ki Strike\") {\r\n    return true;\r\n  }\r\n  if (strikeInfo.activity === \"Spell Strike\") {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const activityDamageDice = (strikeInfo: StrikeInfo) => {\r\n  if (strikeInfo.activity === \"Ki Strike\") {\r\n    return {\r\n      dieTrend: dieTrends.KISTRIKE,\r\n      diceSize: diceSizes[6],\r\n      damageType: damageTypes.FORCE,\r\n    };\r\n  }\r\n  if (strikeInfo.activity === \"Spell Strike\") {\r\n    return getSpellDamage(strikeInfo.spell, strikeInfo.cantripScore);\r\n  }\r\n  return {\r\n    dieTrend: dieTrends.NONE,\r\n    diceSize: diceSizes[6],\r\n    damageType: damageTypes.NONE,\r\n  };\r\n};\r\n\r\nexport const hasSplashDamage = (strikeInfo: StrikeInfo) => {\r\n  if (\r\n    strikeInfo.classOption === \"Bomb Strike\" ||\r\n    strikeInfo.classOption === \"Bomb w/ feats\"\r\n  ) {\r\n    return true;\r\n  }\r\n  if (\r\n    strikeInfo.classOption === \"Perpetual Bomb\" ||\r\n    strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getSplashDamage = (strikeInfo: StrikeInfo) => {\r\n  if (strikeInfo.classOption === \"Bomb Strike\") {\r\n    return { damageTrend: [damageTrends.BOMB] };\r\n  } else if (strikeInfo.classOption === \"Bomb w/ feats\") {\r\n    return { damageTrend: [damageTrends.BOMBPLUS] };\r\n  } else if (strikeInfo.classOption === \"Perpetual Bomb\") {\r\n    return {\r\n      damageTrend: [damageTrends.BOMB],\r\n      damageAdjustments: valuesFromBonuses([[1, -1]]),\r\n    };\r\n  } else if (strikeInfo.classOption === \"Perpetual Bomb w/ feats\") {\r\n    return {\r\n      damageTrend: [damageTrends.BOMBPLUS],\r\n      damageAdjustments: valuesFromBonuses([\r\n        [1, -1],\r\n        [4, 1],\r\n        [10, -1],\r\n      ]),\r\n    };\r\n  }\r\n\r\n  return {};\r\n};\r\n\r\nconst getSpellDamage = (\r\n  spell: typeof attackSpells[number],\r\n  abilityScore: StatTrend\r\n) => {\r\n  let damageType: DamageType = damageTypes.B;\r\n  let diceSize: number = diceSizes[4];\r\n  let dieTrend = dieTrends.SPELLLEVEL1;\r\n  let damageTrend = [abilityScore];\r\n\r\n  if (spell === \"Telekinetic Projectile\") {\r\n    diceSize = diceSizes[6];\r\n  }\r\n  if (spell === \"Produce Flame\") {\r\n    damageType = damageTypes.FIRE;\r\n  }\r\n  if (spell === \"Gouging Claw\") {\r\n    damageType = damageTypes.BLEED;\r\n  }\r\n  if (spell === \"Ray of Frost\") {\r\n    damageType = damageTypes.COLD;\r\n  }\r\n\r\n  return { damageType, dieTrend, diceSize, damageTrend };\r\n};\r\n\r\nexport const hasActivityCritDamage = (strikeInfo: StrikeInfo) => {\r\n  return (\r\n    strikeInfo.activity === \"Spell Strike\" &&\r\n    (strikeInfo.spell === \"Produce Flame\" ||\r\n      strikeInfo.spell === \"Gouging Claw\")\r\n  );\r\n};\r\n\r\nexport const activityCritDamage = (strikeInfo: StrikeInfo) => {\r\n  let damageType: DamageType = damageTypes.B;\r\n  let diceSize = diceSizes[4];\r\n  if (strikeInfo.spell === \"Produce Flame\") {\r\n    damageType = damageTypes.FIRE;\r\n  }\r\n  if (strikeInfo.spell === \"Gouging Claw\") {\r\n    damageType = damageTypes.BLEED;\r\n  }\r\n\r\n  return {\r\n    damageType,\r\n    diceSize,\r\n    dieTrend: dieTrends.SPELLLEVEL1,\r\n    persistent: true,\r\n  };\r\n};\r\n\r\nexport const classWeaponDamageTrends = (\r\n  strikeInfo: StrikeInfo,\r\n  strikeNumber: number,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n\r\n  const trends: DamageTrend[] = [];\r\n\r\n  if (!weapon.traits[\"propulsive\"] && !weapon.traits[\"ranged\"]) {\r\n    trends.push(strikeInfo.damageScore);\r\n  }\r\n\r\n  if ([\"Fighter\", \"Gunslinger\"].includes(strikeInfo.cClass)) {\r\n    trends.push(damageTrends.FIGHTERWEAPONSPEC);\r\n  } else if (\r\n    [\r\n      \"Bard\",\r\n      \"Cleric\",\r\n      \"Druid\",\r\n      \"Oracle\",\r\n      \"Sorcerer\",\r\n      \"Summoner\",\r\n      \"Witch\",\r\n      \"Wizard\",\r\n    ].includes(strikeInfo.cClass)\r\n  ) {\r\n    trends.push(damageTrends.CASTERWEAPONSPEC);\r\n  } else if ([\"Alchemist\"].includes(strikeInfo.cClass)) {\r\n    trends.push(damageTrends.CASTERWEAPONSPEC);\r\n  } else {\r\n    trends.push(damageTrends.MARTIALWEAPONSPEC);\r\n  }\r\n\r\n  let thisWeaponStrikes = 0;\r\n  if (!strikeInfo.twf) {\r\n    thisWeaponStrikes = strikeNumber + strikeInfo.numPrevStrikes;\r\n  } else {\r\n    thisWeaponStrikes = weapon.numPrevStrikes;\r\n    for (let isWeapon2 of strikeInfo.isStrikeSecondaryWeapon) {\r\n      if ((isWeapon2 && useWeapon2) || (!isWeapon2 && !useWeapon2)) {\r\n        thisWeaponStrikes += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (weapon.traits[\"forceful\"]) {\r\n    if (thisWeaponStrikes === 1) {\r\n      trends.push(damageTrends.WEAPON);\r\n    } else if (thisWeaponStrikes >= 2) {\r\n      trends.push(damageTrends.WEAPON);\r\n      trends.push(damageTrends.WEAPON);\r\n    }\r\n  }\r\n\r\n  if (strikeInfo.cClass === \"Barbarian\") {\r\n    switch (strikeInfo.classOption) {\r\n      case \"animal rage\":\r\n        trends.push(damageTrends.ANIMALRAGE);\r\n        break;\r\n      case \"dragon rage\":\r\n        trends.push(damageTrends.DRAGONRAGE);\r\n        break;\r\n      case \"rage\":\r\n        trends.push(damageTrends.RAGE);\r\n        break;\r\n      case \"giant rage\":\r\n        trends.push(damageTrends.GIANTRAGE);\r\n        break;\r\n      case \"spirit rage\":\r\n        trends.push(damageTrends.SPIRITRAGE);\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  if (strikeInfo.cClass === \"Magus\") {\r\n    switch (strikeInfo.classOption) {\r\n      case \"Arcane Cascade\":\r\n        trends.push(damageTrends.ARCANECASCADE);\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return trends;\r\n};\r\n\r\nexport const classDamageAdjustments = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n\r\n  const adjustments: { [key: number]: number } = {};\r\n  let currentValue = 0;\r\n  for (let i = 1; i <= 20; i++) {\r\n    currentValue = 0;\r\n\r\n    if (weapon.traits[\"propulsive\"]) {\r\n      currentValue += Math.floor(\r\n        statTrendValues[strikeInfo.damageScore][i] / 2\r\n      );\r\n    }\r\n\r\n    if (strikeInfo.cClass === \"Gunslinger\") currentValue += 1;\r\n\r\n    if (strikeInfo.cClass === \"Inventor\") {\r\n      let bonus = 0;\r\n      if (i >= 3) bonus = 1;\r\n      if (i >= 7) bonus = 2;\r\n      if (i >= 15) bonus = 3;\r\n      switch (strikeInfo.classOption) {\r\n        case \"Overdrive Success\":\r\n          currentValue +=\r\n            Math.floor(statTrendValues[strikeInfo.cantripScore][i] / 2) + bonus;\r\n          break;\r\n        case \"Overdrive Critical\":\r\n          currentValue += statTrendValues[strikeInfo.cantripScore][i] + bonus;\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n\r\n    adjustments[i] = currentValue;\r\n  }\r\n  return adjustments;\r\n};\r\n\r\nexport const hasBackswing = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.traits[\"backswing\"];\r\n};\r\nexport const hasDeadly = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.traits[\"deadly\"];\r\n};\r\nexport const hasFatal = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.traits[\"fatal\"];\r\n};\r\nexport const hasPickCritSpec = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.critSpec && weapon.critSpecType === \"Pick\";\r\n};\r\nexport const hasKnifeCritSpec = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.critSpec && weapon.critSpecType === \"Knife\";\r\n};\r\nexport const hasCritSpecEffect = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  return (\r\n    hasSwordCritSpec(strikeInfo, useWeapon2) ||\r\n    hasHammerCritSpec(strikeInfo, useWeapon2) ||\r\n    hasSpearCritSpec(strikeInfo, useWeapon2)\r\n  );\r\n};\r\nexport const hasSwordCritSpec = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.critSpec && weapon.critSpecType === \"Sword\";\r\n};\r\nexport const hasHammerCritSpec = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.critSpec && weapon.critSpecType === \"Hammer\";\r\n};\r\nexport const hasSpearCritSpec = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  return weapon.critSpec && weapon.critSpecType === \"Spear\";\r\n};\r\nexport const critSpecDice = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n\r\n  const adjustments: { [key: number]: number } = {};\r\n  let currentValue = 0;\r\n  for (let i = 1; i <= 20; i++) {\r\n    if (i >= weapon.critSpecLevel) {\r\n      if (weapon.critSpec && weapon.critSpecType === \"Knife\") {\r\n        if (i >= 1) currentValue = 1;\r\n      }\r\n    }\r\n    adjustments[i] = currentValue;\r\n  }\r\n  return adjustments;\r\n};\r\nexport const critSpecDamage = (\r\n  strikeInfo: StrikeInfo,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n\r\n  const adjustments: { [key: number]: number } = {};\r\n  let currentValue = 0;\r\n  for (let i = 1; i <= 20; i++) {\r\n    if (i >= weapon.critSpecLevel) {\r\n      if (weapon.critSpec && weapon.critSpecType === \"Pick\") {\r\n        if (i >= 1) currentValue = 2;\r\n        if (i >= 4) currentValue = 4;\r\n        if (i >= 12) currentValue = 6;\r\n        if (i >= 19) currentValue = 8;\r\n      }\r\n      if (weapon.critSpec && weapon.critSpecType === \"Knife\") {\r\n        if (i >= 2) currentValue = 1;\r\n        if (i >= 10) currentValue = 2;\r\n        if (i >= 16) currentValue = 3;\r\n      }\r\n    }\r\n    adjustments[i] = currentValue;\r\n  }\r\n  return adjustments;\r\n};\r\n\r\nexport const getSkillTarget = (skillInfo: SkillInfo) => {\r\n  switch (skillInfo.skillActivity) {\r\n    case \"Trip\":\r\n      return defenses.REF;\r\n    case \"Grapple\":\r\n      return defenses.FORT;\r\n    case \"Demoralize\":\r\n      return defenses.WILL;\r\n    default:\r\n      return defenses.selfDC;\r\n  }\r\n};\r\n\r\nexport const getSkillEffects = (skillInfo: SkillInfo) => {\r\n  switch (skillInfo.skillActivity) {\r\n    case \"Trip\":\r\n      return [\r\n        {\r\n          effectCondition: conditions.AT_LEAST_SUCC,\r\n          effectType: effectTypes.PRONE,\r\n          effectValue: 1,\r\n        },\r\n      ];\r\n    case \"Grapple\":\r\n      return [\r\n        {\r\n          effectCondition: conditions.SUCC,\r\n          effectType: effectTypes.GRAPPLED,\r\n          effectValue: 1,\r\n        },\r\n        {\r\n          effectCondition: conditions.CRIT,\r\n          effectType: effectTypes.RESTRAINED,\r\n          effectValue: 1,\r\n        },\r\n      ];\r\n    case \"Demoralize\":\r\n      return [\r\n        {\r\n          effectCondition: conditions.SUCC,\r\n          effectType: effectTypes.FRIGHTENED,\r\n          effectValue: 1,\r\n        },\r\n        {\r\n          effectCondition: conditions.CRIT,\r\n          effectType: effectTypes.FRIGHTENED,\r\n          effectValue: 2,\r\n        },\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n};\r\nexport const hasSkillDamage = (skillInfo: SkillInfo) => {\r\n  if (skillInfo.skillActivity === \"Trip\") {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getCantripTarget = (cantripInfo: CantripInfo) => {\r\n  switch (cantripInfo.cantrip) {\r\n    case \"Electric Arc\":\r\n      return { type: \"Save\", targetType: defenses.REF } as const;\r\n    case \"Daze\":\r\n      return { type: \"Save\", targetType: defenses.WILL } as const;\r\n\r\n    default:\r\n      return { targetType: defenses.AC };\r\n  }\r\n};\r\nexport const getCantripDamage = (cantripInfo: CantripInfo) => {\r\n  switch (cantripInfo.cantrip) {\r\n    case \"Electric Arc\":\r\n      return { damageCondition: dCond.BASIC, diceSize: diceSizes[4] };\r\n    case \"Daze\":\r\n      return {\r\n        damageCondition: dCond.BASIC,\r\n        dieTrend: dieTrends.NONE,\r\n        dieAdjustments: valuesFromBonusLevels([5, 9, 13, 17]),\r\n      };\r\n    case \"Telekinetic Projectile\":\r\n      return {};\r\n    default:\r\n      return { diceSize: diceSizes[4] };\r\n  }\r\n};\r\nexport const getSpellTarget = (spellInfo: SpellInfo) => {\r\n  switch (spellInfo.spell) {\r\n    case \"Fireball\":\r\n      return { targetType: defenses.REF };\r\n    case \"Fear\":\r\n      return { targetType: defenses.WILL };\r\n\r\n    default:\r\n      return { targetType: defenses.REF };\r\n  }\r\n};\r\n","import { EntityState } from \"@reduxjs/toolkit\";\r\nimport {\r\n  activityTypes,\r\n  conditions,\r\n  profTrends,\r\n  defenses,\r\n  MAPs,\r\n  rollTypes,\r\n  statTrends,\r\n  itemTrends,\r\n  effectTypes,\r\n  damageTrends,\r\n  Condition,\r\n  RollType,\r\n  ActivityType,\r\n  ProfTrend,\r\n  StatTrend,\r\n  ItemTrend,\r\n  MAP,\r\n  Defense,\r\n  DamageCond,\r\n  DieTrend,\r\n  DamageTrend,\r\n  DamageType,\r\n  Material,\r\n  EffectType,\r\n  damageTypes,\r\n  dCond,\r\n  dieTrends,\r\n  materials,\r\n  WhenConditions,\r\n  ImportStates,\r\n  whenConditions,\r\n} from \"../../Model/types\";\r\n\r\nexport type State = {\r\n  selectedRoutine: number | undefined;\r\n  selectedActivityPath: number | undefined;\r\n  parentRoutine: number | undefined;\r\n  parentActivity: number | undefined;\r\n  routines: EntityState<Routine>;\r\n  activityPaths: EntityState<ActivityPath>;\r\n  damages: EntityState<Damage>;\r\n  effects: EntityState<Effect>;\r\n\r\n  importRoutine: ImportStates;\r\n};\r\n\r\nexport interface Adjustment {\r\n  [key: number]: number;\r\n}\r\nexport interface Routine {\r\n  id: number;\r\n  name: string;\r\n  display: boolean;\r\n  apIds: number[];\r\n  levelDiff: number;\r\n  description: string;\r\n  startLevel: number;\r\n  endLevel: number;\r\n}\r\nexport interface RoutineObject {\r\n  id: number;\r\n  name: string;\r\n  display: boolean;\r\n  apIds: ActivityPathObject[];\r\n  levelDiff: number;\r\n  description: string;\r\n  startLevel: number;\r\n  endLevel: number;\r\n}\r\nexport interface ActivityPath {\r\n  id: number;\r\n  parentId?: number;\r\n  routineId?: number;\r\n  name: string;\r\n  condition: Condition;\r\n\r\n  rollType: RollType;\r\n  type: ActivityType;\r\n  profTrend: ProfTrend;\r\n  statTrend: StatTrend;\r\n  itemTrend: ItemTrend;\r\n  bonusAdjustments: Adjustment;\r\n  MAP: MAP;\r\n\r\n  targetType: Defense;\r\n  damages: number[];\r\n  effects: number[];\r\n  apIds: number[];\r\n}\r\nexport interface ActivityPathObject {\r\n  id: number;\r\n  parentId?: number;\r\n  routineId?: number;\r\n  name: string;\r\n  condition: Condition;\r\n\r\n  rollType: RollType;\r\n  type: ActivityType;\r\n  profTrend: ProfTrend;\r\n  statTrend: StatTrend;\r\n  itemTrend: ItemTrend;\r\n  bonusAdjustments: Adjustment;\r\n  MAP: MAP;\r\n\r\n  targetType: Defense;\r\n  damages: Damage[];\r\n  effects: Effect[];\r\n  apIds: ActivityPathObject[];\r\n}\r\nexport interface Damage {\r\n  id: number;\r\n  damageCondition: DamageCond;\r\n\r\n  dieTrend: DieTrend;\r\n  dieAdjustments: Adjustment;\r\n  diceSize: number;\r\n  fatal: boolean;\r\n  fatalDie: number;\r\n  damageTrend: DamageTrend[];\r\n  damageAdjustments: Adjustment;\r\n\r\n  damageType: DamageType;\r\n  material: Material;\r\n  persistent: boolean;\r\n  multiplier: number;\r\n  damageWhen: WhenConditions[];\r\n}\r\nexport interface Effect {\r\n  id: number;\r\n  effectCondition: Condition;\r\n  effectType: EffectType;\r\n  effectValue: number | undefined;\r\n  startLevel: number;\r\n  endLevel: number;\r\n  damageWhen: WhenConditions[];\r\n}\r\n\r\nexport function isRoutineObject(routine: any): routine is RoutineObject {\r\n  return (\r\n    typeof routine === \"object\" &&\r\n    typeof routine.name === \"string\" &&\r\n    typeof routine.display === \"boolean\" &&\r\n    typeof routine.levelDiff === \"number\" &&\r\n    typeof routine.description === \"string\" &&\r\n    isActivityPaths(routine.apIds) &&\r\n    typeof routine.startLevel === \"number\" &&\r\n    typeof routine.endLevel === \"number\"\r\n  );\r\n}\r\nfunction isActivityPaths(apIds: unknown): apIds is ActivityPathObject[] {\r\n  if (Array.isArray(apIds)) {\r\n    for (let apId of apIds) {\r\n      if (\r\n        !(\r\n          Object.values(conditions).includes(apId.condition) &&\r\n          Object.values(rollTypes).includes(apId.rollType) &&\r\n          Object.values(activityTypes).includes(apId.type) &&\r\n          Object.values(profTrends).includes(apId.profTrend) &&\r\n          Object.values(statTrends).includes(apId.statTrend) &&\r\n          Object.values(itemTrends).includes(apId.itemTrend) &&\r\n          isAdjustment(apId.bonusAdjustments) &&\r\n          Object.values(MAPs).includes(apId.MAP) &&\r\n          Object.values(defenses).includes(apId.targetType) &&\r\n          isActivityPaths(apId.apIds) &&\r\n          isDamages(apId.damages) &&\r\n          isEffects(apId.effects)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  // console.log(\"6\");\r\n  return false;\r\n}\r\nfunction isAdjustment(adjustments: any): adjustments is Adjustment {\r\n  if (typeof adjustments !== \"object\") {\r\n    return false;\r\n  }\r\n  for (let i = 1; i <= 20; i++) {\r\n    if (typeof adjustments[i] !== \"number\") {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction isDamages(damages: unknown): damages is Damage[] {\r\n  if (Array.isArray(damages)) {\r\n    for (let damage of damages) {\r\n      if (Array.isArray(damage.damageTrend)) {\r\n        for (let dt of damage.damageTrend) {\r\n          if (!Object.values(damageTrends).includes(dt)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (Array.isArray(damage.damageWhen)) {\r\n        for (let dw of damage.damageWhen) {\r\n          if (!Object.values(whenConditions).includes(dw)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !(\r\n          Object.values(dCond).includes(damage.damageCondition) &&\r\n          Object.values(dieTrends).includes(damage.dieTrend) &&\r\n          isAdjustment(damage.dieAdjustments) &&\r\n          typeof damage.diceSize === \"number\" &&\r\n          typeof damage.fatal === \"boolean\" &&\r\n          typeof damage.fatalDie === \"number\" &&\r\n          isAdjustment(damage.damageAdjustments) &&\r\n          Object.values(damageTypes).includes(damage.damageType) &&\r\n          Object.values(materials).includes(damage.material) &&\r\n          typeof damage.persistent === \"boolean\" &&\r\n          [0.5, 1, 2].includes(damage.multiplier)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isEffects(effects: unknown): effects is Effect[] {\r\n  if (Array.isArray(effects)) {\r\n    for (let effect of effects) {\r\n      if (Array.isArray(effect.damageWhen)) {\r\n        for (let dw of effect.damageWhen) {\r\n          if (!Object.values(whenConditions).includes(dw)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !(\r\n          Object.values(conditions).includes(effect.effectCondition) &&\r\n          Object.values(effectTypes).includes(effect.effectType) &&\r\n          typeof effect.startLevel === \"number\" &&\r\n          typeof effect.endLevel === \"number\"\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","import {\r\n  createEntityAdapter,\r\n  createSlice,\r\n  PayloadAction,\r\n  Update,\r\n} from \"@reduxjs/toolkit\";\r\nimport { WritableDraft } from \"immer/dist/internal\";\r\nimport {\r\n  classWeaponMAP,\r\n  classWeaponProf,\r\n  classAdjustments,\r\n  StrikeInfo,\r\n  activityWeaponDiceAdjustments,\r\n  classWeaponDamageTrends,\r\n  hasDeadly,\r\n  hasFatal,\r\n  hasPickCritSpec,\r\n  critSpecDamage,\r\n  hasKnifeCritSpec,\r\n  critSpecDice,\r\n  classDamageAdjustments,\r\n  hasCritSpecEffect,\r\n  hasSwordCritSpec,\r\n  hasHammerCritSpec,\r\n  hasSpearCritSpec,\r\n  hasClassPrecisionDamage,\r\n  classPrecisionDamage,\r\n  hasActivityDamageDice,\r\n  activityDamageDice,\r\n  SkillInfo,\r\n  getSkillEffects,\r\n  hasSkillDamage,\r\n  getSkillTarget,\r\n  CantripInfo,\r\n  SpellInfo,\r\n  getCantripTarget,\r\n  getCantripDamage,\r\n  getSpellTarget,\r\n  hasBackswing,\r\n  getStrikeName,\r\n  hasActivityCritDamage,\r\n  activityCritDamage,\r\n  getStrikeRoutineName,\r\n  getSkillRoutineName,\r\n  getCantripRoutineName,\r\n  getSpellRoutineName,\r\n  hasSplashDamage,\r\n  getSplashDamage,\r\n} from \"../../Model/newActivityInfo\";\r\nimport {\r\n  activityTypes,\r\n  conditions,\r\n  profTrends,\r\n  defenses,\r\n  MAPs,\r\n  nextMAPs,\r\n  rollTypes,\r\n  statTrends,\r\n  itemTrends,\r\n  effectTypes,\r\n  EffectType,\r\n  diceSizes,\r\n  damageTypes,\r\n  dCond,\r\n  dieTrends,\r\n  materials,\r\n  effectStateTypes,\r\n  effectValueTypes,\r\n  whenConditions,\r\n  importStates,\r\n  ActivityType,\r\n  Condition,\r\n  MAP,\r\n  ItemTrend,\r\n  DieTrend,\r\n} from \"../../Model/types\";\r\nimport { RootState } from \"../../App/store\";\r\nimport {\r\n  ActivityPath,\r\n  ActivityPathObject,\r\n  Damage,\r\n  Effect,\r\n  isRoutineObject,\r\n  Routine,\r\n  RoutineObject,\r\n  State,\r\n} from \"./RoutineTypes\";\r\n\r\nexport const routinesAdapter = createEntityAdapter<Routine>();\r\nexport const activityPathAdapter = createEntityAdapter<ActivityPath>();\r\nexport const damageAdapter = createEntityAdapter<Damage>();\r\nexport const effectAdapter = createEntityAdapter<Effect>();\r\n\r\nlet routineId = 1;\r\nlet activityPathId = 1;\r\nlet damageId = 1;\r\nlet effectId = 1;\r\n\r\nconst empty: { [key: number]: number } = {};\r\nconst one: { [key: number]: number } = {};\r\nfor (let i = 1; i <= 20; i++) {\r\n  empty[i] = 0;\r\n  one[i] = 1;\r\n}\r\n\r\nconst saveState = (state: State) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"routineState\", serializedState);\r\n  } catch {\r\n    // ignore errors\r\n  }\r\n};\r\n\r\nconst loadState = () => {\r\n  // console.log(\"Loading state from local storage\");\r\n  try {\r\n    const serializedState = localStorage.getItem(\"routineState\");\r\n    if (serializedState !== null) {\r\n      const state = JSON.parse(serializedState);\r\n      // console.log(state);\r\n      routineId = Math.max(...state.routines.ids);\r\n      activityPathId = Math.max(...state.activityPaths.ids);\r\n      damageId = Math.max(...state.damages.ids);\r\n      effectId = Math.max(...state.effects.ids);\r\n      return state;\r\n    }\r\n    // console.log(\"Not loaded\");\r\n    return undefined;\r\n  } catch (err) {\r\n    // ignore errors\r\n    console.log(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\n// try to load initial state\r\nconst savedState = loadState();\r\n\r\nconst initialState: State = savedState\r\n  ? savedState\r\n  : {\r\n      selectedRoutine: 0,\r\n      selectedActivityPath: undefined,\r\n      parentRoutine: 0,\r\n      parentActivity: undefined,\r\n      routines: routinesAdapter.getInitialState(),\r\n      activityPaths: activityPathAdapter.getInitialState(),\r\n      damages: damageAdapter.getInitialState(),\r\n      effects: effectAdapter.getInitialState(),\r\n      importRoutine: importStates.MessageSeen,\r\n    };\r\n\r\nconst defaultActivity = {\r\n  name: \"\",\r\n  type: activityTypes.STRIKE,\r\n  condition: conditions.ALWAYS,\r\n  rollType: rollTypes.NORMAL,\r\n  profTrend: profTrends.TRAINED,\r\n  statTrend: statTrends.AS10,\r\n  itemTrend: itemTrends.NONE,\r\n  bonusAdjustments: empty,\r\n  MAP: MAPs.N1,\r\n  targetType: defenses.AC,\r\n  damages: [],\r\n  effects: [],\r\n  apIds: [],\r\n};\r\nconst defaultStrikeParent = {\r\n  profTrend: profTrends.MARTIALWEAPON,\r\n  statTrend: statTrends.AS18a,\r\n  itemTrend: itemTrends.WEAPON,\r\n  damages: [0, 1],\r\n  effects: [0],\r\n};\r\nconst defaultSaveParent = {\r\n  type: activityTypes.SAVE,\r\n  profTrend: profTrends.CASTERSPELL,\r\n  statTrend: statTrends.AS18a,\r\n  targetType: defenses.REF,\r\n  damages: [2],\r\n  effects: [],\r\n};\r\nconst defaultDamage = {\r\n  damageCondition: dCond.STRIKE,\r\n  damageType: damageTypes.B,\r\n  material: materials.NONE,\r\n  persistent: false,\r\n  multiplier: 1,\r\n  damageWhen: [whenConditions.Always],\r\n\r\n  dieTrend: dieTrends.NONE,\r\n  dieAdjustments: empty,\r\n  diceSize: 6,\r\n  fatal: false,\r\n  fatalDie: 10,\r\n  damageTrend: [],\r\n  damageAdjustments: empty,\r\n};\r\nconst defaultEffect = {\r\n  effectCondition: conditions.ALWAYS,\r\n  effectType: effectTypes.FLATFOOT,\r\n  effectValue: 1,\r\n  startLevel: 1,\r\n  endLevel: 20,\r\n  damageWhen: [whenConditions.Always],\r\n};\r\n\r\nexport const routinesSlice = createSlice({\r\n  name: \"routines\",\r\n  initialState,\r\n  reducers: {\r\n    setRoutine: (state, action) => {\r\n      state.selectedRoutine = action.payload;\r\n      state.selectedActivityPath = undefined;\r\n      state.parentActivity = undefined;\r\n      state.parentRoutine = undefined;\r\n      // also save data\r\n      saveState(state);\r\n    },\r\n    setActivityPath: (state, action) => {\r\n      if (state.selectedActivityPath === action.payload) {\r\n        state.selectedActivityPath = undefined;\r\n      } else {\r\n        state.selectedActivityPath = action.payload;\r\n      }\r\n      state.parentActivity = undefined;\r\n      state.parentRoutine = undefined;\r\n    },\r\n\r\n    routineAdded: (state, action) => {\r\n      routinesAdapter.addOne(state.routines, action);\r\n    },\r\n    routineUpdated: (state, action: PayloadAction<Update<Routine>>) => {\r\n      routinesAdapter.updateOne(state.routines, action);\r\n    },\r\n    activityPathAdded: (state, action) => {\r\n      activityPathAdapter.addOne(state.activityPaths, action);\r\n    },\r\n    activityPathUpdated: (state, action) => {\r\n      activityPathAdapter.updateOne(state.activityPaths, action);\r\n    },\r\n    damageAdded: (state, action) => {\r\n      damageAdapter.addOne(state.damages, action);\r\n    },\r\n    damageUpdated: (state, action) => {\r\n      damageAdapter.updateOne(state.damages, action);\r\n    },\r\n    effectAdded: (state, action) => {\r\n      effectAdapter.addOne(state.effects, action);\r\n    },\r\n    effectUpdated: (state, action) => {\r\n      effectAdapter.updateOne(state.effects, action);\r\n    },\r\n\r\n    routineCreated: {\r\n      reducer: (\r\n        state,\r\n        action: PayloadAction<{ id: number; copy: boolean }>\r\n      ) => {\r\n        const { id, copy } = action.payload;\r\n        state.parentRoutine = undefined;\r\n        if (copy && state.selectedRoutine !== undefined) {\r\n          const routine = state.routines.entities[state.selectedRoutine]!;\r\n          const name = routine.name + \" Copy\";\r\n          const apIds = copyActivityPaths(state, routine.apIds, undefined, id);\r\n          routinesAdapter.addOne(state.routines, {\r\n            ...routine,\r\n            id,\r\n            name,\r\n            apIds,\r\n          });\r\n        } else {\r\n          routinesAdapter.addOne(state.routines, {\r\n            id,\r\n            name: \"\",\r\n            display: true,\r\n            apIds: [],\r\n            levelDiff: 0,\r\n            description: \"\",\r\n            startLevel: 1,\r\n            endLevel: 20,\r\n          });\r\n          state.parentRoutine = id;\r\n        }\r\n        state.selectedRoutine = id;\r\n        state.selectedActivityPath = undefined;\r\n        state.parentActivity = undefined;\r\n      },\r\n      prepare: ({ copy = false }) => {\r\n        const id = ++routineId;\r\n        return { payload: { id, copy } };\r\n      },\r\n    },\r\n    routineRemoved: (state, action) => {\r\n      // recursively remove all children\r\n      const routineId = action.payload;\r\n      let childrenIds = state.routines.entities[routineId]!.apIds;\r\n      removeActivityPaths(state, childrenIds);\r\n\r\n      routinesAdapter.removeOne(state.routines, routineId);\r\n      if (routineId === state.selectedRoutine) {\r\n        if (state.routines.ids.length === 0) {\r\n          state.selectedRoutine = undefined;\r\n        } else {\r\n          state.selectedRoutine =\r\n            state.routines.entities[state.routines.ids[0]]!.id;\r\n        }\r\n        state.selectedActivityPath = undefined;\r\n        state.parentActivity = undefined;\r\n        state.parentRoutine = undefined;\r\n      }\r\n    },\r\n    setNewActivityParent: (\r\n      state,\r\n      action: PayloadAction<{\r\n        parentId?: number;\r\n        routineId?: number;\r\n      }>\r\n    ) => {\r\n      state.parentRoutine = action.payload.routineId;\r\n      state.parentActivity = action.payload.parentId;\r\n      state.selectedActivityPath = undefined;\r\n    },\r\n    emptyActivityPathCreated: {\r\n      reducer: (\r\n        state,\r\n        action: PayloadAction<{\r\n          id: number;\r\n          routineId: number;\r\n          activityType?: ActivityType;\r\n        }>\r\n      ) => {\r\n        const { id, routineId, activityType } = action.payload;\r\n        let ap = {\r\n          ...defaultActivity,\r\n          profTrend: profTrends.UNTRAINED,\r\n          id,\r\n          routineId,\r\n        } as ActivityPath;\r\n        let name = \"\";\r\n        let description = \"\";\r\n        if (activityType !== undefined) {\r\n          if (activityType === activityTypes.STRIKE) {\r\n            let damages = copyDamages(state, defaultStrikeParent.damages);\r\n            let effects = copyEffects(state, defaultStrikeParent.effects);\r\n            name = \"Martial - Strike - d8 Sword\";\r\n            ap = {\r\n              ...defaultActivity,\r\n              ...defaultStrikeParent,\r\n              id,\r\n              routineId,\r\n              name,\r\n              damages,\r\n              effects,\r\n            };\r\n            name = \"Martial - 1 Strike - d8 Sword\";\r\n          }\r\n          if (activityType === activityTypes.SAVE) {\r\n            let damages = copyDamages(state, defaultSaveParent.damages);\r\n            let effects = copyEffects(state, defaultSaveParent.effects);\r\n            name = \"Caster - Fireball\";\r\n            ap = {\r\n              ...defaultActivity,\r\n              ...defaultSaveParent,\r\n              id,\r\n              routineId,\r\n              name,\r\n              damages,\r\n              effects,\r\n            };\r\n          }\r\n        } else {\r\n        }\r\n\r\n        state.routines.entities[routineId]!.apIds.push(id);\r\n        if (state.routines.entities[routineId]!.name === \"\") {\r\n          state.routines.entities[routineId]!.name = name;\r\n        }\r\n        if (state.routines.entities[routineId]!.description === \"\") {\r\n          state.routines.entities[routineId]!.description = description;\r\n        }\r\n        activityPathAdapter.addOne(state.activityPaths, ap);\r\n        state.selectedActivityPath = id;\r\n        state.parentActivity = undefined;\r\n        state.parentRoutine = undefined;\r\n      },\r\n      prepare: ({\r\n        routineId,\r\n        activityType,\r\n      }: {\r\n        routineId: number;\r\n        activityType?: ActivityType;\r\n      }) => {\r\n        const id = ++activityPathId;\r\n        return {\r\n          payload: {\r\n            id,\r\n            routineId,\r\n            activityType,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    activityPathCreated: (\r\n      state,\r\n      action: PayloadAction<{\r\n        strikeInfo?: StrikeInfo;\r\n        skillInfo?: SkillInfo;\r\n        cantripInfo?: CantripInfo;\r\n        spellInfo?: SpellInfo;\r\n      }>\r\n    ) => {\r\n      const { parentActivity: parentId, parentRoutine: routineId } = state;\r\n\r\n      const { strikeInfo, skillInfo, cantripInfo, spellInfo } = action.payload;\r\n      let id: number = 0;\r\n      let name = \"\";\r\n      let description = \"\";\r\n\r\n      if (strikeInfo !== undefined) {\r\n        id = createStrikeActivity(state, parentId, routineId, strikeInfo, 0);\r\n        [name, description] = getStrikeRoutineName(strikeInfo);\r\n      }\r\n      if (skillInfo !== undefined) {\r\n        [name, description] = getSkillRoutineName(skillInfo);\r\n        id = createSkillActivity(state, parentId, routineId, skillInfo);\r\n      }\r\n      if (cantripInfo !== undefined) {\r\n        [name, description] = getCantripRoutineName(cantripInfo);\r\n        id = createCantripActivity(state, parentId, routineId, cantripInfo);\r\n      }\r\n      if (spellInfo !== undefined) {\r\n        [name, description] = getSpellRoutineName(spellInfo);\r\n        id = createSpellActivity(state, parentId, routineId, spellInfo);\r\n      }\r\n\r\n      if (routineId !== undefined) {\r\n        state.routines.entities[routineId]!.apIds.push(id);\r\n        if (state.routines.entities[routineId]!.name === \"\") {\r\n          state.routines.entities[routineId]!.name = name;\r\n        }\r\n        if (state.routines.entities[routineId]!.description === \"\") {\r\n          state.routines.entities[routineId]!.description = description;\r\n        }\r\n      }\r\n      if (parentId !== undefined) {\r\n        state.activityPaths.entities[parentId]!.apIds.push(id);\r\n      }\r\n\r\n      state.selectedActivityPath = id;\r\n      state.parentActivity = undefined;\r\n      state.parentRoutine = undefined;\r\n    },\r\n    activityPathContinued: {\r\n      reducer: (\r\n        state,\r\n        action: PayloadAction<{\r\n          id: number;\r\n          parentId: number;\r\n        }>\r\n      ) => {\r\n        const { id, parentId } = action.payload;\r\n        state.activityPaths.entities[parentId]!.apIds.push(id);\r\n        const parentAP = state.activityPaths.entities[parentId]!;\r\n        // copy parent damages and effects\r\n        let newDamages = copyDamages(state, parentAP.damages);\r\n        let newEffects = copyEffects(state, parentAP.effects);\r\n\r\n        activityPathAdapter.addOne(state.activityPaths, {\r\n          ...parentAP,\r\n          id,\r\n          parentId,\r\n          routineId: undefined,\r\n          MAP: nextMAPs[parentAP.MAP],\r\n          damages: newDamages,\r\n          effects: newEffects,\r\n          apIds: [],\r\n        });\r\n        state.selectedActivityPath = id;\r\n      },\r\n      prepare: ({ parentId }: { parentId: number }) => {\r\n        const id = ++activityPathId;\r\n        return {\r\n          payload: {\r\n            id,\r\n            parentId,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    activityPathRemoved: (state, action) => {\r\n      const { id, parentId, routineId } = action.payload;\r\n\r\n      // recursively remove all children\r\n      let childrenIds = [id];\r\n      removeActivityPaths(state, childrenIds);\r\n\r\n      if (parentId !== undefined) {\r\n        state.activityPaths.entities[parentId]!.apIds =\r\n          state.activityPaths.entities[parentId]!.apIds.filter(\r\n            (apId) => apId !== id\r\n          );\r\n      }\r\n      if (routineId !== undefined) {\r\n        state.routines.entities[routineId]!.apIds = state.routines.entities[\r\n          routineId\r\n        ]!.apIds.filter((apId) => apId !== id);\r\n      }\r\n      state.selectedActivityPath = undefined;\r\n    },\r\n\r\n    damageCreated: {\r\n      reducer: (\r\n        state,\r\n        action: PayloadAction<{\r\n          id: number;\r\n          parentId: number;\r\n        }>\r\n      ) => {\r\n        const { id, parentId } = action.payload;\r\n        state.activityPaths.entities[parentId]!.damages.push(id);\r\n        damageAdapter.addOne(state.damages, { id, ...defaultDamage });\r\n      },\r\n      prepare: ({ parentId }) => {\r\n        const id = ++damageId;\r\n        return {\r\n          payload: {\r\n            id,\r\n            parentId,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    damageRemoved: (\r\n      state,\r\n      action: PayloadAction<{\r\n        id: number;\r\n        parentId: number;\r\n      }>\r\n    ) => {\r\n      const { id, parentId } = action.payload;\r\n      state.activityPaths.entities[parentId]!.damages =\r\n        state.activityPaths.entities[parentId]!.damages.filter(\r\n          (did) => did !== id\r\n        );\r\n      damageAdapter.removeOne(state.damages, id);\r\n    },\r\n    effectCreated: {\r\n      reducer: (\r\n        state,\r\n        action: PayloadAction<{\r\n          id: number;\r\n          parentId: number;\r\n        }>\r\n      ) => {\r\n        const { id, parentId } = action.payload;\r\n        state.activityPaths.entities[parentId]!.effects.push(id);\r\n        effectAdapter.addOne(state.effects, {\r\n          ...defaultEffect,\r\n          id,\r\n        });\r\n      },\r\n      prepare: ({ parentId }) => {\r\n        const id = ++effectId;\r\n        return {\r\n          payload: {\r\n            id,\r\n            parentId,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    effectRemoved: (state, action) => {\r\n      const { id, parentId } = action.payload;\r\n      state.activityPaths.entities[parentId]!.effects =\r\n        state.activityPaths.entities[parentId]!.effects.filter(\r\n          (eid) => eid !== id\r\n        );\r\n      effectAdapter.removeOne(state.effects, id);\r\n    },\r\n    importRoutine: (state, action) => {\r\n      try {\r\n        state.importRoutine = importStates.Importing;\r\n        const routineObject = JSON.parse(action.payload);\r\n        if (isRoutineObject(routineObject)) {\r\n          state.selectedRoutine = insertRoutine(state, routineObject);\r\n          state.selectedActivityPath = undefined;\r\n          state.parentActivity = undefined;\r\n          state.parentRoutine = undefined;\r\n          state.importRoutine = importStates.Successful;\r\n        } else {\r\n          state.importRoutine = importStates.Failure;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        console.log(\"Parsing failed\");\r\n        state.importRoutine = importStates.Failure;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setRoutine,\r\n  setActivityPath,\r\n  setNewActivityParent,\r\n\r\n  routineAdded,\r\n  routineUpdated,\r\n  routineCreated,\r\n  routineRemoved,\r\n\r\n  activityPathAdded,\r\n  activityPathUpdated,\r\n  emptyActivityPathCreated,\r\n  activityPathCreated,\r\n  activityPathContinued,\r\n  activityPathRemoved,\r\n\r\n  damageAdded,\r\n  damageUpdated,\r\n  damageCreated,\r\n  damageRemoved,\r\n\r\n  effectAdded,\r\n  effectUpdated,\r\n  effectCreated,\r\n  effectRemoved,\r\n\r\n  importRoutine,\r\n} = routinesSlice.actions;\r\n\r\nexport default routinesSlice.reducer;\r\n\r\nexport const {\r\n  selectById: selectRoutineById,\r\n  selectIds: selectRoutineIds,\r\n  selectEntities: selectRoutineEntities,\r\n  selectAll: selectAllRoutines,\r\n  selectTotal: selectTotalRoutines,\r\n} = routinesAdapter.getSelectors((state: RootState) => state.routines.routines);\r\n\r\nexport const {\r\n  selectById: selectactivityPathById,\r\n  selectIds: selectactivityPathIds,\r\n  selectEntities: selectactivityPathEntities,\r\n  selectAll: selectAllactivityPaths,\r\n  selectTotal: selectTotalactivityPaths,\r\n} = activityPathAdapter.getSelectors(\r\n  (state: RootState) => state.routines.activityPaths\r\n);\r\n\r\nexport const {\r\n  selectById: selectdamageById,\r\n  selectIds: selectdamageIds,\r\n  selectEntities: selectdamageEntities,\r\n  selectAll: selectAlldamages,\r\n  selectTotal: selectTotaldamages,\r\n} = damageAdapter.getSelectors((state: RootState) => state.routines.damages);\r\n\r\nexport const {\r\n  selectById: selecteffectById,\r\n  selectIds: selecteffectIds,\r\n  selectEntities: selecteffectEntities,\r\n  selectAll: selectAlleffects,\r\n  selectTotal: selectTotaleffects,\r\n} = effectAdapter.getSelectors((state: RootState) => state.routines.effects);\r\n\r\nexport const selectSelectedRoutine = (state: RootState) =>\r\n  state.routines.selectedRoutine;\r\nexport const selectSelectedActivityPath = (state: RootState) =>\r\n  state.routines.selectedActivityPath;\r\nexport const selectParentActivityId = (state: RootState) =>\r\n  state.routines.parentActivity;\r\nexport const selectCreateNewActivity = (state: RootState) =>\r\n  state.routines.selectedActivityPath === undefined &&\r\n  (state.routines.parentRoutine !== undefined ||\r\n    state.routines.parentActivity !== undefined);\r\nexport const selectSelectedRoutineObject = (state: RootState) => {\r\n  if (state.routines.selectedRoutine !== undefined) {\r\n    const routine =\r\n      state.routines.routines.entities[state.routines.selectedRoutine]!;\r\n    const routineObject = {\r\n      ...routine,\r\n      apIds: getActivityPaths(state.routines, routine.apIds),\r\n    };\r\n    return routineObject;\r\n  }\r\n  return undefined;\r\n};\r\nexport const selectRoutineDescriptions = (state: RootState) => {\r\n  return Object.values(state.routines.routines.entities)\r\n    .filter((routine) => routine?.display)\r\n    .map((routine) => routine?.name + \": \" + routine?.description);\r\n};\r\n\r\nexport const selectImportState = (state: RootState) => {\r\n  return state.routines.importRoutine;\r\n};\r\n\r\nconst removeActivityPaths = (state: WritableDraft<State>, ids: number[]) => {\r\n  let index = 0;\r\n  while (index < ids.length) {\r\n    let ap = state.activityPaths.entities[ids[index]]!;\r\n    ids.push(...ap!.apIds);\r\n    damageAdapter.removeMany(state.damages, ap.damages);\r\n    effectAdapter.removeMany(state.effects, ap.effects);\r\n    activityPathAdapter.removeOne(state.activityPaths, ap.id);\r\n    index += 1;\r\n  }\r\n};\r\n\r\nconst createStrikeActivity = (\r\n  state: WritableDraft<State>,\r\n  parentId: number | undefined,\r\n  routineId: number | undefined,\r\n  strikeInfo: StrikeInfo,\r\n  strikeNumber: number,\r\n  previousHits: number = 0,\r\n  condition: Condition = conditions.ALWAYS\r\n) => {\r\n  let useWeapon2 =\r\n    strikeInfo.twf && strikeInfo.isStrikeSecondaryWeapon[strikeNumber];\r\n  if (strikeInfo.twf && strikeInfo.activity === \"Double Slice\") {\r\n    if (strikeNumber === 0) useWeapon2 = false;\r\n    else useWeapon2 = true;\r\n  }\r\n\r\n  const id = ++activityPathId;\r\n  let apIds: number[] = [];\r\n  if (strikeNumber < strikeInfo.numStrikes - 1) {\r\n    if (strikeInfo.activity === \"Double Slice\") {\r\n      // if the first attack of double slice do no damage, but make 3 child activities for crit, hit, and miss\r\n      const onCrit = createStrikeActivity(\r\n        state,\r\n        id,\r\n        undefined,\r\n        strikeInfo,\r\n        strikeNumber + 1,\r\n        previousHits + 1,\r\n        conditions.CRIT\r\n      );\r\n      const onHit = createStrikeActivity(\r\n        state,\r\n        id,\r\n        undefined,\r\n        strikeInfo,\r\n        strikeNumber + 1,\r\n        previousHits + 1,\r\n        conditions.SUCC\r\n      );\r\n      const onMiss = createStrikeActivity(\r\n        state,\r\n        id,\r\n        undefined,\r\n        strikeInfo,\r\n        strikeNumber + 1,\r\n        previousHits,\r\n        conditions.FAIL_WORSE\r\n      );\r\n      apIds.push(onCrit, onHit, onMiss);\r\n    }\r\n    // need to combine damages for double slice with on miss, onHit, onCrit\r\n    else if (\r\n      strikeInfo.cClass === \"Ranger\" &&\r\n      strikeInfo.classOption === \"Precision Edge\"\r\n    ) {\r\n      const onHit = createStrikeActivity(\r\n        state,\r\n        id,\r\n        undefined,\r\n        strikeInfo,\r\n        strikeNumber + 1,\r\n        previousHits + 1,\r\n        conditions.AT_LEAST_SUCC\r\n      );\r\n      const onMiss = createStrikeActivity(\r\n        state,\r\n        id,\r\n        undefined,\r\n        strikeInfo,\r\n        strikeNumber + 1,\r\n        previousHits,\r\n        conditions.FAIL_WORSE\r\n      );\r\n      apIds.push(onHit, onMiss);\r\n    } else {\r\n      apIds.push(\r\n        createStrikeActivity(state, id, undefined, strikeInfo, strikeNumber + 1)\r\n      );\r\n    }\r\n  }\r\n  const name = getStrikeName(strikeInfo, useWeapon2);\r\n\r\n  let damages: number[] = [];\r\n  if (strikeInfo.activity === \"Double Slice\") {\r\n    if (strikeNumber < strikeInfo.numStrikes - 1) {\r\n      damages = [];\r\n    } else {\r\n      damages = createStrikeDamages(\r\n        state,\r\n        strikeInfo,\r\n        strikeNumber,\r\n        useWeapon2,\r\n        previousHits,\r\n        true,\r\n        condition\r\n        // which double slice activity is this? crit/hit/miss\r\n      );\r\n    }\r\n  } else {\r\n    damages = createStrikeDamages(\r\n      state,\r\n      strikeInfo,\r\n      strikeNumber,\r\n      useWeapon2,\r\n      previousHits\r\n    );\r\n  }\r\n  let effects = createStrikeEffects(\r\n    state,\r\n    strikeInfo,\r\n    strikeNumber,\r\n    useWeapon2\r\n  );\r\n  let MAP: MAP = classWeaponMAP(strikeInfo, useWeapon2);\r\n\r\n  if (strikeNumber + strikeInfo.numPrevStrikes === 1) {\r\n    if (strikeInfo.activity !== \"Double Slice\") MAP = nextMAPs[MAP];\r\n  } else if (strikeNumber + strikeInfo.numPrevStrikes >= 2) {\r\n    if (\r\n      strikeInfo.activity === \"Double Slice\" &&\r\n      strikeNumber + strikeInfo.numPrevStrikes === 2\r\n    ) {\r\n      MAP = nextMAPs[MAP];\r\n    } else {\r\n      MAP = nextMAPs[nextMAPs[MAP]];\r\n    }\r\n  }\r\n\r\n  let itemTrend: ItemTrend = itemTrends.WEAPON;\r\n  if (\r\n    strikeInfo.classOption === \"Bomb Strike\" ||\r\n    strikeInfo.classOption === \"Bomb w/ feats\"\r\n  ) {\r\n    itemTrend = itemTrends.BOMB;\r\n  }\r\n  if (\r\n    strikeInfo.classOption === \"Perpetual Bomb\" ||\r\n    strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\r\n  ) {\r\n    itemTrend = itemTrends.BOMB;\r\n  }\r\n  activityPathAdapter.addOne(state.activityPaths, {\r\n    ...defaultActivity,\r\n    id,\r\n    parentId,\r\n    routineId,\r\n    condition,\r\n    name,\r\n    type: activityTypes.STRIKE,\r\n    profTrend: classWeaponProf(strikeInfo.cClass, strikeInfo.classOption),\r\n    statTrend: strikeInfo.attackScore,\r\n    itemTrend,\r\n    bonusAdjustments: classAdjustments(strikeInfo, strikeNumber),\r\n    MAP,\r\n\r\n    damages,\r\n    effects,\r\n    apIds,\r\n  });\r\n  return id;\r\n};\r\nconst createStrikeDamages = (\r\n  state: WritableDraft<State>,\r\n  strikeInfo: StrikeInfo,\r\n  strikeNumber: number,\r\n  useWeapon2: boolean = false,\r\n  previousHits: number = 0,\r\n  addDoubleSliceDamage: boolean = false,\r\n  doubleSliceCondition: Condition = conditions.FAIL_WORSE\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n  const newDamages: number[] = [];\r\n\r\n  if (addDoubleSliceDamage) {\r\n    let weapon = strikeInfo.weapon1;\r\n    // use the first weapon for this damage always\r\n    if (doubleSliceCondition === conditions.CRIT) {\r\n      // add all damage as if crit... always\r\n      let id = ++damageId;\r\n      let dieTrend: DieTrend = dieTrends.WEAPON;\r\n      if (\r\n        strikeInfo.classOption === \"Bomb Strike\" ||\r\n        strikeInfo.classOption === \"Bomb w/ feats\"\r\n      ) {\r\n        dieTrend = dieTrends.BOMB;\r\n      }\r\n      if (\r\n        strikeInfo.classOption === \"Perpetual Bomb\" ||\r\n        strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\r\n      ) {\r\n        dieTrend = dieTrends.BOMB;\r\n      }\r\n      const weaponDamage: Damage = {\r\n        ...defaultDamage,\r\n        damageCondition: dCond.ALWAYS,\r\n        multiplier: 2,\r\n        id,\r\n        dieTrend,\r\n        dieAdjustments: activityWeaponDiceAdjustments(strikeInfo),\r\n        diceSize: hasFatal(strikeInfo) ? weapon.fatalSize : weapon.dieSize,\r\n        fatal: hasFatal(strikeInfo),\r\n        fatalDie: weapon.fatalSize,\r\n        damageTrend: classWeaponDamageTrends(strikeInfo, strikeNumber - 1),\r\n        damageAdjustments: classDamageAdjustments(strikeInfo),\r\n      };\r\n      damageAdapter.addOne(state.damages, weaponDamage);\r\n      newDamages.push(id);\r\n\r\n      if (\r\n        !(\r\n          strikeInfo.cClass === \"Alchemist\" &&\r\n          strikeInfo.classOption !== \"Normal\"\r\n        )\r\n      ) {\r\n        id = ++damageId;\r\n        const runeDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.ALWAYS,\r\n          multiplier: 2,\r\n          id,\r\n          dieTrend: weapon.runes,\r\n          diceSize: diceSizes[6],\r\n          damageType: damageTypes.FIRE,\r\n        };\r\n        damageAdapter.addOne(state.damages, runeDamage);\r\n        newDamages.push(id);\r\n      }\r\n\r\n      if (hasClassPrecisionDamage(strikeInfo, previousHits)) {\r\n        let { dieTrend, diceSize, damageWhen, damageTrend } =\r\n          classPrecisionDamage(strikeInfo, previousHits);\r\n        id = ++damageId;\r\n        const classDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.ALWAYS,\r\n          multiplier: 2,\r\n          id,\r\n          dieTrend,\r\n          diceSize,\r\n          damageType: damageTypes.PRECISION,\r\n          damageWhen,\r\n          damageTrend,\r\n        };\r\n        damageAdapter.addOne(state.damages, classDamage);\r\n        newDamages.push(id);\r\n      }\r\n\r\n      if (hasDeadly(strikeInfo)) {\r\n        let damageAdjustments = empty;\r\n        if (!hasFatal(strikeInfo) && hasPickCritSpec(strikeInfo))\r\n          damageAdjustments = critSpecDamage(strikeInfo);\r\n        id = ++damageId;\r\n        const critDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.ALWAYS,\r\n          id,\r\n          dieTrend: dieTrends.DEADLY,\r\n          diceSize: weapon.deadlySize,\r\n          damageAdjustments,\r\n        };\r\n        damageAdapter.addOne(state.damages, critDamage);\r\n        newDamages.push(id);\r\n      }\r\n      if (hasFatal(strikeInfo)) {\r\n        let damageAdjustments = empty;\r\n        if (hasPickCritSpec(strikeInfo))\r\n          damageAdjustments = critSpecDamage(strikeInfo);\r\n        id = ++damageId;\r\n        const critDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.ALWAYS,\r\n          id,\r\n          dieAdjustments: one,\r\n          diceSize: weapon.fatalSize,\r\n          damageAdjustments,\r\n        };\r\n        damageAdapter.addOne(state.damages, critDamage);\r\n        newDamages.push(id);\r\n      }\r\n      if (\r\n        !hasDeadly(strikeInfo) &&\r\n        !hasFatal(strikeInfo) &&\r\n        hasPickCritSpec(strikeInfo)\r\n      ) {\r\n        let damageAdjustments = critSpecDamage(strikeInfo);\r\n        id = ++damageId;\r\n        const critDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.ALWAYS,\r\n          id,\r\n          diceSize: weapon.fatalSize,\r\n          damageAdjustments,\r\n        };\r\n        damageAdapter.addOne(state.damages, critDamage);\r\n        newDamages.push(id);\r\n      }\r\n      if (hasKnifeCritSpec(strikeInfo)) {\r\n        let damageAdjustments = critSpecDamage(strikeInfo);\r\n        id = ++damageId;\r\n        const critDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.ALWAYS,\r\n          id,\r\n          dieAdjustments: critSpecDice(strikeInfo),\r\n          diceSize: diceSizes[6],\r\n          damageAdjustments,\r\n          persistent: true,\r\n        };\r\n        damageAdapter.addOne(state.damages, critDamage);\r\n        newDamages.push(id);\r\n      }\r\n    } else if (doubleSliceCondition === conditions.SUCC) {\r\n      // add hit damage always, add precision damage only on miss so we don't add it twice with the second attack\r\n      let id = ++damageId;\r\n      let dieTrend: DieTrend = dieTrends.WEAPON;\r\n      if (\r\n        strikeInfo.classOption === \"Bomb Strike\" ||\r\n        strikeInfo.classOption === \"Bomb w/ feats\"\r\n      ) {\r\n        dieTrend = dieTrends.BOMB;\r\n      }\r\n      if (\r\n        strikeInfo.classOption === \"Perpetual Bomb\" ||\r\n        strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\r\n      ) {\r\n        dieTrend = dieTrends.BOMB;\r\n      }\r\n      const weaponDamage: Damage = {\r\n        ...defaultDamage,\r\n        damageCondition: dCond.ALWAYS,\r\n        id,\r\n        dieTrend,\r\n        dieAdjustments: activityWeaponDiceAdjustments(strikeInfo),\r\n        diceSize: weapon.dieSize,\r\n        fatal: false,\r\n        fatalDie: weapon.fatalSize,\r\n        damageTrend: classWeaponDamageTrends(strikeInfo, strikeNumber - 1),\r\n        damageAdjustments: classDamageAdjustments(strikeInfo),\r\n      };\r\n      damageAdapter.addOne(state.damages, weaponDamage);\r\n      newDamages.push(id);\r\n\r\n      if (\r\n        !(\r\n          strikeInfo.cClass === \"Alchemist\" &&\r\n          strikeInfo.classOption !== \"Normal\"\r\n        )\r\n      ) {\r\n        id = ++damageId;\r\n        const runeDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.ALWAYS,\r\n          id,\r\n          dieTrend: weapon.runes,\r\n          diceSize: diceSizes[6],\r\n          damageType: damageTypes.FIRE,\r\n        };\r\n        damageAdapter.addOne(state.damages, runeDamage);\r\n        newDamages.push(id);\r\n      }\r\n\r\n      if (hasClassPrecisionDamage(strikeInfo, previousHits)) {\r\n        let { dieTrend, diceSize, damageWhen, damageTrend } =\r\n          classPrecisionDamage(strikeInfo, previousHits);\r\n        id = ++damageId;\r\n        const classDamage: Damage = {\r\n          ...defaultDamage,\r\n          damageCondition: dCond.FAIL_WORSE,\r\n          id,\r\n          dieTrend,\r\n          diceSize,\r\n          damageType: damageTypes.PRECISION,\r\n          damageWhen,\r\n          damageTrend,\r\n        };\r\n        damageAdapter.addOne(state.damages, classDamage);\r\n        newDamages.push(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  let id = ++damageId;\r\n  let dieTrend: DieTrend = dieTrends.WEAPON;\r\n  if (\r\n    strikeInfo.classOption === \"Bomb Strike\" ||\r\n    strikeInfo.classOption === \"Bomb w/ feats\"\r\n  ) {\r\n    dieTrend = dieTrends.BOMB;\r\n  }\r\n  if (\r\n    strikeInfo.classOption === \"Perpetual Bomb\" ||\r\n    strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\r\n  ) {\r\n    dieTrend = dieTrends.BOMB;\r\n  }\r\n  const weaponDamage: Damage = {\r\n    ...defaultDamage,\r\n    id,\r\n    dieTrend,\r\n    dieAdjustments: activityWeaponDiceAdjustments(strikeInfo),\r\n    diceSize: weapon.dieSize,\r\n    fatal: hasFatal(strikeInfo, useWeapon2),\r\n    fatalDie: weapon.fatalSize,\r\n    damageTrend: classWeaponDamageTrends(strikeInfo, strikeNumber, useWeapon2),\r\n    damageAdjustments: classDamageAdjustments(strikeInfo, useWeapon2),\r\n  };\r\n  damageAdapter.addOne(state.damages, weaponDamage);\r\n  newDamages.push(id);\r\n\r\n  if (\r\n    !(strikeInfo.cClass === \"Alchemist\" && strikeInfo.classOption !== \"Normal\")\r\n  ) {\r\n    id = ++damageId;\r\n    const runeDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      dieTrend: weapon.runes,\r\n      diceSize: diceSizes[6],\r\n      damageType: damageTypes.FIRE,\r\n    };\r\n    damageAdapter.addOne(state.damages, runeDamage);\r\n    newDamages.push(id);\r\n  }\r\n\r\n  if (\r\n    !(addDoubleSliceDamage && doubleSliceCondition === conditions.CRIT) &&\r\n    hasClassPrecisionDamage(strikeInfo, previousHits)\r\n  ) {\r\n    let { dieTrend, diceSize, damageWhen, damageTrend } = classPrecisionDamage(\r\n      strikeInfo,\r\n      previousHits\r\n    );\r\n    id = ++damageId;\r\n    const classDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      dieTrend,\r\n      diceSize,\r\n      damageTrend,\r\n      damageType: damageTypes.PRECISION,\r\n      damageWhen,\r\n    };\r\n    damageAdapter.addOne(state.damages, classDamage);\r\n    newDamages.push(id);\r\n  }\r\n\r\n  if (hasActivityDamageDice(strikeInfo)) {\r\n    id = ++damageId;\r\n    const activityDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      ...activityDamageDice(strikeInfo),\r\n    };\r\n    damageAdapter.addOne(state.damages, activityDamage);\r\n    newDamages.push(id);\r\n  }\r\n  if (hasActivityCritDamage(strikeInfo)) {\r\n    id = ++damageId;\r\n    const activityDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.CRIT,\r\n      ...activityCritDamage(strikeInfo),\r\n    };\r\n    damageAdapter.addOne(state.damages, activityDamage);\r\n    newDamages.push(id);\r\n  }\r\n  if (hasSplashDamage(strikeInfo)) {\r\n    id = ++damageId;\r\n    const splashDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.AT_LEAST_FAIL,\r\n      ...getSplashDamage(strikeInfo),\r\n    };\r\n    damageAdapter.addOne(state.damages, splashDamage);\r\n    newDamages.push(id);\r\n  }\r\n\r\n  if (hasDeadly(strikeInfo, useWeapon2)) {\r\n    let damageAdjustments = empty;\r\n    if (\r\n      !hasFatal(strikeInfo, useWeapon2) &&\r\n      hasPickCritSpec(strikeInfo, useWeapon2)\r\n    )\r\n      damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\r\n    id = ++damageId;\r\n    const critDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.CRIT,\r\n      dieTrend: dieTrends.DEADLY,\r\n      diceSize: weapon.deadlySize,\r\n      damageAdjustments,\r\n    };\r\n    damageAdapter.addOne(state.damages, critDamage);\r\n    newDamages.push(id);\r\n  }\r\n  if (hasFatal(strikeInfo, useWeapon2)) {\r\n    let damageAdjustments = empty;\r\n    if (hasPickCritSpec(strikeInfo, useWeapon2))\r\n      damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\r\n    id = ++damageId;\r\n    const critDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.CRIT,\r\n      dieAdjustments: one,\r\n      diceSize: weapon.fatalSize,\r\n      damageAdjustments,\r\n    };\r\n    damageAdapter.addOne(state.damages, critDamage);\r\n    newDamages.push(id);\r\n  }\r\n  if (\r\n    !hasDeadly(strikeInfo, useWeapon2) &&\r\n    !hasFatal(strikeInfo, useWeapon2) &&\r\n    hasPickCritSpec(strikeInfo, useWeapon2)\r\n  ) {\r\n    let damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\r\n    id = ++damageId;\r\n    const critDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.CRIT,\r\n      diceSize: weapon.fatalSize,\r\n      damageAdjustments,\r\n    };\r\n    damageAdapter.addOne(state.damages, critDamage);\r\n    newDamages.push(id);\r\n  }\r\n  if (hasKnifeCritSpec(strikeInfo, useWeapon2)) {\r\n    let damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\r\n    id = ++damageId;\r\n    const critDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.CRIT,\r\n      dieAdjustments: critSpecDice(strikeInfo, useWeapon2),\r\n      diceSize: diceSizes[6],\r\n      damageType: damageTypes.BLEED,\r\n      damageAdjustments,\r\n      persistent: true,\r\n    };\r\n    damageAdapter.addOne(state.damages, critDamage);\r\n    newDamages.push(id);\r\n  }\r\n\r\n  return newDamages;\r\n};\r\nconst createStrikeEffects = (\r\n  state: WritableDraft<State>,\r\n  strikeInfo: StrikeInfo,\r\n  strikeNumber: number,\r\n  useWeapon2: boolean = false\r\n) => {\r\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\r\n\r\n  const newEffects: number[] = [];\r\n  let id;\r\n\r\n  if (hasCritSpecEffect(strikeInfo, useWeapon2)) {\r\n    let effectType: EffectType = effectStateTypes.FLATFOOT;\r\n    if (hasSwordCritSpec(strikeInfo, useWeapon2))\r\n      effectType = effectStateTypes.FLATFOOT;\r\n    if (hasHammerCritSpec(strikeInfo, useWeapon2))\r\n      effectType = effectStateTypes.PRONE;\r\n    if (hasSpearCritSpec(strikeInfo, useWeapon2))\r\n      effectType = effectValueTypes.CLUMSY;\r\n\r\n    id = ++effectId;\r\n    const critSpecEffect: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.CRIT,\r\n      effectType,\r\n      effectValue: 1,\r\n      startLevel: weapon.critSpecLevel,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, critSpecEffect);\r\n  }\r\n  if (hasBackswing(strikeInfo, useWeapon2)) {\r\n    id = ++effectId;\r\n    const backswingEffect: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.FAIL_WORSE,\r\n      effectType: effectValueTypes.BONUSC1,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, backswingEffect);\r\n  }\r\n\r\n  return newEffects;\r\n};\r\n\r\nconst createSkillActivity = (\r\n  state: WritableDraft<State>,\r\n  parentId: number | undefined,\r\n  routineId: number | undefined,\r\n  skillInfo: SkillInfo\r\n) => {\r\n  const id = ++activityPathId;\r\n\r\n  let damages = createSkillDamages(state, skillInfo);\r\n  let effects = createSkillEffects(state, skillInfo);\r\n\r\n  activityPathAdapter.addOne(state.activityPaths, {\r\n    ...defaultActivity,\r\n    id,\r\n    parentId,\r\n    routineId,\r\n    name: skillInfo.skillActivity,\r\n    type: activityTypes.SKILL,\r\n    profTrend: skillInfo.proficiency,\r\n    statTrend: skillInfo.abilityScore,\r\n    itemTrend: skillInfo.itemBonus,\r\n    targetType: getSkillTarget(skillInfo),\r\n\r\n    damages,\r\n    effects,\r\n  });\r\n  return id;\r\n};\r\n\r\nconst createSkillDamages = (\r\n  state: WritableDraft<State>,\r\n  skillInfo: SkillInfo\r\n) => {\r\n  const newDamages: number[] = [];\r\n\r\n  if (hasSkillDamage(skillInfo)) {\r\n    let id = ++damageId;\r\n    const skillDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.CRIT,\r\n      dieAdjustments: one,\r\n      diceSize: diceSizes[6],\r\n    };\r\n    newDamages.push(id);\r\n    damageAdapter.addOne(state.damages, skillDamage);\r\n  }\r\n\r\n  return newDamages;\r\n};\r\nconst createSkillEffects = (\r\n  state: WritableDraft<State>,\r\n  skillInfo: SkillInfo\r\n) => {\r\n  const newEffects: number[] = [];\r\n\r\n  for (let { effectCondition, effectType, effectValue } of getSkillEffects(\r\n    skillInfo\r\n  )) {\r\n    let id = ++effectId;\r\n    const skillEffect: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition,\r\n      effectType,\r\n      effectValue,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, skillEffect);\r\n  }\r\n\r\n  return newEffects;\r\n};\r\nconst createCantripActivity = (\r\n  state: WritableDraft<State>,\r\n  parentId: number | undefined,\r\n  routineId: number | undefined,\r\n  cantripInfo: CantripInfo\r\n) => {\r\n  const id = ++activityPathId;\r\n\r\n  let damages = createCantripDamages(state, cantripInfo);\r\n\r\n  activityPathAdapter.addOne(state.activityPaths, {\r\n    ...defaultActivity,\r\n    id,\r\n    parentId,\r\n    routineId,\r\n    name: cantripInfo.cantrip,\r\n    profTrend: cantripInfo.proficiency,\r\n    statTrend: cantripInfo.abilityScore,\r\n    ...getCantripTarget(cantripInfo),\r\n\r\n    damages,\r\n  });\r\n  return id;\r\n};\r\n\r\nconst createCantripDamages = (\r\n  state: WritableDraft<State>,\r\n  cantripInfo: CantripInfo\r\n) => {\r\n  const newDamages: number[] = [];\r\n\r\n  let id = ++damageId;\r\n  const cantripDamage: Damage = {\r\n    ...defaultDamage,\r\n    id,\r\n    dieTrend: dieTrends.SPELLLEVEL1,\r\n    damageTrend: [cantripInfo.abilityScore],\r\n    ...getCantripDamage(cantripInfo),\r\n  };\r\n  newDamages.push(id);\r\n  damageAdapter.addOne(state.damages, cantripDamage);\r\n\r\n  if (\r\n    cantripInfo.cantrip === \"Produce Flame\" ||\r\n    cantripInfo.cantrip === \"Gouging Claw\"\r\n  ) {\r\n    let id = ++damageId;\r\n    const persDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.CRIT,\r\n      dieTrend: dieTrends.SPELLLEVEL1,\r\n      persistent: true,\r\n    };\r\n    newDamages.push(id);\r\n    damageAdapter.addOne(state.damages, persDamage);\r\n  }\r\n  return newDamages;\r\n};\r\n\r\nconst createSpellActivity = (\r\n  state: WritableDraft<State>,\r\n  parentId: number | undefined,\r\n  routineId: number | undefined,\r\n  spellInfo: SpellInfo\r\n) => {\r\n  const id = ++activityPathId;\r\n\r\n  let damages = createSpellDamages(state, spellInfo);\r\n  let effects = createSpellEffects(state, spellInfo);\r\n\r\n  activityPathAdapter.addOne(state.activityPaths, {\r\n    ...defaultActivity,\r\n    id,\r\n    parentId,\r\n    routineId,\r\n    name: spellInfo.spell,\r\n    type: activityTypes.SAVE,\r\n    profTrend: spellInfo.proficiency,\r\n    statTrend: spellInfo.abilityScore,\r\n    ...getSpellTarget(spellInfo),\r\n\r\n    damages,\r\n    effects,\r\n  });\r\n  return id;\r\n};\r\n\r\nconst createSpellDamages = (\r\n  state: WritableDraft<State>,\r\n  spellInfo: SpellInfo\r\n) => {\r\n  const newDamages: number[] = [];\r\n\r\n  if (spellInfo.spell === \"Fireball\") {\r\n    let id = ++damageId;\r\n    const spellDamage: Damage = {\r\n      ...defaultDamage,\r\n      id,\r\n      damageCondition: dCond.BASIC,\r\n      dieTrend: dieTrends.SPELLLEVEL2,\r\n    };\r\n    newDamages.push(id);\r\n    damageAdapter.addOne(state.damages, spellDamage);\r\n  }\r\n  return newDamages;\r\n};\r\n\r\nconst createSpellEffects = (\r\n  state: WritableDraft<State>,\r\n  spellInfo: SpellInfo\r\n) => {\r\n  const newEffects: number[] = [];\r\n\r\n  if (spellInfo.spell === \"Fear\") {\r\n    let id = ++effectId;\r\n    const crfa: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.CRIF,\r\n      effectType: effectTypes.FRIGHTENED,\r\n      effectValue: 3,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, crfa);\r\n\r\n    id = ++effectId;\r\n    const fail: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.FAIL,\r\n      effectType: effectTypes.FRIGHTENED,\r\n      effectValue: 2,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, fail);\r\n\r\n    id = ++effectId;\r\n    const succ: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.SUCC,\r\n      effectType: effectTypes.FRIGHTENED,\r\n      effectValue: 1,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, succ);\r\n  } else if (spellInfo.spell === \"Heroism\") {\r\n    let id = ++effectId;\r\n    const e3: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.ALWAYS,\r\n      effectType: effectTypes.BONUSSA,\r\n      effectValue: 1,\r\n      startLevel: 5,\r\n      endLevel: 10,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, e3);\r\n\r\n    id = ++effectId;\r\n    const e6: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.ALWAYS,\r\n      effectType: effectTypes.BONUSSA,\r\n      effectValue: 1,\r\n      startLevel: 11,\r\n      endLevel: 16,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, e6);\r\n\r\n    id = ++effectId;\r\n    const e9: Effect = {\r\n      ...defaultEffect,\r\n      id,\r\n      effectCondition: conditions.ALWAYS,\r\n      effectType: effectTypes.BONUSSA,\r\n      effectValue: 1,\r\n      startLevel: 17,\r\n      endLevel: 20,\r\n    };\r\n    newEffects.push(id);\r\n    effectAdapter.addOne(state.effects, e9);\r\n  }\r\n\r\n  return newEffects;\r\n  // for (let { effectCondition, effectType, effectValue } of getSkillEffects(\r\n  //   skillInfo\r\n  // )) {\r\n  //   let id = ++effectId;\r\n  //   const skillEffect: Effect = {\r\n  //     ...defaultEffect,\r\n  //     id,\r\n  //     effectCondition,\r\n  //     effectType,\r\n  //     effectValue,\r\n  //   };\r\n  //   newEffects.push(id);\r\n  //   effectAdapter.addOne(state.effects, skillEffect);\r\n  // }\r\n};\r\n\r\nconst copyActivityPaths = (\r\n  state: WritableDraft<State>,\r\n  apIds: number[],\r\n  parentId?: number,\r\n  routineId?: number\r\n) => {\r\n  let newApIds = [];\r\n  for (let apId of apIds) {\r\n    const id = ++activityPathId;\r\n    const ap = state.activityPaths.entities[apId]!;\r\n    const apIds = copyActivityPaths(state, ap.apIds, id);\r\n    const damages = copyDamages(state, ap.damages);\r\n    const effects = copyEffects(state, ap.effects);\r\n\r\n    activityPathAdapter.addOne(state.activityPaths, {\r\n      ...ap,\r\n      id,\r\n      parentId,\r\n      routineId,\r\n      damages,\r\n      effects,\r\n      apIds,\r\n    });\r\n    newApIds.push(id);\r\n  }\r\n  return newApIds;\r\n};\r\nconst copyDamages = (state: WritableDraft<State>, damages: number[]) => {\r\n  const newDamages = [];\r\n  for (let did of damages) {\r\n    let damage = state.damages.entities[did]!;\r\n    // create a new damage entity and add it's id to newDamages\r\n    const id = ++damageId;\r\n    damageAdapter.addOne(state.damages, { ...damage, id });\r\n    newDamages.push(id);\r\n  }\r\n  return newDamages;\r\n};\r\nconst copyEffects = (state: WritableDraft<State>, effects: number[]) => {\r\n  const newEffects = [];\r\n  for (let eid of effects) {\r\n    let effect = state.effects.entities[eid]!;\r\n    // create a new effect entity and add it's id to newEffects\r\n    const id = ++effectId;\r\n    effectAdapter.addOne(state.effects, { ...effect, id });\r\n    newEffects.push(id);\r\n  }\r\n  return newEffects;\r\n};\r\n\r\nconst getActivityPaths = (state: WritableDraft<State>, apIds: number[]) => {\r\n  let newAps: ActivityPathObject[] = [];\r\n  for (let apId of apIds) {\r\n    const ap = state.activityPaths.entities[apId]!;\r\n    const aps = getActivityPaths(state, ap.apIds);\r\n    const damages = getDamages(state, ap.damages);\r\n    const effects = getEffects(state, ap.effects);\r\n    newAps.push({ ...ap, apIds: aps, damages, effects });\r\n  }\r\n  return newAps;\r\n};\r\nconst getDamages = (state: WritableDraft<State>, damages: number[]) => {\r\n  let newDamages = [];\r\n  for (let did of damages) {\r\n    const damage = state.damages.entities[did]!;\r\n    newDamages.push({ ...damage });\r\n  }\r\n  return newDamages;\r\n};\r\nconst getEffects = (state: WritableDraft<State>, effects: number[]) => {\r\n  let newEffects = [];\r\n  for (let eid of effects) {\r\n    const effect = state.effects.entities[eid]!;\r\n    newEffects.push({ ...effect });\r\n  }\r\n  return newEffects;\r\n};\r\n\r\nconst insertRoutine = (state: WritableDraft<State>, routine: RoutineObject) => {\r\n  const id = ++routineId;\r\n\r\n  const apIds = insertActivityPaths(state, routine.apIds, undefined, id);\r\n\r\n  routinesAdapter.addOne(state.routines, { ...routine, id, apIds });\r\n  return id;\r\n};\r\nconst insertActivityPaths = (\r\n  state: WritableDraft<State>,\r\n  aps: ActivityPathObject[],\r\n  parentId?: number,\r\n  routineId?: number\r\n) => {\r\n  let newApIds = [];\r\n  for (let ap of aps) {\r\n    const id = ++activityPathId;\r\n    const apIds = insertActivityPaths(state, ap.apIds, id);\r\n    const damages = insertDamages(state, ap.damages);\r\n    const effects = insertEffects(state, ap.effects);\r\n\r\n    if (ap.name === undefined) ap.name = \"\";\r\n    activityPathAdapter.addOne(state.activityPaths, {\r\n      ...ap,\r\n      id,\r\n      parentId,\r\n      routineId,\r\n      damages,\r\n      effects,\r\n      apIds,\r\n    });\r\n    newApIds.push(id);\r\n  }\r\n  return newApIds;\r\n};\r\nconst insertDamages = (state: WritableDraft<State>, damages: Damage[]) => {\r\n  const newDamages = [];\r\n  for (let damage of damages) {\r\n    // create a new damage entity and add it's id to newDamages\r\n    const id = ++damageId;\r\n    damageAdapter.addOne(state.damages, { ...defaultDamage, ...damage, id });\r\n    newDamages.push(id);\r\n  }\r\n  return newDamages;\r\n};\r\nconst insertEffects = (state: WritableDraft<State>, effects: Effect[]) => {\r\n  const newEffects = [];\r\n  for (let effect of effects) {\r\n    // create a new effect entity and add it's id to newEffects\r\n    const id = ++effectId;\r\n    effectAdapter.addOne(state.effects, { ...defaultEffect, ...effect, id });\r\n    newEffects.push(id);\r\n  }\r\n  return newEffects;\r\n};\r\n","export const convolve = (vec1: number[], vec2: number[]) => {\r\n  if (vec1.length === 0 || vec2.length === 0) {\r\n    throw new Error(\"Vectors can not be empty!\");\r\n  }\r\n  const volume = vec1;\r\n  const kernel = vec2;\r\n  let displacement = 0;\r\n  const convVec: number[] = [];\r\n\r\n  for (let i = 0; i < volume.length; i++) {\r\n    for (let j = 0; j < kernel.length; j++) {\r\n      if (displacement + j !== convVec.length) {\r\n        convVec[displacement + j] =\r\n          convVec[displacement + j] + volume[i] * kernel[j];\r\n      } else {\r\n        convVec.push(volume[i] * kernel[j]);\r\n      }\r\n    }\r\n    displacement++;\r\n  }\r\n\r\n  return convVec;\r\n};\r\n\r\nexport const multiplyDist = (\r\n  dam: number,\r\n  dist: number[],\r\n  multiplier: number\r\n) => {\r\n  if (multiplier === 0) return { staticDamage: 0, damageDist: [1] };\r\n  if (multiplier === 1) return { staticDamage: dam, damageDist: [...dist] };\r\n\r\n  const newDist = [0];\r\n  let index = 0;\r\n  const newDam = Math.floor(dam * multiplier);\r\n\r\n  let i = 0;\r\n  let oldValue = newDam;\r\n  for (let chance of dist) {\r\n    let newValue = Math.floor((dam + i) * multiplier);\r\n    if (newValue === oldValue) {\r\n      newDist[index] += chance;\r\n    } else {\r\n      if (newValue > oldValue + 1) {\r\n        for (let diff = 0; diff < newValue - (oldValue + 1); diff++) {\r\n          index++;\r\n          newDist[index] = 0;\r\n        }\r\n      }\r\n      index++;\r\n      newDist[index] = chance;\r\n    }\r\n    oldValue = newValue;\r\n    i++;\r\n  }\r\n\r\n  return { staticDamage: newDam, damageDist: newDist };\r\n};\r\n\r\ntype Dist = {\r\n  distribution: { staticDamage: number; damageDist: number[] };\r\n  chance: number;\r\n};\r\n/**\r\n * Combine multiple distributions with their chances into one distribution starting from 0\r\n * @param  {...[{staticDamage, distribution}, chance]} dists\r\n * @returns {[number]} new distribution\r\n */\r\nexport const consolidateDists = (...dists: Dist[]) => {\r\n  let maxDamage = 0;\r\n  for (let dist of dists) {\r\n    maxDamage = Math.max(\r\n      maxDamage,\r\n      dist.distribution.staticDamage + dist.distribution.damageDist.length\r\n    );\r\n  }\r\n  let damageDist = [];\r\n  for (let i = 0; i < maxDamage; i++) {\r\n    damageDist.push(0);\r\n    for (let dist of dists) {\r\n      if (dist.distribution.staticDamage <= i) {\r\n        let index = i - dist.distribution.staticDamage;\r\n        if (index < dist.distribution.damageDist.length)\r\n          damageDist[i] += dist.distribution.damageDist[index] * dist.chance;\r\n      }\r\n    }\r\n  }\r\n  return damageDist;\r\n};\r\n\r\n/**\r\n * apply a minimum to a distribution, like for damage penalties or resistances\r\n * @param {number} staticDamage\r\n * @param {[number]} damageDist\r\n * @param {number} min\r\n * @returns { distribution: {staticDamage: number, damageDist: [number]}}\r\n */\r\nexport const applyMin = (\r\n  staticDamage: number,\r\n  damageDist: number[],\r\n  min: number\r\n) => {\r\n  while (staticDamage < min) {\r\n    if (damageDist.length >= 2) {\r\n      damageDist[1] += damageDist[0];\r\n      damageDist.shift();\r\n    }\r\n    staticDamage++;\r\n  }\r\n  return { staticDamage, damageDist };\r\n};\r\n\r\nexport const applyMax = (\r\n  staticDamage: number,\r\n  damageDist: number[],\r\n  max: number\r\n) => {\r\n  let newDamageDist: number[];\r\n  if (staticDamage >= max) {\r\n    staticDamage = max;\r\n    newDamageDist = [1];\r\n  } else if (staticDamage + damageDist.length - 1 > max) {\r\n    // cut off the distribution at max and add the remaining chance there\r\n    newDamageDist = damageDist.slice(0, max - staticDamage + 1);\r\n    const remainingChance = 1 - newDamageDist.reduce((pv, cv) => pv + cv);\r\n    newDamageDist[max - staticDamage] += remainingChance;\r\n  } else {\r\n    newDamageDist = damageDist;\r\n  }\r\n  return { staticDamage, damageDist: newDamageDist };\r\n};\r\n","import {\r\n  damageTrendValues,\r\n  dieTrendValues,\r\n  defaultACs,\r\n  defaultSaves,\r\n  profTrendValues,\r\n  statTrendValues,\r\n  itemTrendValues,\r\n  MAPvalues,\r\n  standardDC,\r\n} from \"../Model/defaults\";\r\nimport {\r\n  activityTypes,\r\n  DamageType,\r\n  dCond,\r\n  defenses,\r\n  Material,\r\n  materials,\r\n  rollTypes,\r\n  TargetState,\r\n  whenConditions,\r\n} from \"../Model/types\";\r\nimport { ActivityPath, Damage } from \"../Routines/RoutineSlice/RoutineTypes\";\r\nimport { Target } from \"../Display/targetSlice\";\r\nimport { Weakness } from \"../Display/weaknessSlice\";\r\nimport { applyMin, convolve, multiplyDist } from \"./Distribution\";\r\n\r\nfunction getCritSuccessPercent(bonus: number, DC: number, keen = false) {\r\n  const dif = bonus - DC;\r\n  let chance;\r\n  if (dif < -20) {\r\n    chance = 0;\r\n  } else if (dif === -20) {\r\n    chance = 5;\r\n  } else if (dif < -9) {\r\n    chance = keen ? 10 : 5;\r\n  } else if (dif < 8) {\r\n    chance = (11 + dif) * 5;\r\n  } else {\r\n    chance = 95;\r\n  }\r\n\r\n  return chance;\r\n}\r\n\r\nfunction getSuccessPercent(bonus: number, DC: number, keen = false) {\r\n  const dif = bonus - DC;\r\n  let chance;\r\n  if (dif < -29) {\r\n    chance = 0;\r\n  } else if (dif < -20) {\r\n    chance = 5;\r\n  } else if (dif === -20) {\r\n    chance = 0;\r\n  } else if (dif < -9) {\r\n    chance = (keen ? 19 : 20 + dif) * 5;\r\n  } else if (dif < -1) {\r\n    chance = 50;\r\n  } else if (dif < 9) {\r\n    chance = (8 - dif) * 5;\r\n  } else {\r\n    chance = 5;\r\n  }\r\n\r\n  return chance;\r\n}\r\n\r\nfunction getFailurePercent(bonus: number, DC: number, keen = false) {\r\n  const dif = bonus - DC;\r\n  let chance;\r\n  if (dif < -29) {\r\n    chance = 5;\r\n  } else if (dif < -20) {\r\n    chance = (29 + dif) * 5;\r\n  } else if (dif < -10) {\r\n    chance = 45;\r\n  } else if (dif < -1) {\r\n    chance = (-2 - dif) * 5;\r\n  } else if (dif < 9) {\r\n    chance = 5;\r\n  } else {\r\n    chance = 0;\r\n  }\r\n\r\n  return chance;\r\n}\r\n\r\nfunction getCritFailurePercent(bonus: number, DC: number, keen = false) {\r\n  const dif = bonus - DC;\r\n  let chance;\r\n  if (dif < -29) {\r\n    chance = 95;\r\n  } else if (dif < -10) {\r\n    chance = (-10 - dif) * 5;\r\n  } else if (dif < -1) {\r\n    chance = 5;\r\n  } else {\r\n    chance = 0;\r\n  }\r\n\r\n  return chance;\r\n}\r\n\r\n// staticDamage?: number;\r\n// damageDist?: number[];\r\n\r\ntype PartialContext = {\r\n  [key in DamageType]?: {\r\n    material: Material;\r\n    staticDamage: number;\r\n    damageDist: number[];\r\n  };\r\n};\r\nexport interface DamageContext {\r\n  staticDamage: number;\r\n  damageDist: number[];\r\n}\r\ntype BaseContext = {\r\n  normal: PartialContext;\r\n  persistent: PartialContext;\r\n};\r\ntype FinalContext = {\r\n  normal: DamageContext;\r\n  persistent: PartialContext;\r\n};\r\nconst damageQualities = { normal: \"normal\", persistent: \"persistent\" } as const;\r\ntype DamageQuality = keyof typeof damageQualities;\r\n\r\n// combine the probability distributions of the given damages into context\r\n// for persistent damage just take highest\r\nconst addDamage = (\r\n  baseContext: BaseContext,\r\n  type: DamageType,\r\n  material: Material,\r\n  persistent: boolean,\r\n  staticDamage: number,\r\n  damageDist: number[],\r\n  multiplier: number\r\n) => {\r\n  let context: PartialContext;\r\n\r\n  if (persistent) {\r\n    context = baseContext.persistent;\r\n  } else {\r\n    context = baseContext.normal;\r\n  }\r\n  ({ staticDamage, damageDist } = multiplyDist(\r\n    staticDamage,\r\n    damageDist,\r\n    multiplier\r\n  ));\r\n  if (!(type in context)) {\r\n    context[type] = { material, staticDamage, damageDist };\r\n  } else {\r\n    if (persistent) {\r\n      let oldAveDamage = context[type]!.staticDamage;\r\n      for (let i = 0; i < context[type]!.damageDist.length; i++) {\r\n        oldAveDamage += i * context[type]!.damageDist[i];\r\n      }\r\n      let newAveDamage = staticDamage;\r\n      for (let i = 0; i < damageDist.length; i++) {\r\n        newAveDamage += i * damageDist[i];\r\n      }\r\n      if (newAveDamage > oldAveDamage) {\r\n        context[type] = { material, staticDamage, damageDist };\r\n      }\r\n    } else {\r\n      context[type]!.staticDamage += staticDamage;\r\n      context[type]!.damageDist = convolve(\r\n        context[type]!.damageDist,\r\n        damageDist\r\n      );\r\n      if (material !== materials.NONE) context[type]!.material = material;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Calculate the chance of each result and the appropriate damage\r\n * distributions for a given activity at level vs target with targetState.\r\n * Adds defenseBonus or resistanceBonus to target if given.\r\n * Add persistent damage to normal damage if this activity is a leaf.\r\n * Level is undefined for single level graphs, get appropriate levels from target.\r\n *\r\n * @param {ActivityPath} activity\r\n * @param {Damage[]} damages\r\n * @param {Target} target\r\n * @param {TargetState} targetState\r\n * @param {Weakness[]} weaknesses\r\n * @param {number} defenseBonus\r\n * @param {number} resistanceBonus\r\n * @param {boolean} isLeaf\r\n * @param {number | undefined} level\r\n * @returns {[damageTrees, chances]} ;\r\n */\r\nfunction calculateExpectedDamage(\r\n  activity: ActivityPath,\r\n  damages: Damage[],\r\n  target: Target,\r\n  targetState: TargetState,\r\n  weaknesses: Weakness[],\r\n  defenseBonus: number,\r\n  resistanceBonus: number,\r\n  isLeaf: boolean,\r\n  level?: number\r\n) {\r\n  /**\r\n   * Get the check bonus and DC\r\n   * Calculate the chance of each outcome\r\n   * Go through each damage and evaluate it, put damage types together\r\n   * Go through each damage type and apply weakness/resistance\r\n   * Return damage trees and chances\r\n   */\r\n  let bonus = 0;\r\n  let DC = 10;\r\n  let targetValue: number;\r\n  let targetLevel: number;\r\n  if (level === undefined) {\r\n    level = target.routineLevel;\r\n    targetLevel = target.targetLevel;\r\n\r\n    switch (activity.targetType) {\r\n      case defenses.AC:\r\n        targetValue = target.overrideAC;\r\n        break;\r\n      case defenses.FORT:\r\n        targetValue = target.overrideFort;\r\n        break;\r\n      case defenses.REF:\r\n        targetValue = target.overrideRef;\r\n        break;\r\n      case defenses.WILL:\r\n        targetValue = target.overrideWill;\r\n        break;\r\n      case defenses.PER:\r\n        targetValue = target.overridePer;\r\n        break;\r\n\r\n      default:\r\n        targetValue = target.overrideAC;\r\n        break;\r\n    }\r\n  } else {\r\n    targetLevel = level + target.levelDiff;\r\n    let targetDefault;\r\n    switch (activity.targetType) {\r\n      case defenses.AC:\r\n        targetDefault = defaultACs[target.ACTrend];\r\n        break;\r\n      case defenses.FORT:\r\n        targetDefault = defaultSaves[target.FortTrend];\r\n        break;\r\n      case defenses.REF:\r\n        targetDefault = defaultSaves[target.RefTrend];\r\n        break;\r\n      case defenses.WILL:\r\n        targetDefault = defaultSaves[target.WillTrend];\r\n        break;\r\n      case defenses.PER:\r\n        targetDefault = defaultSaves[target.PerTrend];\r\n        break;\r\n\r\n      default:\r\n        targetDefault = defaultACs[target.ACTrend];\r\n        break;\r\n    }\r\n\r\n    targetValue = targetDefault[targetLevel];\r\n  }\r\n\r\n  let targetPenalty = targetState.Frightened;\r\n  if (\r\n    activity.targetType === defenses.AC ||\r\n    activity.targetType === defenses.REF\r\n  )\r\n    targetPenalty = Math.max(targetPenalty, targetState.Clumsy);\r\n  switch (activity.type) {\r\n    case activityTypes.STRIKE:\r\n    case activityTypes.SPELLATTACK:\r\n    case activityTypes.SKILL:\r\n      bonus = profTrendValues[activity.profTrend][level];\r\n      bonus += statTrendValues[activity.statTrend][level];\r\n      bonus += itemTrendValues[activity.itemTrend][level];\r\n      bonus += activity.bonusAdjustments[level];\r\n      bonus += MAPvalues[activity.MAP];\r\n\r\n      bonus +=\r\n        targetState[\"Cicumstance Bonus to next attack\"] +\r\n        targetState[\"Status Bonus to all attacks\"];\r\n      targetState[\"Cicumstance Bonus to next attack\"] = 0;\r\n\r\n      DC = targetValue + defenseBonus - targetPenalty;\r\n      if (activity.targetType === defenses.AC) {\r\n        if (targetState.Flatfooted) DC -= 2;\r\n      } else {\r\n        if (activity.targetType === defenses.selfDC) {\r\n          DC = standardDC[level];\r\n        } else if (activity.targetType === defenses.targetDC) {\r\n          DC = standardDC[targetLevel];\r\n        } else {\r\n          DC += 10;\r\n        }\r\n      }\r\n      break;\r\n\r\n    case activityTypes.SAVE:\r\n      bonus = targetValue + defenseBonus - targetPenalty;\r\n      DC = 10 + profTrendValues[activity.profTrend][level];\r\n      DC += statTrendValues[activity.statTrend][level];\r\n      DC += itemTrendValues[activity.itemTrend][level];\r\n      DC += activity.bonusAdjustments[level];\r\n      if (activity.targetType === defenses.AC) {\r\n        bonus -= 10;\r\n      } else if (activity.targetType === defenses.selfDC) {\r\n        bonus = standardDC[level] - 10;\r\n      } else if (activity.targetType === defenses.targetDC) {\r\n        bonus = standardDC[targetLevel] - 10;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      console.log(`Activity type ${activity.type} not implemented`);\r\n  }\r\n\r\n  let critPercent = getCritSuccessPercent(bonus, DC);\r\n  let succPercent = getSuccessPercent(bonus, DC);\r\n  let failPercent = getFailurePercent(bonus, DC);\r\n  let crfaPercent = getCritFailurePercent(bonus, DC);\r\n  if (activity.rollType === rollTypes.ADVANTAGE) {\r\n    let notcrit = 100 - critPercent;\r\n    critPercent = 100 - (notcrit * notcrit) / 100;\r\n    let nothit = notcrit - succPercent;\r\n    succPercent = 100 - (nothit * nothit) / 100 - critPercent;\r\n    let notfail = nothit - failPercent;\r\n    failPercent = 100 - (notfail * notfail) / 100 - succPercent - critPercent;\r\n    crfaPercent = (crfaPercent * crfaPercent) / 100;\r\n  } else if (activity.rollType === rollTypes.DISADVANTAGE) {\r\n    let notcrfa = 100 - crfaPercent;\r\n    crfaPercent = 100 - (notcrfa * notcrfa) / 100;\r\n    let notfail = notcrfa - failPercent;\r\n    failPercent = 100 - (notfail * notfail) / 100 - crfaPercent;\r\n    let notsucc = notfail - succPercent;\r\n    succPercent = 100 - (notsucc * notsucc) / 100 - failPercent - crfaPercent;\r\n    critPercent = (critPercent * critPercent) / 100;\r\n  }\r\n  const chances = [\r\n    critPercent / 100,\r\n    succPercent / 100,\r\n    failPercent / 100,\r\n    crfaPercent / 100,\r\n  ];\r\n  const critDamagesByType: BaseContext = {\r\n    normal: {},\r\n    persistent: { ...targetState.persistentDamages },\r\n  };\r\n  const succDamagesByType: BaseContext = {\r\n    normal: {},\r\n    persistent: { ...targetState.persistentDamages },\r\n  };\r\n  const failDamagesByType: BaseContext = {\r\n    normal: {},\r\n    persistent: { ...targetState.persistentDamages },\r\n  };\r\n  const crfaDamagesByType: BaseContext = {\r\n    normal: {},\r\n    persistent: { ...targetState.persistentDamages },\r\n  };\r\n  const critDamages: FinalContext = {\r\n    normal: { staticDamage: 0, damageDist: [1] },\r\n    persistent: critDamagesByType.persistent,\r\n    // persistent: { staticDamage: 0, damageDist: [1] },\r\n  };\r\n  const succDamages: FinalContext = {\r\n    normal: { staticDamage: 0, damageDist: [1] },\r\n    persistent: succDamagesByType.persistent,\r\n  };\r\n  const failDamages: FinalContext = {\r\n    normal: { staticDamage: 0, damageDist: [1] },\r\n    persistent: failDamagesByType.persistent,\r\n  };\r\n  const crfaDamages: FinalContext = {\r\n    normal: { staticDamage: 0, damageDist: [1] },\r\n    persistent: crfaDamagesByType.persistent,\r\n  };\r\n\r\n  const damageTreesByType: BaseContext[] = [\r\n    critDamagesByType,\r\n    succDamagesByType,\r\n    failDamagesByType,\r\n    crfaDamagesByType,\r\n  ];\r\n  const damageTrees: FinalContext[] = [\r\n    critDamages,\r\n    succDamages,\r\n    failDamages,\r\n    crfaDamages,\r\n  ];\r\n\r\n  // Start going through each damage and evaluate it, put damage types together\r\n  damages.forEach((damage) => {\r\n    let {\r\n      damageCondition,\r\n      diceSize,\r\n      fatal,\r\n      fatalDie,\r\n\r\n      damageTrend,\r\n      damageType,\r\n      material,\r\n      persistent,\r\n      multiplier,\r\n      damageWhen,\r\n    } = damage;\r\n    let shouldAddThisDamage = false;\r\n    for (let state of damageWhen) {\r\n      if (state === whenConditions.Always) {\r\n        shouldAddThisDamage = true;\r\n        break;\r\n      }\r\n      let val = targetState[state];\r\n      if (val && val > 0) {\r\n        shouldAddThisDamage = true;\r\n        break;\r\n      }\r\n    }\r\n    // if (typeof val === \"boolean\") {\r\n    //   if (val) {\r\n    //     shouldAddThisDamage = true;\r\n    //     break;\r\n    //   }\r\n    // } else {\r\n    //   if (val > 0) {\r\n    //     shouldAddThisDamage = true;\r\n    //     break;\r\n    //   }\r\n    // }\r\n\r\n    if (!shouldAddThisDamage) return;\r\n\r\n    let diceNum = dieTrendValues[damage.dieTrend][level as number];\r\n    diceNum += damage.dieAdjustments[level as number];\r\n    if (diceNum < 0) diceNum = 0;\r\n    let staticDamage = 0;\r\n    for (let i = 0; i < damageTrend.length; i++) {\r\n      staticDamage += damageTrendValues[damageTrend[i]][level as number];\r\n    }\r\n    staticDamage += damage.damageAdjustments[level as number];\r\n    let damageDist = [1];\r\n    let fatalDist = [1];\r\n    let diceArray = [];\r\n    for (let i = 0; i < diceSize; i++) {\r\n      diceArray.push(1 / diceSize);\r\n    }\r\n    for (let i = 0; i < diceNum; i++) {\r\n      damageDist = convolve(damageDist, diceArray);\r\n    }\r\n    if (fatal) {\r\n      let diceArray = [];\r\n      for (let i = 0; i < fatalDie; i++) {\r\n        diceArray.push(1 / fatalDie);\r\n      }\r\n      for (let i = 0; i < diceNum; i++) {\r\n        fatalDist = convolve(fatalDist, diceArray);\r\n      }\r\n    }\r\n    staticDamage += diceNum;\r\n\r\n    // Add damage to damage trees appropriately\r\n    switch (damageCondition) {\r\n      case dCond.STRIKE:\r\n        addDamage(\r\n          succDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          critDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          fatal ? fatalDist : damageDist,\r\n          multiplier * 2\r\n        );\r\n        break;\r\n\r\n      case dCond.BASIC:\r\n        addDamage(\r\n          succDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 0.5\r\n        );\r\n        addDamage(\r\n          failDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          crfaDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 2\r\n        );\r\n        break;\r\n\r\n      case dCond.CRIF:\r\n        addDamage(\r\n          crfaDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      case dCond.FAIL:\r\n        addDamage(\r\n          failDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      case dCond.SUCC:\r\n        addDamage(\r\n          succDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      case dCond.CRIT:\r\n        addDamage(\r\n          critDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      case dCond.AT_LEAST_SUCC:\r\n        addDamage(\r\n          succDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          critDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      case dCond.AT_LEAST_FAIL:\r\n        addDamage(\r\n          failDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          succDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          critDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      case dCond.FAIL_WORSE:\r\n        addDamage(\r\n          crfaDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          failDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      case dCond.SUCC_WORSE:\r\n        addDamage(\r\n          crfaDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          failDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          succDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n\r\n        break;\r\n\r\n      case dCond.ALWAYS:\r\n        addDamage(\r\n          crfaDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          failDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          succDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        addDamage(\r\n          critDamagesByType,\r\n          damageType,\r\n          material,\r\n          persistent,\r\n          staticDamage,\r\n          damageDist,\r\n          multiplier * 1\r\n        );\r\n        break;\r\n\r\n      default:\r\n        console.log(`Damage condition ${damageCondition} not implemented yet.`);\r\n    }\r\n  });\r\n  // end going through each damage and evaluate it, put damage types together\r\n\r\n  // Start going through each damage type and apply weakness/resistance\r\n  for (let damageTreeIndex = 0; damageTreeIndex < 4; damageTreeIndex++) {\r\n    let damageTree = damageTreesByType[damageTreeIndex];\r\n    let finalTree = damageTrees[damageTreeIndex];\r\n    let damageQuality: DamageQuality = \"normal\";\r\n    // for (damageQuality in damageQualities) {\r\n    // only consolidate noramal damage\r\n    let totalStaticDamage = 0;\r\n    let totalDamageDist = [1];\r\n    let type: DamageType;\r\n    for (type in damageTree[damageQuality]) {\r\n      let { material, staticDamage, damageDist } =\r\n        damageTree[damageQuality][type]!;\r\n\r\n      // ignore if there's 0 damage\r\n      if (damageDist.length === 1 && staticDamage <= 0) continue;\r\n\r\n      // make min damage 1 before resistances\r\n      ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 1));\r\n\r\n      // find max weakness and resistance, weaknesses are negative numbers\r\n      let maxW = 0;\r\n      let maxR = 0;\r\n      for (let weakness of weaknesses) {\r\n        if (weakness.type === type || weakness.type === material) {\r\n          if (weakness.value + resistanceBonus < 0) {\r\n            maxW = Math.min(maxW, weakness.value + resistanceBonus);\r\n          } else if (weakness.value + resistanceBonus > 0) {\r\n            maxR = Math.max(maxR, weakness.value + resistanceBonus);\r\n          }\r\n        }\r\n      }\r\n      staticDamage = staticDamage - (maxR + maxW);\r\n\r\n      // make min damage 0 after resistances\r\n      ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 0));\r\n\r\n      totalStaticDamage += staticDamage;\r\n      totalDamageDist = convolve(totalDamageDist, damageDist);\r\n    }\r\n    finalTree[damageQuality].staticDamage = totalStaticDamage;\r\n    finalTree[damageQuality].damageDist = totalDamageDist;\r\n\r\n    if (isLeaf) {\r\n      // need to apply weakness/resistance to persistent damage\r\n      // then add persistent damage to normal damage\r\n      let damageQuality: DamageQuality = \"persistent\";\r\n\r\n      let totalStaticDamage = 0;\r\n      let totalDamageDist = [1];\r\n      let type: DamageType;\r\n      for (type in damageTree[damageQuality]) {\r\n        let { material, staticDamage, damageDist } =\r\n          damageTree[damageQuality][type]!;\r\n\r\n        // ignore if there's 0 damage\r\n        if (damageDist.length === 1 && staticDamage <= 0) continue;\r\n\r\n        // make min damage 1 before resistances\r\n        ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 1));\r\n\r\n        // find max weakness and resistance, weaknesses are negative numbers\r\n        let maxW = 0;\r\n        let maxR = 0;\r\n        for (let weakness of weaknesses) {\r\n          if (weakness.type === type || weakness.type === material) {\r\n            if (weakness.value + resistanceBonus < 0) {\r\n              maxW = Math.min(maxW, weakness.value + resistanceBonus);\r\n            } else if (weakness.value + resistanceBonus > 0) {\r\n              maxR = Math.max(maxR, weakness.value + resistanceBonus);\r\n            }\r\n          }\r\n        }\r\n        staticDamage = staticDamage - (maxR + maxW);\r\n\r\n        // make min damage 0 after resistances\r\n        ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 0));\r\n\r\n        totalStaticDamage += staticDamage;\r\n        totalDamageDist = convolve(totalDamageDist, damageDist);\r\n      }\r\n      let { staticDamage, damageDist } = multiplyDist(\r\n        totalStaticDamage,\r\n        totalDamageDist,\r\n        target.persistentMultiplier\r\n      );\r\n      finalTree[\"normal\"].staticDamage += staticDamage;\r\n      finalTree[\"normal\"].damageDist = convolve(\r\n        finalTree[\"normal\"].damageDist,\r\n        damageDist\r\n      );\r\n    }\r\n  }\r\n  // End going through each damage type and apply weakness/resistance\r\n\r\n  return { damageTrees, chances };\r\n}\r\nexport { calculateExpectedDamage };\r\n","import { convolve, consolidateDists, applyMax } from \"./Distribution\";\r\nimport { calculateExpectedDamage } from \"./Calculation\";\r\nimport {\r\n  Condition,\r\n  conditions,\r\n  effectStateTypes,\r\n  effectTypes,\r\n  effectValueTypes,\r\n  TargetState,\r\n  whenConditions,\r\n} from \"../Model/types\";\r\nimport {\r\n  ActivityPath,\r\n  Damage,\r\n  Effect,\r\n  Routine,\r\n} from \"../Routines/RoutineSlice/RoutineTypes\";\r\nimport { Dictionary } from \"@reduxjs/toolkit\";\r\nimport { Target } from \"../Display/targetSlice\";\r\nimport { Weakness } from \"../Display/weaknessSlice\";\r\nimport { defaultHP } from \"../Model/defaults\";\r\n\r\n/**\r\n * Checks given degreeOfSuccess is in the condition\r\n * like Success is in Success or better\r\n * @param {*} condition\r\n * @param {*} degreeOfSuccess\r\n * @returns\r\n */\r\nfunction validateCondition(condition: Condition, degreeOfSuccess: number) {\r\n  let indicies: number[] = [];\r\n  // console.log(`cond is: ${ap.condition}`);\r\n  switch (condition) {\r\n    case conditions.ALWAYS:\r\n      indicies = [0, 1, 2, 3];\r\n      break;\r\n\r\n    case conditions.AT_LEAST_FAIL:\r\n      indicies = [0, 1, 2];\r\n      break;\r\n\r\n    case conditions.AT_LEAST_SUCC:\r\n      indicies = [0, 1];\r\n      break;\r\n\r\n    case conditions.CRIF:\r\n      indicies = [3];\r\n      break;\r\n\r\n    case conditions.CRIT:\r\n      indicies = [0];\r\n      break;\r\n\r\n    case conditions.FAIL:\r\n      indicies = [2];\r\n      break;\r\n\r\n    case conditions.FAIL_WORSE:\r\n      indicies = [2, 3];\r\n      break;\r\n\r\n    case conditions.SUCC:\r\n      indicies = [1];\r\n      break;\r\n\r\n    case conditions.SUCC_WORSE:\r\n      indicies = [1, 2, 3];\r\n      break;\r\n\r\n    default:\r\n  }\r\n  return indicies.includes(degreeOfSuccess);\r\n}\r\n\r\nclass ActivityPathEvaluator {\r\n  activityPaths: Dictionary<ActivityPath>;\r\n  target: Target;\r\n  damages: Dictionary<Damage>;\r\n  effects: Dictionary<Effect>;\r\n  weaknesses: Dictionary<Weakness>;\r\n  selectedRoutine?: number;\r\n  constructor(\r\n    activityPaths: Dictionary<ActivityPath>,\r\n    targets: Dictionary<Target>,\r\n    damages: Dictionary<Damage>,\r\n    effects: Dictionary<Effect>,\r\n    weaknesses: Dictionary<Weakness>,\r\n    selectedRoutine?: number\r\n  ) {\r\n    this.activityPaths = activityPaths;\r\n    this.target = targets[0]!;\r\n    this.damages = damages;\r\n    this.effects = effects;\r\n    this.weaknesses = weaknesses;\r\n    this.selectedRoutine = selectedRoutine;\r\n  }\r\n\r\n  canEvaluate(level: number, routine: Routine) {\r\n    const levelDiff = this.target.levelDiff;\r\n    // console.log(`level ${level}, levelDiff ${levelDiff}`);\r\n    if (level < routine.startLevel || level > routine.endLevel) return false;\r\n    if (level + levelDiff < -1 || level + levelDiff > 24) return false;\r\n    return true;\r\n  }\r\n  canEvaluateSingleLevel(routine: Routine) {\r\n    const level = this.target.routineLevel;\r\n    // console.log(`level ${level}, levelDiff ${levelDiff}`);\r\n    if (level < routine.startLevel || level > routine.endLevel) return false;\r\n    return true;\r\n  }\r\n\r\n  evalRoutine(\r\n    routine: Routine,\r\n    ACBonus: number,\r\n    resBonus: number,\r\n    level?: number\r\n  ) {\r\n    let maxDamage: number;\r\n    if (level === undefined) {\r\n      maxDamage = this.target.currentHP;\r\n    } else {\r\n      maxDamage = Math.round(\r\n        defaultHP[this.target.HPTrend][level] * (this.target.percentHP / 100)\r\n      );\r\n    }\r\n    const initialTargetState = {\r\n      persistentDamages: {},\r\n    } as TargetState;\r\n    for (let effectState of Object.values(effectStateTypes)) {\r\n      initialTargetState[effectState] = false;\r\n    }\r\n    for (let effectValue of Object.values(effectValueTypes)) {\r\n      initialTargetState[effectValue] = 0;\r\n    }\r\n    initialTargetState.Flatfooted = this.target.flatfooted;\r\n\r\n    const dataArray = [];\r\n    const cumulative = [];\r\n\r\n    let expD = 0;\r\n    // let expP = 0;\r\n    let routineDDist = [1];\r\n    // let routinePDDist = [1];\r\n    for (let i = 0; i < routine.apIds.length; i++) {\r\n      let activityPath = this.activityPaths[routine.apIds[i]]!;\r\n      let damageDist = this.evalPath(\r\n        activityPath,\r\n        initialTargetState,\r\n        ACBonus,\r\n        resBonus,\r\n        level\r\n      );\r\n      routineDDist = convolve(routineDDist, damageDist);\r\n    }\r\n    // make sure damage not more than HP\r\n    // static damage is 0, so can ignore it\r\n    const { damageDist } = applyMax(0, routineDDist, maxDamage);\r\n    routineDDist = damageDist;\r\n\r\n    let currentSum = 1;\r\n    for (let i = 0; i < routineDDist.length; i++) {\r\n      dataArray.push(i);\r\n      cumulative.push(currentSum);\r\n      currentSum -= routineDDist[i];\r\n\r\n      expD += routineDDist[i] * i;\r\n    }\r\n\r\n    return {\r\n      expD,\r\n      dataArray,\r\n      routineDDist,\r\n      cumulative,\r\n    };\r\n  }\r\n\r\n  evalPath(\r\n    activityPath: ActivityPath,\r\n    targetState: TargetState,\r\n    defenseBonus: number,\r\n    resistanceBonus: number,\r\n    level?: number\r\n  ) {\r\n    // evaluate this and all following APs\r\n    let currentTarget = this.target;\r\n    let currentDamages = activityPath.damages.map(\r\n      (damageId) => this.damages[damageId]!\r\n    );\r\n    //currentDamages.push(activityPath);\r\n    let currentEffects = activityPath.effects.map(\r\n      (effectId) => this.effects[effectId]!\r\n    );\r\n    let currentWeaknesses = currentTarget.weaknesses.map(\r\n      (weaknessId) => this.weaknesses[weaknessId]!\r\n    );\r\n\r\n    // calculate the expected damage for this activity\r\n    let { damageTrees, chances } = calculateExpectedDamage(\r\n      activityPath,\r\n      currentDamages,\r\n      currentTarget,\r\n      targetState,\r\n      currentWeaknesses,\r\n      defenseBonus,\r\n      resistanceBonus,\r\n      activityPath.apIds.length === 0,\r\n      level\r\n    );\r\n    // console.log(\"damage trees: \", damageTrees);\r\n\r\n    const targetStates = [targetState, targetState, targetState, targetState];\r\n    // go through each degree of success\r\n    for (let i = 0; i < 4; i++) {\r\n      // go though each valid effect and update targetStates\r\n      currentEffects.forEach((effect) => {\r\n        let {\r\n          effectCondition,\r\n          effectType,\r\n          effectValue,\r\n          startLevel,\r\n          endLevel,\r\n          damageWhen,\r\n        } = effect;\r\n        if (level !== undefined) {\r\n          if (level < startLevel || level > endLevel) return;\r\n        } else {\r\n          if (\r\n            this.target.routineLevel < startLevel ||\r\n            this.target.routineLevel > endLevel\r\n          )\r\n            return;\r\n        }\r\n        let shouldAddThisEffect = false;\r\n        for (let state of damageWhen) {\r\n          if (state === whenConditions.Always) {\r\n            shouldAddThisEffect = true;\r\n            break;\r\n          }\r\n          let val = targetStates[i][state];\r\n          if (val && val > 0) {\r\n            shouldAddThisEffect = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!shouldAddThisEffect) return;\r\n\r\n        if (validateCondition(effectCondition, i)) {\r\n          switch (effectType) {\r\n            case effectTypes.RESTRAINED:\r\n              if (targetStates[i].Restrained !== true)\r\n                targetStates[i] = {\r\n                  ...targetStates[i],\r\n                  Flatfooted: true,\r\n                  Grappled: true,\r\n                  Restrained: true,\r\n                };\r\n              break;\r\n\r\n            case effectTypes.GRAPPLED:\r\n              if (targetStates[i].Grappled !== true)\r\n                targetStates[i] = {\r\n                  ...targetStates[i],\r\n                  Flatfooted: true,\r\n                  Grappled: true,\r\n                };\r\n              break;\r\n\r\n            case effectTypes.PRONE:\r\n              if (targetStates[i].Prone !== true)\r\n                targetStates[i] = {\r\n                  ...targetStates[i],\r\n                  Flatfooted: true,\r\n                  Prone: true,\r\n                };\r\n              break;\r\n\r\n            case effectTypes.FLATFOOT:\r\n              if (targetStates[i].Flatfooted !== true)\r\n                targetStates[i] = { ...targetStates[i], Flatfooted: true };\r\n              break;\r\n\r\n            case effectTypes.FRIGHTENED:\r\n              if (effectValue && targetStates[i].Frightened < effectValue)\r\n                targetStates[i] = {\r\n                  ...targetStates[i],\r\n                  Frightened: effectValue,\r\n                };\r\n              break;\r\n\r\n            case effectTypes.CLUMSY:\r\n              if (effectValue && targetStates[i].Clumsy < effectValue)\r\n                targetStates[i] = {\r\n                  ...targetStates[i],\r\n                  Clumsy: effectValue,\r\n                };\r\n              break;\r\n\r\n            case effectTypes.BONUSC1:\r\n              if (\r\n                effectValue &&\r\n                targetStates[i][\"Cicumstance Bonus to next attack\"] <\r\n                  effectValue\r\n              )\r\n                targetStates[i] = {\r\n                  ...targetStates[i],\r\n                  \"Cicumstance Bonus to next attack\": effectValue,\r\n                };\r\n\r\n              break;\r\n\r\n            case effectTypes.BONUSSA:\r\n              if (\r\n                effectValue &&\r\n                targetStates[i][\"Status Bonus to all attacks\"] < effectValue\r\n              ) {\r\n                targetStates[i] = {\r\n                  ...targetStates[i],\r\n                  \"Status Bonus to all attacks\": effectValue,\r\n                };\r\n              }\r\n              break;\r\n\r\n            default:\r\n              console.log(`Effect type ${effectType} not implemented`);\r\n          }\r\n        }\r\n      });\r\n      // add persistent damage to target state if necessary\r\n      if (\r\n        damageTrees[i].persistent &&\r\n        JSON.stringify(damageTrees[i].persistent) !==\r\n          JSON.stringify(targetStates[i].persistentDamages)\r\n      ) {\r\n        targetStates[i] = {\r\n          ...targetStates[i],\r\n          persistentDamages: damageTrees[i].persistent,\r\n        };\r\n      }\r\n    }\r\n\r\n    // go through each activity path, depending on its condition add its damage distributions to this activities appropriately\r\n    activityPath.apIds.forEach((apId) => {\r\n      let ap = this.activityPaths[apId]!;\r\n\r\n      const evaluations = new Map();\r\n      // go through each degree of success\r\n      for (let i = 0; i < 4; i++) {\r\n        // evaluate if necessary and add distribution to damageTrees, or take max for persistent damage\r\n        if (validateCondition(ap.condition, i)) {\r\n          if (evaluations.has(targetStates[i])) {\r\n            // already evaluated\r\n            // console.log(\"skip target state: \", targetStates[i]);\r\n          } else {\r\n            let pathDist = this.evalPath(\r\n              ap,\r\n              targetStates[i],\r\n              defenseBonus,\r\n              resistanceBonus,\r\n              level\r\n            );\r\n            // console.log(\"add target state: \", targetStates[i]);\r\n            evaluations.set(targetStates[i], pathDist);\r\n          }\r\n          damageTrees[i].normal.damageDist = convolve(\r\n            damageTrees[i].normal.damageDist,\r\n            evaluations.get(targetStates[i])\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    let damageDist = consolidateDists(\r\n      { distribution: damageTrees[0].normal, chance: chances[0] },\r\n      { distribution: damageTrees[1].normal, chance: chances[1] },\r\n      { distribution: damageTrees[2].normal, chance: chances[2] },\r\n      { distribution: damageTrees[3].normal, chance: chances[3] }\r\n    );\r\n\r\n    return damageDist;\r\n  }\r\n}\r\n\r\nexport { ActivityPathEvaluator };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../App/store\";\r\n\r\nexport const sharingSlice = createSlice({\r\n  name: \"sharing\",\r\n  initialState: {\r\n    graphUrl: \"\",\r\n    singleLevelGraphUrl: \"\",\r\n    imgLink: \"\",\r\n  },\r\n  reducers: {\r\n    graphSaved: (state, action) => {\r\n      state.graphUrl = action.payload;\r\n    },\r\n    singleLevelGraphSaved: (state, action) => {\r\n      state.singleLevelGraphUrl = action.payload;\r\n    },\r\n    saveImgLink: (state, action) => {\r\n      state.imgLink = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { graphSaved, singleLevelGraphSaved, saveImgLink } =\r\n  sharingSlice.actions;\r\n\r\nexport default sharingSlice.reducer;\r\n\r\nexport const selectGraphUrl = (state: RootState, byLevel: boolean) => {\r\n  return byLevel ? state.sharing.graphUrl : state.sharing.singleLevelGraphUrl;\r\n};\r\n","import React from \"react\";\r\n\r\nimport {\r\n  selectactivityPathEntities,\r\n  selectSelectedRoutine,\r\n} from \"../Routines/RoutineSlice/routineSlice\";\r\nimport { Routine } from \"../Routines/RoutineSlice/RoutineTypes\";\r\nimport { selectdamageEntities } from \"../Routines/RoutineSlice/routineSlice\";\r\nimport { selectRoutineEntities } from \"../Routines/RoutineSlice/routineSlice\";\r\nimport { selecttargetEntities } from \"./targetSlice\";\r\nimport { selectweaknessEntities } from \"./weaknessSlice\";\r\nimport { graphTypes } from \"../Model/types\";\r\nimport { selecteffectEntities } from \"../Routines/RoutineSlice/routineSlice\";\r\n\r\nimport { ActivityPathEvaluator } from \"../Calculation/EvaluateActivityPath\";\r\n\r\nimport Plotly from \"plotly.js-basic-dist\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport { Dictionary } from \"@reduxjs/toolkit\";\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\nimport { graphSaved, singleLevelGraphSaved } from \"./sharingSlice\";\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nconst useGenerateGraphs = (graphType: string) => {\r\n  const routines = useAppSelector(selectRoutineEntities);\r\n  const activityPaths = useAppSelector(selectactivityPathEntities);\r\n  const targets = useAppSelector(selecttargetEntities);\r\n  const damages = useAppSelector(selectdamageEntities);\r\n  const effects = useAppSelector(selecteffectEntities);\r\n  const weaknesses = useAppSelector(selectweaknessEntities);\r\n  const selectedRoutine = useAppSelector(selectSelectedRoutine);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const saveGraph = (_figure: any, graphDiv: Plotly.Root) => {\r\n    Plotly.toImage(graphDiv, {\r\n      format: \"png\",\r\n      height: 1000,\r\n      width: 1000,\r\n    }).then((url) => {\r\n      dispatch(graphSaved(url));\r\n    });\r\n  };\r\n  const saveSingleLevelGraph = (_figure: any, graphDiv: Plotly.Root) => {\r\n    Plotly.toImage(graphDiv, {\r\n      format: \"png\",\r\n      height: 1000,\r\n      width: 1000,\r\n    }).then((url) => {\r\n      dispatch(singleLevelGraphSaved(url));\r\n    });\r\n  };\r\n\r\n  const evaluator = new ActivityPathEvaluator(\r\n    activityPaths,\r\n    targets,\r\n    damages,\r\n    effects,\r\n    weaknesses,\r\n    selectedRoutine\r\n  );\r\n\r\n  const currentTarget = targets[0]!;\r\n  let title = \"@\" + currentTarget.routineLevel;\r\n  let byLevelTile = currentTarget.name;\r\n\r\n  title += \" Vs\";\r\n  if (currentTarget.flatfooted) title += \" flatfooted\";\r\n  title += \" AC: \" + currentTarget.overrideAC; //+ defaultACs[currentTarget.ACTrend][displayLevel];\r\n  title += \" F: \" + currentTarget.overrideFort; //+ defaultSaves[currentTarget.FortTrend][displayLevel];\r\n  title += \" R: \" + currentTarget.overrideRef; //+ defaultSaves[currentTarget.RefTrend][displayLevel];\r\n  title += \" W: \" + currentTarget.overrideWill; //+ defaultSaves[currentTarget.WillTrend][displayLevel];\r\n  title += \" P: \" + currentTarget.overridePer; //+ defaultSaves[currentTarget.PerTrend][displayLevel];\r\n\r\n  let datasets: Plotly.Data[] = [];\r\n  let expectedDamages;\r\n\r\n  switch (graphType) {\r\n    case graphTypes.DISTRIBUTION:\r\n      ({ expectedDamages, datasets } = evaluateDistribution(\r\n        routines,\r\n        evaluator\r\n      ));\r\n      break;\r\n    case graphTypes.PMDEFENSE:\r\n      ({ expectedDamages, datasets } = evaluatePM(routines, evaluator, true));\r\n      break;\r\n    case graphTypes.PMRES:\r\n    default:\r\n      ({ expectedDamages, datasets } = evaluatePM(routines, evaluator, false));\r\n      break;\r\n  }\r\n  let { datasets: byLeveldatasets } = evaluateByLevel(routines, evaluator);\r\n\r\n  let xtitle;\r\n  let ytitle;\r\n  if (graphType === graphTypes.DISTRIBUTION) {\r\n    xtitle = \"damage\";\r\n    ytitle = \"chance\";\r\n  } else if (graphType === graphTypes.PMDEFENSE) {\r\n    xtitle = \"+/- AC/Save Bonus\";\r\n    ytitle = \"Expected Damage\";\r\n  } else if (graphType === graphTypes.PMRES) {\r\n    xtitle = \"+/- Resistance/Weakness\";\r\n    ytitle = \"Expected Damage\";\r\n  }\r\n\r\n  let damageChart = (\r\n    <Plot\r\n      className=\"plot\"\r\n      data={datasets}\r\n      layout={{\r\n        title: title,\r\n        autosize: true,\r\n        xaxis: { title: xtitle },\r\n        yaxis: { title: ytitle },\r\n        legend: {\r\n          x: 0,\r\n          y: -0.2,\r\n          xanchor: \"left\",\r\n          yanchor: \"top\",\r\n        },\r\n        margin: {\r\n          l: 40,\r\n          r: 40,\r\n        },\r\n      }}\r\n      useResizeHandler={true}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      onInitialized={saveSingleLevelGraph}\r\n      onUpdate={saveSingleLevelGraph}\r\n    />\r\n  );\r\n\r\n  let byLevelDamageChart = (\r\n    <Plot\r\n      className=\"plot\"\r\n      data={byLeveldatasets}\r\n      layout={{\r\n        title: byLevelTile,\r\n        autosize: true,\r\n        xaxis: { title: \"Level\" },\r\n        yaxis: { title: \"Expected Damage\" },\r\n        legend: {\r\n          x: 0,\r\n          y: -0.2,\r\n          xanchor: \"left\",\r\n          yanchor: \"top\",\r\n        },\r\n        margin: {\r\n          l: 40,\r\n          r: 40,\r\n        },\r\n      }}\r\n      useResizeHandler={true}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      onInitialized={saveGraph}\r\n      onUpdate={saveGraph}\r\n    />\r\n  );\r\n  return {\r\n    expectedDamages,\r\n    damageChart,\r\n    byLevelDamageChart,\r\n  };\r\n};\r\n\r\nconst evaluateByLevel = (\r\n  routines: Dictionary<Routine>,\r\n  evaluator: ActivityPathEvaluator\r\n) => {\r\n  let datasets = [];\r\n\r\n  // Evaluate the selected routine first so we can display other routines as a % of that\r\n  const selectedRoutineDamage: { [key: number]: number } = {};\r\n  if (\r\n    evaluator.target.percentSelectedRoutine &&\r\n    evaluator.selectedRoutine !== undefined\r\n  ) {\r\n    let routine = routines[evaluator.selectedRoutine]!;\r\n    for (let level = 1; level <= 20; level++) {\r\n      if (!evaluator.canEvaluate(level, routine)) continue;\r\n      let { expD } = evaluator.evalRoutine(routine, 0, 0, level);\r\n      selectedRoutineDamage[level] = expD;\r\n    }\r\n  }\r\n\r\n  for (let id in routines) {\r\n    let routine = routines[id]!;\r\n    if (!routine.display) continue;\r\n\r\n    const levelArray = [];\r\n    const expDbyLevel = [];\r\n    for (let level = 1; level <= 20; level++) {\r\n      if (!evaluator.canEvaluate(level, routine)) continue;\r\n\r\n      let { expD } = evaluator.evalRoutine(routine, 0, 0, level);\r\n      if (evaluator.target.percentSelectedRoutine) {\r\n        if (level in selectedRoutineDamage) {\r\n          levelArray.push(level);\r\n          expDbyLevel.push(expD / selectedRoutineDamage[level]);\r\n        }\r\n      } else {\r\n        levelArray.push(level);\r\n        expDbyLevel.push(expD);\r\n      }\r\n    }\r\n    datasets.push({\r\n      type: \"scatter\",\r\n      name: routine.name,\r\n      x: levelArray,\r\n      y: expDbyLevel,\r\n      yaxis: \"y\",\r\n    } as const);\r\n  }\r\n\r\n  return { datasets };\r\n};\r\n\r\nconst evaluatePM = (\r\n  routines: Dictionary<Routine>,\r\n  evaluator: ActivityPathEvaluator,\r\n  defense = true\r\n) => {\r\n  let datasets = [];\r\n  let expectedDamages = [];\r\n\r\n  for (let id in routines) {\r\n    let routine = routines[id]!;\r\n    if (!routine.display) continue;\r\n    if (!evaluator.canEvaluateSingleLevel(routine)) continue;\r\n\r\n    const bonusArray = [];\r\n    const expDbyBonus = [];\r\n\r\n    for (let bonus = -5; bonus <= 5; bonus++) {\r\n      bonusArray.push(bonus);\r\n      let { expD } = evaluator.evalRoutine(\r\n        routine,\r\n        defense ? bonus : 0,\r\n        defense ? 0 : bonus\r\n      );\r\n\r\n      if (bonus === 0) {\r\n        expectedDamages.push(\r\n          <div key={routine.id}>\r\n            {routine.name}\r\n            {\": \"}\r\n            {expD.toFixed(2)}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      expDbyBonus.push(expD);\r\n    }\r\n\r\n    datasets.push({\r\n      type: \"scatter\",\r\n      name: routine.name,\r\n      x: bonusArray,\r\n      y: expDbyBonus,\r\n      yaxis: \"y\",\r\n    } as const);\r\n  }\r\n  return { expectedDamages, datasets };\r\n};\r\n\r\nconst evaluateDistribution = (\r\n  routines: Dictionary<Routine>,\r\n  evaluator: ActivityPathEvaluator\r\n) => {\r\n  let datasets = [];\r\n  let expectedDamages = [];\r\n\r\n  for (let id in routines) {\r\n    let routine = routines[id]!;\r\n    if (!routine.display) continue;\r\n    if (!evaluator.canEvaluateSingleLevel(routine)) continue;\r\n    let { expD, dataArray, routineDDist, cumulative } = evaluator.evalRoutine(\r\n      routine,\r\n      0,\r\n      0\r\n    );\r\n    expectedDamages.push(\r\n      <div key={routine.id}>\r\n        {routine.name}\r\n        {\": \"}\r\n        {expD.toFixed(2)}\r\n      </div>\r\n    );\r\n    datasets.push({\r\n      type: \"scatter\",\r\n      name: routine.name,\r\n      x: dataArray,\r\n      y: cumulative,\r\n      yaxis: \"y\",\r\n    } as const);\r\n    datasets.push({\r\n      type: \"bar\",\r\n      name: expD.toFixed(2),\r\n      x: dataArray,\r\n      y: routineDDist,\r\n    } as const);\r\n  }\r\n  return { expectedDamages, datasets };\r\n};\r\n\r\nexport default useGenerateGraphs;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\nimport { selecttargetById, targetUpdated } from \"./targetSlice\";\r\nimport { RootState } from \"../App/store\";\r\nimport { weaknessOptions } from \"../Model/options\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Grid,\r\n  TextField,\r\n  Slider,\r\n  Typography,\r\n  SelectChangeEvent,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport {\r\n  selectweaknessById,\r\n  Weakness,\r\n  weaknessCreated,\r\n  weaknessRemoved,\r\n  weaknessUpdated,\r\n} from \"./weaknessSlice\";\r\nimport { damageTypes } from \"../Model/types\";\r\n\r\nconst SingleLevelInput = () => {\r\n  const id = 0;\r\n  const {\r\n    routineLevel,\r\n    targetLevel,\r\n    overrideAC,\r\n    overrideFort,\r\n    overrideRef,\r\n    overrideWill,\r\n    overridePer,\r\n    overrideHP,\r\n    currentHP,\r\n\r\n    weaknesses,\r\n  } = useAppSelector((state: RootState) => selecttargetById(state, id)!);\r\n\r\n  const [AC, setAC] = useState(overrideAC.toString());\r\n  const [Fort, setFort] = useState(overrideFort.toString());\r\n  const [Ref, setRef] = useState(overrideRef.toString());\r\n  const [Will, setWill] = useState(overrideWill.toString());\r\n  const [Per, setPer] = useState(overridePer.toString());\r\n  const [HP, setHP] = useState(overrideHP.toString());\r\n\r\n  useEffect(() => {\r\n    setAC(overrideAC.toString());\r\n    setFort(overrideFort.toString());\r\n    setRef(overrideRef.toString());\r\n    setWill(overrideWill.toString());\r\n    setPer(overridePer.toString());\r\n    setHP(overrideHP.toString());\r\n  }, [\r\n    overrideAC,\r\n    overrideFort,\r\n    overrideRef,\r\n    overrideWill,\r\n    overridePer,\r\n    overrideHP,\r\n  ]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        spacing={{ xs: 1, sm: 2 }}\r\n        sx={{ my: 1, p: 1 }}\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={6} container justifyContent=\"center\">\r\n          <Typography id=\"routine-level\">Level: {routineLevel}</Typography>\r\n\r\n          <Box sx={{ px: 2, width: 1 }}>\r\n            <Slider\r\n              aria-labelledby=\"routine-level\"\r\n              valueLabelDisplay=\"auto\"\r\n              value={routineLevel}\r\n              step={1}\r\n              min={1}\r\n              max={20}\r\n              marks\r\n              onChange={(_, nv) => {\r\n                let newTargetLevel = Number(nv) + (targetLevel - routineLevel);\r\n                newTargetLevel = Math.min(24, Math.max(-1, newTargetLevel));\r\n                dispatch(\r\n                  targetUpdated({\r\n                    id,\r\n                    changes: {\r\n                      routineLevel: nv,\r\n                      targetLevel: newTargetLevel,\r\n                    },\r\n                  })\r\n                );\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} container justifyContent=\"center\">\r\n          <Typography id=\"target-level\">Target Level: {targetLevel}</Typography>\r\n          <Box sx={{ px: 2, width: 1 }}>\r\n            <Slider\r\n              aria-labelledby=\"target-level\"\r\n              valueLabelDisplay=\"auto\"\r\n              value={targetLevel}\r\n              step={1}\r\n              min={-1}\r\n              max={24}\r\n              marks\r\n              onChange={(e, nv) => {\r\n                dispatch(\r\n                  targetUpdated({\r\n                    id,\r\n                    changes: {\r\n                      targetLevel: nv,\r\n                    },\r\n                  })\r\n                );\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={{ xs: 1, sm: 2 }} justifyContent=\"center\">\r\n        <Grid item xs={4} sm={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"AC\"\r\n            value={AC}\r\n            onChange={(e) => {\r\n              setAC(e.target.value);\r\n              e.target.focus();\r\n            }}\r\n            onBlur={() => {\r\n              let newVal = parseInt(AC);\r\n              setAC(newVal.toString());\r\n              dispatch(\r\n                targetUpdated({\r\n                  id,\r\n                  changes: {\r\n                    overrideAC: newVal,\r\n                  },\r\n                })\r\n              );\r\n            }}\r\n            inputProps={{\r\n              step: 1,\r\n              min: 0,\r\n              max: 100,\r\n              type: \"number\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} sm={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Fort\"\r\n            value={Fort}\r\n            onChange={(e) => {\r\n              setFort(e.target.value);\r\n              e.target.focus();\r\n            }}\r\n            onBlur={() => {\r\n              let newVal = parseInt(Fort);\r\n              setFort(newVal.toString());\r\n              dispatch(\r\n                targetUpdated({\r\n                  id,\r\n                  changes: {\r\n                    overrideFort: newVal,\r\n                  },\r\n                })\r\n              );\r\n            }}\r\n            inputProps={{\r\n              step: 1,\r\n              min: 0,\r\n              max: 100,\r\n              type: \"number\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} sm={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Ref\"\r\n            value={Ref}\r\n            onChange={(e) => {\r\n              setRef(e.target.value);\r\n              e.target.focus();\r\n            }}\r\n            onBlur={() => {\r\n              let newVal = parseInt(Ref);\r\n              setRef(newVal.toString());\r\n              dispatch(\r\n                targetUpdated({\r\n                  id,\r\n                  changes: {\r\n                    overrideRef: newVal,\r\n                  },\r\n                })\r\n              );\r\n            }}\r\n            inputProps={{\r\n              step: 1,\r\n              min: 0,\r\n              max: 100,\r\n              type: \"number\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} sm={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Will\"\r\n            value={Will}\r\n            onChange={(e) => {\r\n              setWill(e.target.value);\r\n              e.target.focus();\r\n            }}\r\n            onBlur={() => {\r\n              let newVal = parseInt(Will);\r\n              setWill(newVal.toString());\r\n              dispatch(\r\n                targetUpdated({\r\n                  id,\r\n                  changes: {\r\n                    overrideWill: newVal,\r\n                  },\r\n                })\r\n              );\r\n            }}\r\n            inputProps={{\r\n              step: 1,\r\n              min: 0,\r\n              max: 100,\r\n              type: \"number\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} sm={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Perception\"\r\n            value={Per}\r\n            onChange={(e) => {\r\n              setPer(e.target.value);\r\n              e.target.focus();\r\n            }}\r\n            onBlur={() => {\r\n              let newVal = parseInt(Per);\r\n              setPer(newVal.toString());\r\n              dispatch(\r\n                targetUpdated({\r\n                  id,\r\n                  changes: {\r\n                    overridePer: newVal,\r\n                  },\r\n                })\r\n              );\r\n            }}\r\n            inputProps={{\r\n              step: 1,\r\n              min: 0,\r\n              max: 100,\r\n              type: \"number\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ my: 1, p: 1 }}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Max Hit Points\"\r\n            value={HP}\r\n            onChange={(e) => {\r\n              setHP(e.target.value);\r\n              e.target.focus();\r\n            }}\r\n            onBlur={() => {\r\n              let newVal = parseInt(HP);\r\n              setHP(newVal.toString());\r\n              dispatch(\r\n                targetUpdated({\r\n                  id,\r\n                  changes: {\r\n                    overrideHP: newVal,\r\n                  },\r\n                })\r\n              );\r\n            }}\r\n            inputProps={{\r\n              step: 1,\r\n              min: 1,\r\n              max: 1000,\r\n              type: \"number\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} container justifyContent=\"center\">\r\n          <Typography id=\"current-HP\">\r\n            HP: {currentHP}/{overrideHP}\r\n          </Typography>\r\n\r\n          <Box sx={{ px: 2, width: 1 }}>\r\n            <Slider\r\n              aria-labelledby=\"current-HP\"\r\n              valueLabelDisplay=\"auto\"\r\n              value={currentHP}\r\n              min={0}\r\n              max={overrideHP}\r\n              step={1}\r\n              onChange={(_, nv) => {\r\n                let newCurrentHP = Number(nv);\r\n                dispatch(\r\n                  targetUpdated({\r\n                    id,\r\n                    changes: {\r\n                      currentHP: newCurrentHP,\r\n                    },\r\n                  })\r\n                );\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ my: 1, p: 1 }}>\r\n        <Grid item container alignItems=\"center\" xs=\"auto\">\r\n          <Typography>Resistance/Weakness: </Typography>\r\n        </Grid>\r\n        {weaknesses.map((weaknessId) => (\r\n          <WeaknessInput parentId={id} id={weaknessId} key={weaknessId} />\r\n        ))}\r\n        <AddWeakness parentId={id} />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { SingleLevelInput };\r\n\r\nconst WeaknessInput = ({ id, parentId }: { id: number; parentId: number }) => {\r\n  // needs to have parent id to remove weakness\r\n  const { type, value } = useAppSelector((state: RootState) =>\r\n    selectweaknessById(state, id)\r\n  )!;\r\n  const [tempVal, setTempVal] = useState(value.toString());\r\n  const dispatch = useAppDispatch();\r\n\r\n  const updateOrRemoveWeakness = (e: SelectChangeEvent) => {\r\n    if (e?.target?.value === damageTypes.NONE) {\r\n      // remove this weakness\r\n      dispatch(weaknessRemoved({ id, parentId }));\r\n    } else {\r\n      dispatch(\r\n        weaknessUpdated({\r\n          id,\r\n          changes: { type: e.target.value as Weakness[\"type\"] },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      <WeaknessSelect value={type} onChange={updateOrRemoveWeakness} />\r\n      <Tooltip title=\"Positive numbers are resistances. Negative numbers are weaknesses.\">\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Value\"\r\n          value={tempVal}\r\n          sx={{ width: \"9ch\" }}\r\n          onChange={(e) => {\r\n            setTempVal(e.target.value);\r\n            e.target.focus();\r\n          }}\r\n          onBlur={() => {\r\n            let newVal = parseInt(tempVal);\r\n            if (Number.isNaN(newVal)) newVal = 0;\r\n            setTempVal(newVal.toString());\r\n            dispatch(weaknessUpdated({ id, changes: { value: newVal } }));\r\n          }}\r\n          inputProps={{\r\n            step: 1,\r\n            min: -100,\r\n            max: 100,\r\n            type: \"number\",\r\n          }}\r\n        />\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst AddWeakness = ({ parentId }: { parentId: number }) => {\r\n  const dispatch = useAppDispatch();\r\n  let [tempVal, setTempVal] = useState(\"0\");\r\n\r\n  // add a Weakness to TargetInfo id\r\n  const addWeakness = (e: SelectChangeEvent) => {\r\n    if (e.target.value !== damageTypes.NONE) {\r\n      // need to create a new weakness\r\n      let value = Number(tempVal);\r\n      if (Number.isNaN(value)) value = 0;\r\n      dispatch(\r\n        weaknessCreated({\r\n          type: e.target.value,\r\n          value: value,\r\n          parentId: parentId,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      <WeaknessSelect value={damageTypes.NONE} onChange={addWeakness} />\r\n      <Tooltip title=\"Positive numbers are resistances. Negative numbers are weaknesses.\">\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Value\"\r\n          value={tempVal}\r\n          sx={{ width: \"9ch\" }}\r\n          onChange={(e) => {\r\n            setTempVal(e.target.value);\r\n          }}\r\n          inputProps={{\r\n            step: 1,\r\n            min: -100,\r\n            max: 100,\r\n            type: \"number\",\r\n          }}\r\n        />\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst WeaknessSelect = ({\r\n  value,\r\n  onChange,\r\n}: {\r\n  value: Weakness[\"type\"];\r\n  onChange: (e: SelectChangeEvent) => void;\r\n}) => {\r\n  return (\r\n    <FormControl size=\"small\">\r\n      <InputLabel>Type</InputLabel>\r\n      <Select label=\"Type\" value={value} onChange={(e) => onChange(e)}>\r\n        {weaknessOptions}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\nimport { selecttargetById, targetUpdated } from \"./targetSlice\";\r\n// import { damageTypes } from \"../Model/types\";\r\n// import {\r\n//   selectweaknessById,\r\n//   Weakness,\r\n//   weaknessCreated,\r\n//   weaknessRemoved,\r\n//   weaknessUpdated,\r\n// } from \"./weaknessSlice\";\r\n// import { EntityId } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../App/store\";\r\nimport { Grid, TextField, FormControlLabel, Switch } from \"@mui/material\";\r\n\r\nconst JointInput = () => {\r\n  const id = 0;\r\n  const {\r\n    persistentMultiplier,\r\n    flatfooted,\r\n    percentSelectedRoutine,\r\n    // weaknesses,\r\n  } = useAppSelector((state: RootState) => selecttargetById(state, id)!);\r\n  const [perMul, setPerMul] = useState(persistentMultiplier.toString());\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n      <Grid item xs={6} sm={3} md={6} lg={3}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={flatfooted}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  targetUpdated({\r\n                    id,\r\n                    changes: { flatfooted: e.target.checked },\r\n                  })\r\n                )\r\n              }\r\n            />\r\n          }\r\n          label=\"Flatfooted\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={3} md={6} lg={3}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Persistent Damage Multiplier\"\r\n          value={perMul}\r\n          onChange={(e) => {\r\n            setPerMul(e.target.value);\r\n            e.target.focus();\r\n          }}\r\n          onBlur={() => {\r\n            let newVal = parseFloat(perMul);\r\n            if (Number.isNaN(newVal)) newVal = 0;\r\n            setPerMul(newVal.toString());\r\n            dispatch(\r\n              targetUpdated({\r\n                id,\r\n                changes: {\r\n                  persistentMultiplier: newVal,\r\n                },\r\n              })\r\n            );\r\n          }}\r\n          inputProps={{\r\n            step: 0.1,\r\n            min: 0,\r\n            max: 10,\r\n            type: \"number\",\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} md={12} lg={6}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={percentSelectedRoutine}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  targetUpdated({\r\n                    id,\r\n                    changes: { percentSelectedRoutine: e.target.checked },\r\n                  })\r\n                )\r\n              }\r\n            />\r\n          }\r\n          label=\"% of Selected Routine\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport { JointInput };\r\n","import { Button, useMediaQuery } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\nimport { saveImgLink, selectGraphUrl } from \"../Display/sharingSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\nimport { selectRoutineDescriptions } from \"../Routines/RoutineSlice/routineSlice\";\r\nimport { RootState } from \"../App/store\";\r\nimport ReactGA from \"react-ga4\";\r\nReactGA.initialize(\"G-JR2YK097BG\");\r\n\r\nconst url = \"https://api.imgur.com/3/image\";\r\nconst auth = \"Client-ID 9f68ffe6050491a\";\r\n\r\nexport const Upload = ({ byLevel = true }: { byLevel?: boolean }) => {\r\n  const graphUrl = useAppSelector((state: RootState) =>\r\n    selectGraphUrl(state, byLevel)\r\n  ).split(\";base64,\")[1];\r\n  const routineDescriptions = useAppSelector(selectRoutineDescriptions);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isBigEnough = useMediaQuery((theme: any) => {\r\n    return theme.breakpoints.up(\"sm\");\r\n  });\r\n\r\n  const title = \"Graph from https://bahalbach.github.io/PF2Calculator/\";\r\n  let description = \"\";\r\n  // \"Graph made with https://bahalbach.github.io/PF2Calculator/ \";\r\n  for (let rd of routineDescriptions) {\r\n    description += rd + \" \\r\\n\";\r\n  }\r\n  description +=\r\n    \"\\n Graph made with https://bahalbach.github.io/PF2Calculator/ \";\r\n  const fd = new FormData();\r\n  fd.append(\"image\", graphUrl);\r\n  fd.append(\"title\", title);\r\n  fd.append(\"description\", description);\r\n  const requestOptions: RequestInit = {\r\n    method: \"POST\",\r\n    headers: { Authorization: auth },\r\n    body: fd,\r\n  };\r\n\r\n  const uploadImage = () => {\r\n    // console.log(description);\r\n    // console.log(routineDescriptions);\r\n    ReactGA.event(\"share\");\r\n\r\n    const tab = window.open(\"about:blank\");\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        // if (response.ok) {\r\n        //   alert(\"Image uploaded to album\");\r\n        // }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(`description is ${json.data.description}`);\r\n        dispatch(saveImgLink(json.data.link));\r\n        if (tab !== null) {\r\n          tab.location = json.data.link;\r\n          tab.focus();\r\n        }\r\n        // window.open(url, \"_blank\").focus();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(\"Upload failed: \" + error);\r\n        tab?.close();\r\n      });\r\n  };\r\n  return (\r\n    <Button\r\n      onClick={uploadImage}\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      endIcon={<ShareIcon />}\r\n    >\r\n      {isBigEnough ? \"Share with IMGUR\" : \"Share\"}\r\n    </Button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n// import { graphTypeOptions, levelOptions } from \"../Model/options\";\r\nimport { graphTypes } from \"../Model/types\";\r\nimport { ByLevelInput } from \"./ByLevelInput\";\r\n\r\nimport {\r\n  Collapse,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Select,\r\n  Switch,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\n\r\nimport useGenerateGraphs from \"./useGenerateGraphs\";\r\nimport { makeOptions } from \"../Model/options\";\r\nimport { Box } from \"@mui/system\";\r\nimport { SingleLevelInput } from \"./SingleLevelInput\";\r\nimport { JointInput } from \"./JointInput\";\r\nimport { Upload } from \"../Sharing/Upload\";\r\n\r\nconst Display = () => {\r\n  // evaluates routines and displays appropriate graphs\r\n  const [showByLevel, setShowByLevel] = useState<boolean>(true);\r\n  const [showSingleLevel, setShowSingleLevel] = useState<boolean>(false);\r\n  // const [addPersistent, setAddPersistent] = useState(false);\r\n  const [graphType, setGraphType] = useState<string>(graphTypes.DISTRIBUTION);\r\n  // const [displayLevel, setDisplayLevel] = useState(1);\r\n  const {\r\n    expectedDamages,\r\n    // expectedPersistentDamages,\r\n    damageChart,\r\n    // persistentDamageChart,\r\n    byLevelDamageChart,\r\n    // byLevelPerDamageChart,\r\n  } = useGenerateGraphs(graphType);\r\n  // const [perMulti, setPerMulti] = useState(2);\r\n  const isBigEnough = useMediaQuery((theme: any) => {\r\n    return theme.breakpoints.up(\"sm\");\r\n  });\r\n\r\n  let height = 500 + expectedDamages.length * 19;\r\n  let singleLevelHeight = height;\r\n  if (graphType === graphTypes.DISTRIBUTION) {\r\n    singleLevelHeight += expectedDamages.length * 19;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper sx={{ p: 1, my: 2 }}>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={showByLevel}\r\n                  onChange={() => setShowByLevel(!showByLevel)}\r\n                />\r\n              }\r\n              label={isBigEnough ? \"Display By Level Graph\" : \"By Level Graph\"}\r\n              // sx={{ background: \"lightgrey\", width: 1 }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Upload byLevel={true} />\r\n          </Grid>\r\n        </Grid>\r\n        <Collapse in={showByLevel}>\r\n          <ByLevelInput />\r\n          <JointInput />\r\n          <Box sx={{ height }}>{byLevelDamageChart}</Box>\r\n        </Collapse>\r\n      </Paper>\r\n\r\n      <Paper sx={{ p: 1, my: 2 }}>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={showSingleLevel}\r\n                  onChange={() => setShowSingleLevel(!showSingleLevel)}\r\n                />\r\n              }\r\n              label={\r\n                isBigEnough\r\n                  ? \"Display Single Level Graph\"\r\n                  : \"Single Level Graph\"\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Upload byLevel={false} />\r\n          </Grid>\r\n        </Grid>\r\n        <Collapse in={showSingleLevel}>\r\n          <SingleLevelInput />\r\n          {/* <JointInput /> */}\r\n          <Typography>Expected damage: </Typography>\r\n          {expectedDamages}\r\n          <Select\r\n            value={graphType}\r\n            onChange={(e) => setGraphType(e.target.value)}\r\n          >\r\n            {makeOptions(graphTypes)}\r\n          </Select>\r\n\r\n          <Box sx={{ height: singleLevelHeight }}>{damageChart}</Box>\r\n        </Collapse>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\n\r\n// import SendIcon from \"@mui/icons-material/Send\";\r\nimport AutoFixHighIcon from \"@mui/icons-material/AutoFixHigh\";\r\nimport GavelIcon from \"@mui/icons-material/Gavel\";\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport { RootState } from \"../App/store\";\r\nimport {\r\n  selectactivityPathById,\r\n  setActivityPath,\r\n  selectSelectedActivityPath,\r\n  selectParentActivityId,\r\n  activityPathRemoved,\r\n} from \"./RoutineSlice/routineSlice\";\r\nimport { activityTypes } from \"../Model/types\";\r\nimport { MAPvalues } from \"../Model/defaults\";\r\n\r\nexport const ActivityPathStub = ({\r\n  id,\r\n  level,\r\n  displayChildren = true,\r\n}: {\r\n  id: number;\r\n  level: number;\r\n  displayChildren?: boolean;\r\n}) => {\r\n  const { parentId, routineId, name, condition, type, MAP, apIds } =\r\n    useAppSelector((state: RootState) => selectactivityPathById(state, id)!);\r\n  const selectedActivityPath = useAppSelector(selectSelectedActivityPath);\r\n  const parentActivityId = useAppSelector(selectParentActivityId);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  let icon = <GavelIcon />;\r\n  switch (type) {\r\n    case activityTypes.SAVE:\r\n      icon = <AutoFixHighIcon />;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const showMAP = type !== activityTypes.SAVE && MAPvalues[MAP] !== 0;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        disablePadding\r\n        secondaryAction={\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"delete\"\r\n            onClick={() =>\r\n              dispatch(activityPathRemoved({ id, parentId, routineId }))\r\n            }\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        }\r\n      >\r\n        <ListItemButton\r\n          selected={selectedActivityPath === id || parentActivityId === id}\r\n          sx={{ pl: 4 * level + 2 }}\r\n          onClick={() => dispatch(setActivityPath(id))}\r\n        >\r\n          {/* {displayCondition ? \"Conditions\" : \"\"} */}\r\n          <ListItemIcon>{icon}</ListItemIcon>\r\n          <ListItemText\r\n            primary={name + \" \" + (showMAP ? MAPvalues[MAP] : \"\")}\r\n            secondary={level > 0 ? condition : \"\"}\r\n          />\r\n        </ListItemButton>\r\n      </ListItem>\r\n      {displayChildren\r\n        ? apIds.map((apId) => (\r\n            <ActivityPathStub key={apId} id={apId} level={level + 1} />\r\n          ))\r\n        : \"\"}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  SelectChangeEvent,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  label: string;\r\n  value: any;\r\n  onChange: (e: SelectChangeEvent) => void;\r\n  children: JSX.Element[];\r\n  fullWidth?: boolean;\r\n};\r\n\r\nconst TooltipSelect = ({\r\n  title,\r\n  label,\r\n  value,\r\n  onChange,\r\n  children,\r\n  fullWidth = false,\r\n}: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Tooltip\r\n      title={title}\r\n      open={open}\r\n      onFocus={() => {\r\n        console.log(\"focus1\");\r\n        setOpen(false);\r\n      }}\r\n    >\r\n      <FormControl\r\n        fullWidth={fullWidth}\r\n        size=\"small\"\r\n        onMouseEnter={() => setOpen(true)}\r\n        onMouseLeave={() => setOpen(false)}\r\n        onFocus={() => setOpen(false)}\r\n        sx={{ minWidth: 100 }}\r\n      >\r\n        <InputLabel>{label}</InputLabel>\r\n        <Select label={label} value={value} onChange={onChange}>\r\n          {children}\r\n        </Select>\r\n      </FormControl>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport { TooltipSelect };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Grid, IconButton, Tooltip } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport { levelOptions } from \"../../Model/options\";\r\nimport { Adjustment } from \"../RoutineSlice/RoutineTypes\";\r\nimport { TooltipSelect } from \"../../TooltipSelect\";\r\n\r\ntype Adjustments = {\r\n  [level: number]: number;\r\n};\r\ntype Entry = [number, string];\r\n\r\nexport const generateEntries = (adjustments: Adjustments) => {\r\n  let currentValue = 0;\r\n  const entries: Entry[] = [];\r\n  for (let level = 1; level <= 20; level++) {\r\n    if (currentValue !== adjustments[level]) {\r\n      entries.push([level, (adjustments[level] - currentValue).toString()]);\r\n      currentValue = adjustments[level];\r\n    }\r\n  }\r\n  return entries;\r\n};\r\n\r\nconst generateAdjustments = (entries: Entry[]) => {\r\n  const adjustments: Adjustments = {};\r\n  let currentValue = 0;\r\n  let total = 0;\r\n  let currentIndex = 0;\r\n  // console.log(entries);\r\n  for (let level = 1; level <= 20; level++) {\r\n    if (entries[currentIndex] && entries[currentIndex][0] === level) {\r\n      // console.log(\"here\");\r\n      currentValue = parseInt(entries[currentIndex][1]);\r\n      if (!currentValue) currentValue = 0;\r\n      currentIndex++;\r\n      total += currentValue;\r\n    }\r\n    adjustments[level] = total;\r\n  }\r\n  return adjustments;\r\n};\r\n\r\nexport const adjustmentsFromLevelChange = (\r\n  entries: Entry[],\r\n  index: number,\r\n  newLevel: number\r\n) => {\r\n  entries[index] = [newLevel, entries[index][1]];\r\n  entries.sort((a, b) => a[0] - b[0]);\r\n  return generateAdjustments(entries);\r\n};\r\n\r\nexport const adjustmentsFromValueChange = (\r\n  entries: Entry[],\r\n  index: number,\r\n  newValue: string\r\n) => {\r\n  entries[index] = [entries[index][0], newValue];\r\n  return generateAdjustments(entries);\r\n};\r\n\r\nexport const adjustmentsFromNewEntry = (entries: Entry[]) => {\r\n  let lastValue: Entry =\r\n    entries.length > 0 ? entries[entries.length - 1] : [0, \"0\"];\r\n  entries.push([lastValue[0] + 1, (0).toString()]);\r\n  return generateAdjustments(entries);\r\n};\r\n\r\nexport const LevelList = (\r\n  name: string,\r\n  dispatch: Dispatch<any>,\r\n  action: ActionCreatorWithPayload<any, string>,\r\n  id: number,\r\n  adjustments: Adjustment\r\n) => {\r\n  const baseEntries = generateEntries(adjustments);\r\n  let [entries, setEntries] = useState(baseEntries);\r\n  let be = JSON.stringify(baseEntries);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => setEntries(baseEntries), [be]);\r\n  let levelList = [];\r\n\r\n  for (let i = 0; i < entries.length; i++) {\r\n    levelList.push(\r\n      <Grid item key={i}>\r\n        <TooltipSelect\r\n          title=\"The level where this bonus is added, all later levels will have this bonus added. Please only add 1 bonus per level. Bonuses of 0 are removed.\"\r\n          label=\"Level\"\r\n          value={entries[i][0]}\r\n          onChange={(e) =>\r\n            dispatch(\r\n              action({\r\n                id,\r\n                changes: {\r\n                  [name]: adjustmentsFromLevelChange(\r\n                    entries,\r\n                    i,\r\n                    Number(e.target.value)\r\n                  ),\r\n                },\r\n              })\r\n            )\r\n          }\r\n        >\r\n          {levelOptions}\r\n        </TooltipSelect>\r\n\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Bonus\"\r\n          sx={{ width: \"9ch\" }}\r\n          value={entries[i][1]}\r\n          onChange={(e) => {\r\n            let newEntries = entries.slice();\r\n            newEntries[i] = [newEntries[i][0], e.target.value];\r\n            setEntries(newEntries);\r\n            e.target.focus();\r\n          }}\r\n          onBlur={() => {\r\n            let newEntries = entries.slice();\r\n            for (let ni = 0; ni < entries.length; ni++) {\r\n              newEntries[ni] = [\r\n                newEntries[ni][0],\r\n                parseInt(newEntries[ni][1]).toString(),\r\n              ];\r\n            }\r\n            setEntries(newEntries);\r\n            dispatch(\r\n              action({\r\n                id,\r\n                changes: {\r\n                  [name]: generateAdjustments(entries),\r\n                },\r\n              })\r\n            );\r\n          }}\r\n          inputProps={{\r\n            step: 1,\r\n            min: -100,\r\n            max: 100,\r\n            type: \"number\",\r\n          }}\r\n        />\r\n        {/* <input\r\n          type=\"number\"\r\n          value={entries[i][1]}\r\n          onChange={(e) => {\r\n            let newEntries = entries.slice();\r\n            newEntries[i][1] = e.target.value;\r\n            setEntries(newEntries);\r\n            e.target.focus();\r\n          }}\r\n          onBlur={(e) =>\r\n            dispatch(\r\n              action({\r\n                id,\r\n                changes: {\r\n                  [name]: generateAdjustments(entries),\r\n                },\r\n              })\r\n            )\r\n          }\r\n        /> */}\r\n      </Grid>\r\n    );\r\n  }\r\n  levelList.push(\r\n    <Grid item key=\"addButton\">\r\n      <Tooltip title=\"Add a bonus at a specified level.\">\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"Add button\"\r\n          onClick={() =>\r\n            dispatch(\r\n              action({\r\n                id,\r\n                changes: {\r\n                  [name]: adjustmentsFromNewEntry(entries),\r\n                },\r\n              })\r\n            )\r\n          }\r\n        >\r\n          <AddIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n  return levelList;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../App/hooks\";\r\nimport { LevelList } from \"./LevelList\";\r\nimport {\r\n  damageRemoved,\r\n  damageUpdated,\r\n  selectdamageById,\r\n} from \"../RoutineSlice/routineSlice\";\r\nimport {\r\n  damageConditionOptions,\r\n  damageTrendOptions,\r\n  damageTypeOptions,\r\n  diceSizeOptions,\r\n  dieTrendOptions,\r\n  makeOptions,\r\n  materialOptions,\r\n  multiplierOptions,\r\n} from \"../../Model/options\";\r\nimport {\r\n  DamageCond,\r\n  DamageTrend,\r\n  damageTrends,\r\n  DamageType,\r\n  DieTrend,\r\n  whenConditions,\r\n} from \"../../Model/types\";\r\nimport { RootState } from \"../../App/store\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Collapse,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  ListItemButton,\r\n  Select,\r\n  Slider,\r\n  Switch,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { Box } from \"@mui/system\";\r\nimport { TooltipSelect } from \"../../TooltipSelect\";\r\nimport { Adjustment } from \"../RoutineSlice/RoutineTypes\";\r\nimport { damageTrendValues, dieTrendValues } from \"../../Model/defaults\";\r\n\r\n// const useStyles = makeStyles({\r\n//   transition: theme.transitions.create([\"background\", \"background-color\"], {\r\n//     duration: theme.transitions.duration.complex,\r\n//   }),\r\n//   \"&:hover\": {\r\n//     backgroundColor: \"#BBB\",\r\n//   },\r\n// });\r\nexport const Damage = ({ parentId, id }: { parentId: number; id: number }) => {\r\n  const {\r\n    damageCondition,\r\n    damageType,\r\n    material,\r\n    persistent,\r\n    multiplier,\r\n    damageWhen,\r\n\r\n    dieTrend,\r\n    dieAdjustments,\r\n    diceSize,\r\n    fatal,\r\n    fatalDie,\r\n    damageTrend,\r\n    damageAdjustments,\r\n  } = useAppSelector((state: RootState) => selectdamageById(state, id)!);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [showContent, setShowContent] = useState(false);\r\n\r\n  const dieLevelList = LevelList(\r\n    \"dieAdjustments\",\r\n    dispatch,\r\n    damageUpdated,\r\n    id,\r\n    dieAdjustments\r\n  );\r\n\r\n  const damageLevelList = LevelList(\r\n    \"damageAdjustments\",\r\n    dispatch,\r\n    damageUpdated,\r\n    id,\r\n    damageAdjustments\r\n  );\r\n\r\n  const damageTrendList = damageTrend.map((dt, index) => {\r\n    return (\r\n      <Grid item key={index}>\r\n        <TooltipSelect\r\n          title=\"Adds bonus damage that applies the appropriate amount of damage at appropriate levels. For 'Weapon' and 'Precise Strike' the bonus is the number of dice.\"\r\n          label=\"Damage Trend\"\r\n          value={dt}\r\n          onChange={(e) => {\r\n            let newdt = damageTrend.slice();\r\n            if (e.target.value === damageTrends.NONE) {\r\n              newdt.splice(index, 1);\r\n            } else {\r\n              newdt[index] = e.target.value as DamageTrend;\r\n            }\r\n            dispatch(\r\n              damageUpdated({\r\n                id,\r\n                changes: { damageTrend: newdt },\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          {damageTrendOptions}\r\n        </TooltipSelect>\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DamageDisplay\r\n        damageInfo={{\r\n          damageCondition,\r\n          dieTrend,\r\n          dieAdjustments,\r\n          diceSize,\r\n          fatal,\r\n          fatalDie,\r\n          damageTrend,\r\n          damageAdjustments,\r\n          persistent,\r\n          damageType,\r\n          multiplier,\r\n        }}\r\n        onClick={() => setShowContent(!showContent)}\r\n        id={id}\r\n        parentId={parentId}\r\n      />\r\n      <Collapse in={showContent}>\r\n        <Box\r\n          sx={{\r\n            mt: 1,\r\n            p: 1,\r\n            mb: 1,\r\n            \"&:hover\": { bgcolor: \"rgb(50,50,50,.05)\" },\r\n          }}\r\n        >\r\n          {/* <Divider textAlign=\"left\" sx={{ mt: 0, mb: 1 }}></Divider> */}\r\n          <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ mb: 1 }}>\r\n            {/* <Grid item xs=\"auto\">\r\n              <Typography>Apply damage </Typography>\r\n            </Grid> */}\r\n\r\n            <Grid item xs>\r\n              <TooltipSelect\r\n                fullWidth={true}\r\n                title=\"When this damage instance applies. For example: for extra damage on a critical hit, like with deadly or fatal weapons, use 'On Crit'. Don't forget to change when using a save instead of an attack.\"\r\n                value={damageCondition}\r\n                label=\"Condition\"\r\n                onChange={(e) =>\r\n                  dispatch(\r\n                    damageUpdated({\r\n                      id,\r\n                      changes: { damageCondition: e.target.value },\r\n                    })\r\n                  )\r\n                }\r\n              >\r\n                {damageConditionOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <FormControl size=\"small\" fullWidth>\r\n                <InputLabel id=\"damage-when-input\">When Target</InputLabel>\r\n                <Select\r\n                  labelId=\"damage-when-input\"\r\n                  id=\"damage-when\"\r\n                  multiple\r\n                  value={damageWhen}\r\n                  label=\"When Target\"\r\n                  renderValue={(selected) => selected.join(\" or \")}\r\n                  onChange={(e) =>\r\n                    dispatch(\r\n                      damageUpdated({\r\n                        id,\r\n                        changes: { damageWhen: e.target.value },\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  {makeOptions(whenConditions)}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"How much the damage is multiplied by. For example: if you want to average the damage of two different attacks, add both and set the multiplier to .5\"\r\n                value={multiplier}\r\n                label=\"Multiplier\"\r\n                onChange={(e) =>\r\n                  dispatch(\r\n                    damageUpdated({\r\n                      id,\r\n                      changes: { multiplier: Number(e.target.value) },\r\n                    })\r\n                  )\r\n                }\r\n              >\r\n                {multiplierOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl size=\"small\">\r\n                <InputLabel id=\"damage-type-input\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"damage-type-input\"\r\n                  id=\"damage-type\"\r\n                  value={damageType}\r\n                  label=\"Type\"\r\n                  onChange={(e) =>\r\n                    dispatch(\r\n                      damageUpdated({\r\n                        id,\r\n                        changes: { damageType: e.target.value },\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  {damageTypeOptions}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl size=\"small\">\r\n                <InputLabel id=\"damage-material-input\">Material</InputLabel>\r\n                <Select\r\n                  labelId=\"damage-material-input\"\r\n                  id=\"damage-material\"\r\n                  value={material}\r\n                  label=\"Material\"\r\n                  onChange={(e) =>\r\n                    dispatch(\r\n                      damageUpdated({\r\n                        id,\r\n                        changes: { material: e.target.value },\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  {materialOptions}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"If this damage is persistent. Persistent damage is multiplied by the 'Persistent Damage Multiplier' above the By Level graph.\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={persistent}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          damageUpdated({\r\n                            id,\r\n                            changes: { persistent: e.target.checked },\r\n                          })\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Persistent\"\r\n                />\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider textAlign=\"left\" sx={{ mt: 1, mb: 1 }}>\r\n            Dice\r\n          </Divider>\r\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"When dice are added to the damage. At each level in (), 1 die of the selected size is added to the damage\"\r\n                value={dieTrend}\r\n                label=\"Damage Dice\"\r\n                onChange={(e) =>\r\n                  dispatch(\r\n                    damageUpdated({\r\n                      id,\r\n                      changes: { dieTrend: e.target.value },\r\n                    })\r\n                  )\r\n                }\r\n              >\r\n                {dieTrendOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            {dieLevelList}\r\n            <Grid item>\r\n              <FormControl size=\"small\">\r\n                <InputLabel id=\"dice-size-input\">Die Size</InputLabel>\r\n                <Select\r\n                  labelId=\"dice-size-input\"\r\n                  id=\"dice-size\"\r\n                  value={diceSize}\r\n                  label=\"Die Size\"\r\n                  onChange={(e) =>\r\n                    dispatch(\r\n                      damageUpdated({\r\n                        id,\r\n                        changes: { diceSize: Number(e.target.value) },\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  {diceSizeOptions}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"For Fatal. If this damage uses a different die size on a crit. For Fatal you still need to add another die with the 'On Crit' Condition.\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={fatal}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          damageUpdated({\r\n                            id,\r\n                            changes: { fatal: e.target.checked },\r\n                          })\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"On Crit Die\"\r\n                />\r\n              </Tooltip>\r\n            </Grid>\r\n            {fatal ? (\r\n              <Grid item>\r\n                <FormControl size=\"small\">\r\n                  <InputLabel id=\"fatal-size-input\">Die Size</InputLabel>\r\n                  <Select\r\n                    labelId=\"fatal-size-input\"\r\n                    id=\"fatal-size\"\r\n                    value={fatalDie}\r\n                    label=\"Die Size\"\r\n                    onChange={(e) =>\r\n                      dispatch(\r\n                        damageUpdated({\r\n                          id,\r\n                          changes: { fatalDie: Number(e.target.value) },\r\n                        })\r\n                      )\r\n                    }\r\n                  >\r\n                    {diceSizeOptions}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Divider textAlign=\"left\" sx={{ mt: 1, mb: 1 }}>\r\n            Static Damage\r\n          </Divider>\r\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n            {damageTrendList}\r\n            <Grid item>\r\n              <Tooltip title=\"Adds bonus damage that applies the appropriate amount of damage at appropriate levels. For 'Weapon' and 'Precise Strike' the bonus is the number of dice.\">\r\n                <Button\r\n                  onClick={() => {\r\n                    let newdt = damageTrend.slice();\r\n                    newdt.push(damageTrends.NONE);\r\n                    dispatch(\r\n                      damageUpdated({\r\n                        id,\r\n                        changes: {\r\n                          damageTrend: newdt,\r\n                        },\r\n                      })\r\n                    );\r\n                  }}\r\n                >\r\n                  Add damage scaling\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n            {damageLevelList}\r\n          </Grid>\r\n          {/* <Divider textAlign=\"left\" sx={{ mt: 1, mb: 1 }}></Divider> */}\r\n        </Box>\r\n      </Collapse>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ninterface PropsType {\r\n  damageInfo: {\r\n    damageCondition: DamageCond;\r\n    dieTrend: DieTrend;\r\n    dieAdjustments: Adjustment;\r\n    diceSize: number;\r\n    fatal: boolean;\r\n    fatalDie: number;\r\n    damageTrend: DamageTrend[];\r\n    damageAdjustments: Adjustment;\r\n    persistent: boolean;\r\n    damageType: DamageType;\r\n    multiplier: number;\r\n  };\r\n  onClick: any;\r\n  id: number;\r\n  parentId: number;\r\n}\r\nconst DamageDisplay = ({\r\n  damageInfo: {\r\n    damageCondition,\r\n    dieTrend,\r\n    dieAdjustments,\r\n    diceSize,\r\n    fatal,\r\n    fatalDie,\r\n    damageTrend,\r\n    damageAdjustments,\r\n    persistent,\r\n    damageType,\r\n    multiplier,\r\n  },\r\n  onClick,\r\n  id,\r\n  parentId,\r\n}: PropsType) => {\r\n  const [level, setLevel] = useState(20);\r\n  const dispatch = useAppDispatch();\r\n  let diceNumber = dieTrendValues[dieTrend][level] + dieAdjustments[level];\r\n  let staticDamage = damageAdjustments[level];\r\n  for (let dt of damageTrend) {\r\n    staticDamage += damageTrendValues[dt][level];\r\n  }\r\n  let averageDamage = staticDamage + ((diceSize + 1) / 2) * diceNumber;\r\n  let fatalString =\r\n    \" (\" + diceNumber.toString() + \"d\" + fatalDie.toString() + \" on Crit)\";\r\n\r\n  let damageString =\r\n    damageCondition +\r\n    \": \" +\r\n    diceNumber.toString() +\r\n    \"d\" +\r\n    diceSize.toString() +\r\n    (fatal ? fatalString : \"\") +\r\n    (staticDamage ? \" + \" + staticDamage.toString() : \"\") +\r\n    \" (avg: \" +\r\n    averageDamage.toString() +\r\n    \") \" +\r\n    (persistent ? \"persistent \" : \"\") +\r\n    damageType +\r\n    (multiplier !== 1 ? \" x\" + multiplier : \"\");\r\n\r\n  return (\r\n    <Grid container alignItems=\"center\" columnSpacing={{ xs: 2 }}>\r\n      <Grid item xs=\"auto\">\r\n        <IconButton\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={(e) => {\r\n            dispatch(damageRemoved({ id, parentId }));\r\n          }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item xs=\"auto\" sx={{ ml: -2 }}>\r\n        <ListItemButton onClick={onClick}>\r\n          <Typography variant=\"h6\">{\"Damage \"}</Typography>\r\n        </ListItemButton>\r\n      </Grid>\r\n      <Grid item sx={{ ml: -2, mt: 1, width: 100 }}>\r\n        <Slider\r\n          size=\"small\"\r\n          value={level}\r\n          min={1}\r\n          max={20}\r\n          marks\r\n          // @ts-ignore\r\n          onChange={(_, nv) => setLevel(nv)}\r\n          valueLabelDisplay=\"auto\"\r\n          // getAriaValueText={(v) => `${v}`}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography component=\"span\">\r\n          {damageString + \" at level \" + level.toString()}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../App/hooks\";\r\n\r\nimport {\r\n  Collapse,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  ListItemButton,\r\n  Select,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nimport {\r\n  conditionOptions,\r\n  effectTypeOptions,\r\n  makeOptions,\r\n} from \"../../Model/options\";\r\nimport { RootState } from \"../../App/store\";\r\nimport {\r\n  effectRemoved,\r\n  effectUpdated,\r\n  selecteffectById,\r\n} from \"../RoutineSlice/routineSlice\";\r\nimport { effectValueTypes, whenConditions } from \"../../Model/types\";\r\nimport { TooltipSelect } from \"../../TooltipSelect\";\r\n\r\nexport const Effect = ({ parentId, id }: { parentId: number; id: number }) => {\r\n  const {\r\n    effectCondition,\r\n    effectType,\r\n    effectValue,\r\n    startLevel,\r\n    endLevel,\r\n    damageWhen,\r\n  } = useAppSelector((state: RootState) => selecteffectById(state, id)!);\r\n  const dispatch = useAppDispatch();\r\n  let [value, setValue] = useState(effectValue ? effectValue.toString() : \"0\");\r\n  // @ts-ignore\r\n  const showValue = Object.values(effectValueTypes).includes(effectType);\r\n  let [validLevels, setValidLevels] = useState([startLevel, endLevel]);\r\n  useEffect(\r\n    () => setValidLevels([startLevel, endLevel]),\r\n    [startLevel, endLevel]\r\n  );\r\n  const [showContent, setShowContent] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container columnSpacing={{ xs: 2 }} alignItems=\"center\">\r\n        <Grid item xs=\"auto\">\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            color=\"primary\"\r\n            onClick={(e) => {\r\n              dispatch(effectRemoved({ id, parentId }));\r\n            }}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs=\"auto\" sx={{ ml: -2 }}>\r\n          <ListItemButton onClick={() => setShowContent(!showContent)}>\r\n            <Typography variant=\"h6\">Effect</Typography>\r\n          </ListItemButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            {effectCondition} {\": \"}\r\n            {effectType} {showValue ? effectValue : \"\"}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Collapse in={showContent}>\r\n        <Box\r\n          sx={{\r\n            p: 1,\r\n            mb: 1,\r\n            \"&:hover\": { bgcolor: \"rgb(50,50,50,.05)\" },\r\n          }}\r\n        >\r\n          <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ mb: 1 }}>\r\n            <Grid item xs>\r\n              <TooltipSelect\r\n                fullWidth={true}\r\n                title=\"When this effect applies, depending on the result of this activities roll. For example the spell 'fear' should have 'On Success' 'Frightened' '1', 'On Failure' 'Frightened' '2' etc.\"\r\n                value={effectCondition}\r\n                label=\"Condition\"\r\n                onChange={(e) =>\r\n                  dispatch(\r\n                    effectUpdated({\r\n                      id,\r\n                      changes: { effectCondition: e.target.value },\r\n                    })\r\n                  )\r\n                }\r\n              >\r\n                {conditionOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <FormControl size=\"small\" fullWidth>\r\n                <InputLabel id=\"damage-when-input\">When Target</InputLabel>\r\n                <Select\r\n                  labelId=\"damage-when-input\"\r\n                  id=\"damage-when\"\r\n                  multiple\r\n                  value={damageWhen}\r\n                  label=\"When Target\"\r\n                  renderValue={(selected) => selected.join(\" or \")}\r\n                  onChange={(e) =>\r\n                    dispatch(\r\n                      effectUpdated({\r\n                        id,\r\n                        changes: { damageWhen: e.target.value },\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  {makeOptions(whenConditions)}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"The effect that is applied to the target when 'Condition' is met.\"\r\n                value={effectType}\r\n                label=\"Effect\"\r\n                onChange={(e) =>\r\n                  dispatch(\r\n                    effectUpdated({\r\n                      id,\r\n                      changes: { effectType: e.target.value },\r\n                    })\r\n                  )\r\n                }\r\n              >\r\n                {effectTypeOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n\r\n            {showValue ? (\r\n              <Grid item>\r\n                <TextField\r\n                  size=\"small\"\r\n                  label=\"Value\"\r\n                  sx={{ width: \"9ch\" }}\r\n                  value={value}\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                    e.target.focus();\r\n                  }}\r\n                  onBlur={() => {\r\n                    let newVal = parseInt(value);\r\n                    if (Number.isNaN(newVal)) newVal = 0;\r\n                    setValue(newVal.toString());\r\n                    dispatch(\r\n                      effectUpdated({\r\n                        id,\r\n                        changes: {\r\n                          effectValue: newVal,\r\n                        },\r\n                      })\r\n                    );\r\n                  }}\r\n                  inputProps={{\r\n                    step: 1,\r\n                    min: 0,\r\n                    max: 10,\r\n                    type: \"number\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <Grid item sx={{ px: 2 }}>\r\n              <Typography align=\"center\">\r\n                Valid Levels: {startLevel} to {endLevel}\r\n              </Typography>\r\n              <Slider\r\n                size=\"small\"\r\n                getAriaLabel={() => \"Valid levels\"}\r\n                value={validLevels}\r\n                min={1}\r\n                max={20}\r\n                marks\r\n                // @ts-ignore\r\n                onChange={(e, nv: number[]) => setValidLevels(nv)}\r\n                onBlur={() =>\r\n                  dispatch(\r\n                    effectUpdated({\r\n                      id,\r\n                      changes: {\r\n                        startLevel: validLevels[0],\r\n                        endLevel: validLevels[1],\r\n                      },\r\n                    })\r\n                  )\r\n                }\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={(v) => `${v}`}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Collapse>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../App/hooks\";\r\n\r\nimport { LevelList } from \"./LevelList\";\r\nimport {\r\n  activityPathContinued,\r\n  damageCreated,\r\n  setNewActivityParent,\r\n} from \"../RoutineSlice/routineSlice\";\r\nimport {\r\n  activityTypeOptions,\r\n  profTrendOptions,\r\n  conditionOptions,\r\n  defenseOptions,\r\n  MAPOptions,\r\n  rollOptions,\r\n  statTrendOptions,\r\n  itemBTrendOptions,\r\n} from \"../../Model/options\";\r\nimport {\r\n  activityPathRemoved,\r\n  activityPathUpdated,\r\n  selectactivityPathById,\r\n} from \"../RoutineSlice/routineSlice\";\r\nimport {\r\n  activityTypes,\r\n  ItemTrend,\r\n  MAP,\r\n  ProfTrend,\r\n  StatTrend,\r\n} from \"../../Model/types\";\r\nimport { Damage } from \"./Damage\";\r\nimport { Effect } from \"./Effect\";\r\nimport { effectCreated } from \"../RoutineSlice/routineSlice\";\r\nimport { RootState } from \"../../App/store\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  List,\r\n  ListItemButton,\r\n  ListSubheader,\r\n  Paper,\r\n  Select,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ActivityPathStub } from \"../ActivityPathStub\";\r\nimport { TooltipSelect } from \"../../TooltipSelect\";\r\nimport {\r\n  itemTrendValues,\r\n  MAPvalues,\r\n  profTrendValues,\r\n  statTrendValues,\r\n} from \"../../Model/defaults\";\r\nimport { Adjustment } from \"../RoutineSlice/RoutineTypes\";\r\nimport { Box } from \"@mui/system\";\r\nimport ReactGA from \"react-ga4\";\r\nReactGA.initialize(\"G-JR2YK097BG\");\r\n\r\nexport const ActivityPath = ({\r\n  id,\r\n  level = 0,\r\n  open = false,\r\n}: {\r\n  id: number;\r\n  level?: number;\r\n  open?: boolean;\r\n}) => {\r\n  const {\r\n    parentId,\r\n    routineId,\r\n    condition,\r\n\r\n    name,\r\n\r\n    type,\r\n    MAP,\r\n\r\n    damages,\r\n    effects,\r\n    apIds,\r\n  } = useAppSelector((state: RootState) => selectactivityPathById(state, id)!);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  let [tempName, setTempName] = useState(name);\r\n  useEffect(() => setTempName(name), [name]);\r\n\r\n  const [showContent, setShowContent] = useState(open);\r\n\r\n  const showMAP = type !== activityTypes.SAVE && MAPvalues[MAP] !== 0;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper sx={{ my: 2, p: 1, ml: level * 2 }}>\r\n        <Grid container columnSpacing={{ xs: 1, sm: 2 }} alignItems=\"center\">\r\n          <Grid item xs=\"auto\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              onClick={(e) => {\r\n                dispatch(activityPathRemoved({ id, parentId, routineId }));\r\n              }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item xs=\"auto\">\r\n            <ListItemButton onClick={() => setShowContent(!showContent)}>\r\n              <Typography variant=\"h6\">Activity</Typography>\r\n            </ListItemButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>\r\n              {parentId !== undefined ? condition + \": \" : \"\"}\r\n              {name}\r\n              {/* {type} */}\r\n              {showMAP ? \" \" + MAPvalues[MAP] : \"\"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Collapse in={showContent} mountOnEnter>\r\n          <Grid container spacing={2} sx={{ mt: 1, px: 1 }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Activity Name\"\r\n                placeholder=\"Fighter - Strike - d6 agile\"\r\n                value={tempName}\r\n                onChange={(e) => {\r\n                  setTempName(e.target.value);\r\n                }}\r\n                onBlur={() =>\r\n                  dispatch(\r\n                    activityPathUpdated({ id: id, changes: { name: tempName } })\r\n                  )\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            {parentId !== undefined ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <TooltipSelect\r\n                  title='Depending on the roll of the parent activity, should this activity happen. For example: to add another strike only when you hit with the previous one, have the second strike be a child of the first with the condition \"Success or Better\"'\r\n                  value={condition}\r\n                  label=\"Condition\"\r\n                  onChange={(e) =>\r\n                    dispatch(\r\n                      activityPathUpdated({\r\n                        id,\r\n                        changes: { condition: e.target.value },\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  {conditionOptions}\r\n                </TooltipSelect>\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Roll id={id} />\r\n          {/* <List subheader={<ListSubheader>Damages</ListSubheader>}> */}\r\n\r\n          {damages.map((damageId) => (\r\n            <Damage parentId={id} id={damageId} key={damageId} />\r\n          ))}\r\n          {/* </List> */}\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={() => dispatch(damageCreated({ parentId: id }))}\r\n          >\r\n            Add Damage\r\n          </Button>\r\n\r\n          {effects.map((effectId) => (\r\n            <Effect parentId={id} id={effectId} key={effectId} />\r\n          ))}\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={() => dispatch(effectCreated({ parentId: id }))}\r\n          >\r\n            Add Effect\r\n          </Button>\r\n\r\n          <List subheader={<ListSubheader>Child Activities</ListSubheader>}>\r\n            {apIds.map((apId) => (\r\n              <ActivityPathStub\r\n                key={apId}\r\n                id={apId}\r\n                level={0}\r\n                displayChildren={false}\r\n              />\r\n            ))}\r\n          </List>\r\n\r\n          <Grid container spacing={{ xs: 1 }} sx={{ my: 2, p: 1 }}>\r\n            <Grid item container xs={6} justifyContent=\"center\">\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  window.location.href = \"#routine-activity-list\";\r\n                  ReactGA.event(\"select_content\", {\r\n                    content_type: \"new-activity\",\r\n                    item_id: \"continue-activity\",\r\n                  });\r\n                  dispatch(\r\n                    activityPathContinued({\r\n                      parentId: id,\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                Continue Attack\r\n              </Button>\r\n            </Grid>\r\n            <Grid item container xs={6} justifyContent=\"center\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  window.location.href = \"#routine-activity-list\";\r\n                  dispatch(setNewActivityParent({ parentId: id }));\r\n                }}\r\n              >\r\n                New Child Activity\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Collapse>\r\n      </Paper>\r\n      {apIds.map((apId) => (\r\n        <ActivityPath key={apId} id={apId} level={level + 1} />\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Roll = ({ id }: { id: number }) => {\r\n  const {\r\n    rollType,\r\n    type,\r\n    profTrend,\r\n    statTrend,\r\n    itemTrend,\r\n    bonusAdjustments,\r\n    MAP,\r\n    targetType,\r\n  } = useAppSelector((state: RootState) => selectactivityPathById(state, id)!);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [showContent, setShowContent] = useState(false);\r\n\r\n  let isSave = type === activityTypes.SAVE;\r\n\r\n  const bonusLevelList = LevelList(\r\n    \"bonusAdjustments\",\r\n    dispatch,\r\n    activityPathUpdated,\r\n    id,\r\n    bonusAdjustments\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <RollBonusDisplay\r\n        rollInfo={{\r\n          isSave,\r\n          profTrend,\r\n          statTrend,\r\n          itemTrend,\r\n          MAP,\r\n          bonusAdjustments,\r\n        }}\r\n        onClick={() => setShowContent(!showContent)}\r\n      />\r\n      <Collapse in={showContent}>\r\n        <Box\r\n          sx={{\r\n            p: 1,\r\n            mb: 1,\r\n            \"&:hover\": { bgcolor: \"rgb(50,50,50,.05)\" },\r\n          }}\r\n        >\r\n          <Grid container spacing={{ xs: 1, sm: 2 }} sx={{}}>\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"Advantage is rolling twice and taking the higher roll, disadvantage is taking the lower\"\r\n                label=\"Roll Type\"\r\n                value={rollType}\r\n                onChange={(e) => {\r\n                  dispatch(\r\n                    activityPathUpdated({\r\n                      id,\r\n                      changes: { rollType: e.target.value },\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                {rollOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl size=\"small\">\r\n                <InputLabel id=\"activity-type-input\">Activity Type</InputLabel>\r\n                <Select\r\n                  labelId=\"activity-type-input\"\r\n                  label=\"Activity Type\"\r\n                  value={type}\r\n                  onChange={(e) => {\r\n                    dispatch(\r\n                      activityPathUpdated({\r\n                        id,\r\n                        changes: { type: e.target.value },\r\n                      })\r\n                    );\r\n                  }}\r\n                >\r\n                  {activityTypeOptions}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"An increase in proficiency (+2) is applied at each level in ()\"\r\n                label=\"Proficiency\"\r\n                value={profTrend}\r\n                onChange={(e) => {\r\n                  dispatch(\r\n                    activityPathUpdated({\r\n                      id,\r\n                      changes: { profTrend: e.target.value },\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                {profTrendOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"Bonuses from the listed ability score are applied at the appropriate levels. An ability score starts at the first value and is increased at levels 5, 10, 15, and 20 or until it reaches the second value listed. 'apex' means a bonus from an apex item is added to that score at the level in ()\"\r\n                label=\"Ability Score\"\r\n                value={statTrend}\r\n                onChange={(e) => {\r\n                  dispatch(\r\n                    activityPathUpdated({\r\n                      id,\r\n                      changes: { statTrend: e.target.value },\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                {statTrendOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"Item bonuses are applied at the levels in ().\"\r\n                label=\"Item Bonus\"\r\n                value={itemTrend}\r\n                onChange={(e) => {\r\n                  dispatch(\r\n                    activityPathUpdated({\r\n                      id,\r\n                      changes: { itemTrend: e.target.value },\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                {itemBTrendOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n            {bonusLevelList}\r\n            {!isSave ? (\r\n              <Grid item>\r\n                <TooltipSelect\r\n                  title=\"The multiple attack penalty that is applied to this attack.\"\r\n                  label=\"MAP\"\r\n                  value={MAP}\r\n                  onChange={(e) => {\r\n                    dispatch(\r\n                      activityPathUpdated({\r\n                        id,\r\n                        changes: { MAP: e.target.value },\r\n                      })\r\n                    );\r\n                  }}\r\n                >\r\n                  {MAPOptions}\r\n                </TooltipSelect>\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Grid item>\r\n              <TooltipSelect\r\n                title=\"What defense is targeted\"\r\n                label=\"Target Defense\"\r\n                value={targetType}\r\n                onChange={(e) => {\r\n                  dispatch(\r\n                    activityPathUpdated({\r\n                      id,\r\n                      changes: { targetType: e.target.value },\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                {defenseOptions}\r\n              </TooltipSelect>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Collapse>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ninterface PropsType {\r\n  rollInfo: {\r\n    isSave: boolean;\r\n    MAP: MAP;\r\n    profTrend: ProfTrend;\r\n    statTrend: StatTrend;\r\n    itemTrend: ItemTrend;\r\n    bonusAdjustments: Adjustment;\r\n  };\r\n  onClick: any;\r\n}\r\nconst RollBonusDisplay = ({\r\n  rollInfo: { isSave, MAP, profTrend, statTrend, itemTrend, bonusAdjustments },\r\n  onClick,\r\n}: PropsType) => {\r\n  const [level, setLevel] = useState(20);\r\n  // const {isSave, MAP, profTrend, statTrend, itemTrend, bonusAdjustments} = rollInfo;\r\n  let totalBonus = 0;\r\n\r\n  // const updateLevel = (newLevel: number) => {\r\n  //   setLevel(newLevel);\r\n  totalBonus = isSave ? 10 : MAPvalues[MAP];\r\n  totalBonus += profTrendValues[profTrend][level];\r\n  totalBonus += statTrendValues[statTrend][level];\r\n  totalBonus += itemTrendValues[itemTrend][level];\r\n  totalBonus += bonusAdjustments[level];\r\n\r\n  // updateLevel(1);\r\n\r\n  return (\r\n    <Grid container columnSpacing={{ xs: 2 }} alignItems=\"center\">\r\n      <Grid item xs=\"auto\">\r\n        <ListItemButton onClick={onClick}>\r\n          <Typography variant=\"h6\">{\"Roll \"}</Typography>\r\n        </ListItemButton>\r\n      </Grid>\r\n      <Grid item sx={{ ml: -2, mt: 1, width: 100 }}>\r\n        <Slider\r\n          size=\"small\"\r\n          value={level}\r\n          min={1}\r\n          max={20}\r\n          marks\r\n          // @ts-ignore\r\n          onChange={(_, nv) => setLevel(nv)}\r\n          valueLabelDisplay=\"auto\"\r\n          // getAriaValueText={(v) => `${v}`}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography>\r\n          {(isSave ? \"DC \" : \" +\") +\r\n            totalBonus.toString() +\r\n            \" at level \" +\r\n            level.toString()}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\nimport {\r\n  emptyActivityPathCreated,\r\n  routineUpdated,\r\n  selectCreateNewActivity,\r\n  selectRoutineById,\r\n  selectSelectedActivityPath,\r\n  setNewActivityParent,\r\n} from \"./RoutineSlice/routineSlice\";\r\nimport { ActivityPathStub } from \"./ActivityPathStub\";\r\nimport { RootState } from \"../App/store\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  List,\r\n  ListSubheader,\r\n  Paper,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { activityTypes } from \"../Model/types\";\r\nimport { Box } from \"@mui/system\";\r\nimport { ActivityPath } from \"./Activity/ActivityPath\";\r\nimport ReactGA from \"react-ga4\";\r\nReactGA.initialize(\"G-JR2YK097BG\");\r\n\r\nfunction SelectedRoutine({ routineId }: { routineId: number }) {\r\n  // const selectedRoutine = useSelector(selectSelectedRoutine);\r\n  const { name, startLevel, endLevel, description, apIds } = useAppSelector(\r\n    (state: RootState) => selectRoutineById(state, routineId)!\r\n  );\r\n  const selectedActivityPath = useAppSelector(selectSelectedActivityPath);\r\n  const createNewActivity = useAppSelector(selectCreateNewActivity);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  let [tempName, setTempName] = useState(name);\r\n  const [tempDescription, setTempDescription] = useState(description);\r\n  let [validLevels, setValidLevels] = useState([startLevel, endLevel]);\r\n  useEffect(() => setTempName(name), [name]);\r\n  useEffect(() => setTempDescription(description), [description]);\r\n  useEffect(\r\n    () => setValidLevels([startLevel, endLevel]),\r\n    [startLevel, endLevel]\r\n  );\r\n\r\n  const displayAllRoutines =\r\n    selectedActivityPath === undefined && !createNewActivity;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper sx={{ my: 2, p: 1 }}>\r\n        <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ p: 1 }}>\r\n          <Grid item xs={12} sm={8} md={12} lg={8}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Routine Name\"\r\n              placeholder=\"Fighter d8 2 strikes\"\r\n              value={tempName}\r\n              onChange={(e) => {\r\n                setTempName(e.target.value);\r\n              }}\r\n              onBlur={() =>\r\n                dispatch(\r\n                  routineUpdated({ id: routineId, changes: { name: tempName } })\r\n                )\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={12} lg={4}>\r\n            <Typography align=\"center\">\r\n              Valid Levels: {startLevel} to {endLevel}\r\n            </Typography>\r\n            <Box sx={{ px: 2 }}>\r\n              <Slider\r\n                getAriaLabel={() => \"Valid levels\"}\r\n                value={validLevels}\r\n                min={1}\r\n                max={20}\r\n                marks\r\n                // @ts-ignore\r\n                onChange={(e, nv: number[]) => setValidLevels(nv)}\r\n                onBlur={() =>\r\n                  dispatch(\r\n                    routineUpdated({\r\n                      id: routineId,\r\n                      changes: {\r\n                        startLevel: validLevels[0],\r\n                        endLevel: validLevels[1],\r\n                      },\r\n                    })\r\n                  )\r\n                }\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={(v) => `${v}`}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              label=\"Routine Description\"\r\n              placeholder=\"A Fighter making two strikes with a longsword. Critical Specialization at 5. 1d6 runes at 8 and 15.\"\r\n              value={tempDescription}\r\n              onChange={(e) => {\r\n                setTempDescription(e.target.value);\r\n              }}\r\n              onBlur={() =>\r\n                dispatch(\r\n                  routineUpdated({\r\n                    id: routineId,\r\n                    changes: { description: tempDescription },\r\n                  })\r\n                )\r\n              }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Paper sx={{ my: 2, p: 1 }}> */}\r\n        <List\r\n          id=\"routine-activity-list\"\r\n          subheader={<ListSubheader>Activities</ListSubheader>}\r\n        >\r\n          {apIds.map((apId) => (\r\n            <ActivityPathStub key={apId} id={apId} level={0} />\r\n          ))}\r\n        </List>\r\n        {/* </Paper> */}\r\n        <Grid container spacing={{ xs: 1 }} sx={{ my: 2, p: 1 }}>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            sm={3}\r\n            md={6}\r\n            lg={3}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Button\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={() => dispatch(setNewActivityParent({ routineId }))}\r\n            >\r\n              Create New Activity\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            sm={3}\r\n            md={6}\r\n            lg={3}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Button\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                ReactGA.event(\"select_content\", {\r\n                  content_type: \"new-activity\",\r\n                  item_id: \"empty-activity\",\r\n                });\r\n                dispatch(emptyActivityPathCreated({ routineId }));\r\n              }}\r\n            >\r\n              New Empty Activity\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            sm={3}\r\n            md={6}\r\n            lg={3}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Button\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                ReactGA.event(\"select_content\", {\r\n                  content_type: \"new-activity\",\r\n                  item_id: \"strike-activity\",\r\n                });\r\n                dispatch(\r\n                  emptyActivityPathCreated({\r\n                    routineId,\r\n                    activityType: activityTypes.STRIKE,\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              New Martial Strike\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            sm={3}\r\n            md={6}\r\n            lg={3}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Button\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                ReactGA.event(\"select_content\", {\r\n                  content_type: \"new-activity\",\r\n                  item_id: \"save-activity\",\r\n                });\r\n                dispatch(\r\n                  emptyActivityPathCreated({\r\n                    routineId,\r\n                    activityType: activityTypes.SAVE,\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              New Caster Save\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Button\r\n        variant=\"outlined\"\r\n        onClick={() =>\r\n          dispatch(activityPathCreated({ routineId, isStrike: false }))\r\n        }\r\n      >\r\n        + Save\r\n      </Button> */}\r\n        {/* <EffectInput /> */}\r\n        {/* </div> */}\r\n      </Paper>\r\n      {displayAllRoutines\r\n        ? apIds.map((apId) => <ActivityPath key={apId} id={apId} level={0} />)\r\n        : \"\"}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n// const NameInput = ({ id, name: baseName }: { id: number; name: string }) => {\r\n//   const dispatch = useDispatch();\r\n//   let [name, setName] = useState(baseName);\r\n//   useEffect(() => setName(baseName), [baseName]);\r\n//   // const name = useSelector((state) => selectRoutineById(state, id)).name;\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <label htmlFor=\"routineName\">Routine Name:</label>\r\n//       <input\r\n//         id=\"routineName\"\r\n//         type=\"text\"\r\n//         placeholder=\"Enter routine name\"\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//         onBlur={() => dispatch(routineUpdated({ id, changes: { name } }))}\r\n//       />\r\n//     </React.Fragment>\r\n//   );\r\n// };\r\n// const DescriptionInput = ({\r\n//   id,\r\n//   description: baseDescription,\r\n// }: {\r\n//   id: number;\r\n//   description: string;\r\n// }) => {\r\n//   const dispatch = useDispatch();\r\n//   const [description, setDescription] = useState(baseDescription);\r\n//   useEffect(() => setDescription(baseDescription), [baseDescription]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <textarea\r\n//         className=\"routineDescription\"\r\n//         id=\"routineDescription\"\r\n//         placeholder=\"Enter routine description\"\r\n//         value={description}\r\n//         onChange={(e) => setDescription(e.target.value)}\r\n//         onBlur={() =>\r\n//           dispatch(routineUpdated({ id, changes: { description } }))\r\n//         }\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default SelectedRoutine;\r\n","import {\r\n  Chip,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  FormControl,\r\n  Grid,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\n\r\nimport {\r\n  routineCreated,\r\n  routineRemoved,\r\n  routineUpdated,\r\n  selectAllRoutines,\r\n  selectSelectedRoutine,\r\n  setRoutine,\r\n} from \"./RoutineSlice/routineSlice\";\r\n\r\nconst Routines = () => {\r\n  const routines = useAppSelector(selectAllRoutines);\r\n  const selectedRoutine = useAppSelector(selectSelectedRoutine);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const routineOptions: JSX.Element[] = [];\r\n  const routineDisplays: JSX.Element[] = [];\r\n  routines.forEach((routine) => {\r\n    routineOptions.push(\r\n      <MenuItem value={routine.id} key={routine.id}>\r\n        {routine.name}\r\n      </MenuItem>\r\n    );\r\n    routineDisplays.push(\r\n      <Box component=\"li\" key={routine.id} sx={{ margin: 0.5, maxWidth: 1 }}>\r\n        <Chip\r\n          label={routine.name}\r\n          variant={routine.display ? \"filled\" : \"outlined\"}\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            dispatch(\r\n              routineUpdated({\r\n                id: routine.id,\r\n                changes: { display: !routine.display },\r\n              })\r\n            );\r\n            dispatch(setRoutine(routine.id));\r\n          }}\r\n          onDelete={() => dispatch(routineRemoved(routine.id))}\r\n          sx={{ maxWidth: 1 }}\r\n        />\r\n      </Box>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper\r\n        variant=\"outlined\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          listStyle: \"none\",\r\n          p: 0.5,\r\n          my: 2,\r\n        }}\r\n        component=\"ul\"\r\n      >\r\n        {routineDisplays}\r\n      </Paper>\r\n      <Paper sx={{ my: 2, p: 1 }}>\r\n        <Grid container spacing={1}>\r\n          {selectedRoutine !== undefined ? (\r\n            <Grid item xs={12} sm={6} md={12} lg={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"select-routine-label\">\r\n                  Select Routine\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-routine-label\"\r\n                  id=\"select-routine\"\r\n                  value={selectedRoutine}\r\n                  label=\"Select Routine\"\r\n                  onChange={(e) => dispatch(setRoutine(e.target.value))}\r\n                >\r\n                  {routineOptions}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            sm={3}\r\n            md={6}\r\n            lg={3}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                dispatch(routineCreated({ copy: false }));\r\n              }}\r\n            >\r\n              Create New Routine\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={6}\r\n            sm={3}\r\n            md={6}\r\n            lg={3}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => dispatch(routineCreated({ copy: true }))}\r\n            >\r\n              Copy Selected Routine\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Routines;\r\n","import { Button, Grid, Paper, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\r\n// import { exampleRoutines } from \"../Model/exampleRoutines\";\r\nimport { importStates } from \"../Model/types\";\r\nimport {\r\n  importRoutine,\r\n  selectImportState,\r\n  selectSelectedRoutineObject,\r\n} from \"../Routines/RoutineSlice/routineSlice\";\r\n// import { useSelector } from \"react-redux\";\r\n\r\n/* TODO: \r\n  Convert to mui\r\n  Add save routines button\r\n  Add load example routines button\r\n*/\r\nconst ImportExport = () => {\r\n  const routine = useAppSelector(selectSelectedRoutineObject);\r\n  const importState = useAppSelector(selectImportState);\r\n  const [messageSeen, setMessageSeen] = useState(false);\r\n  const [textValue, setTextValue] = useState(\"\");\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!messageSeen) {\r\n      if (importState === importStates.Failure) {\r\n        setTextValue(\"Import failed\");\r\n        setMessageSeen(true);\r\n      } else if (importState === importStates.Successful) {\r\n        setTextValue(\"Import successful\");\r\n        setMessageSeen(true);\r\n      }\r\n    }\r\n  }, [importState, messageSeen]);\r\n\r\n  const tryToAddRoutine = () => {\r\n    dispatch(importRoutine(textValue));\r\n    setMessageSeen(false);\r\n  };\r\n  const paste = () => {\r\n    setTextValue(JSON.stringify(routine));\r\n  };\r\n\r\n  //   const saveRoutines = () => {try {\r\n  //       const serialState = JSON.stringify(state);\r\n  //       localStorage.setItem('appState', serialState);\r\n  //     } catch(err) {\r\n  //         console.log(err);\r\n  //     }\r\n  // };\r\n  // const loadSavedRoutines = () => {};\r\n  // const addExampleRoutines = () => {\r\n  //   for (let r of exampleRoutines) {\r\n  //     dispatch(importRoutine(r));\r\n  //   }\r\n  // };\r\n  const copy = () => {\r\n    if (navigator.clipboard !== undefined) {\r\n      // textAreaRef.current.select();\r\n      // textAreaRef!.current.setSelectionRange(0, 99999); /* For mobile devices */\r\n      navigator.clipboard.writeText(textValue);\r\n      setTextValue(\"Copied\");\r\n      // document.execCommand(\"copy\");\r\n    }\r\n  };\r\n  return (\r\n    <Paper sx={{ p: 1 }}>\r\n      <Grid container>\r\n        <Grid item>\r\n          <Button onClick={tryToAddRoutine}>Import</Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button onClick={paste}>Export</Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button onClick={copy}>Copy</Button>\r\n        </Grid>\r\n        {/* <Grid item>\r\n          <Button onClick={saveRoutines}>Save Routines</Button>\r\n        </Grid> */}\r\n        {/* <Grid item>\r\n          <Button onClick={loadSavedRoutines}>Load Saved Routines</Button>\r\n        </Grid> */}\r\n        {/* <Grid item>\r\n          <Button onClick={addExampleRoutines}>Add example Routines</Button>\r\n        </Grid> */}\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            maxRows={5}\r\n            label=\"Routine code\"\r\n            placeholder=\"Enter routine code here to import.\"\r\n            value={textValue}\r\n            onChange={(e) => setTextValue(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ImportExport;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useAppDispatch } from \"../../App/hooks\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Chip,\r\n  FormControlLabel,\r\n  Switch,\r\n  Slider,\r\n  Button,\r\n  Stack,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n} from \"@mui/material\";\r\nimport { diceSizeOptions, makeOptions } from \"../../Model/options\";\r\nimport {\r\n  DieTrend,\r\n  dieTrends,\r\n  ItemTrend,\r\n  itemTrends,\r\n  ProfTrend,\r\n  profTrends,\r\n  StatTrend,\r\n  statTrends,\r\n} from \"../../Model/types\";\r\nimport { activityPathCreated } from \"../RoutineSlice/routineSlice\";\r\nimport {\r\n  activityTypes,\r\n  cantrips,\r\n  strikeActivities,\r\n  classes,\r\n  critSpecs,\r\n  runeTrends,\r\n  StrikeInfo,\r\n  weaponTraits,\r\n  classOptions,\r\n  skillProfTrends,\r\n  skillActivities,\r\n  SkillInfo,\r\n  CantripInfo,\r\n  spells,\r\n  SpellInfo,\r\n  spellProfTrends,\r\n  attackSpells,\r\n  WeaponInfo,\r\n} from \"../../Model/newActivityInfo\";\r\nimport { TooltipSelect } from \"../../TooltipSelect\";\r\nimport ReactGA from \"react-ga4\";\r\nReactGA.initialize(\"G-JR2YK097BG\");\r\n\r\n/*\r\n  get activity type: strike, skill, cantrip, spell\r\n\r\n  if type is strike \r\n    choose class\r\n    choose activity\r\n    attak score, damage score, cantrip score for ea/magus\r\n    choose weapon die and traits\r\n    choose number of attacks\r\n\r\n*/\r\nexport default function NewActivity({\r\n  routineId,\r\n  parentId,\r\n}: {\r\n  routineId?: number;\r\n  parentId?: number;\r\n}): JSX.Element {\r\n  const [activityType, setActivityType] = useState<string>(\r\n    activityTypes.Strike\r\n  );\r\n\r\n  return (\r\n    <Paper sx={{ my: 2, p: 1 }}>\r\n      {/* <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ m: 2, p: 2 }}>\r\n        <Grid item xs=\"auto\">\r\n          <Typography>Enter activity information</Typography>\r\n        </Grid> */}\r\n      {/* <Grid item xs=\"auto\"> */}\r\n      <FormControl fullWidth sx={{ my: 2, p: 1 }}>\r\n        <InputLabel>Activity Type</InputLabel>\r\n        <Select\r\n          value={activityType}\r\n          label=\"Activity Type\"\r\n          onChange={(e) => {\r\n            setActivityType(e.target.value);\r\n          }}\r\n        >\r\n          {makeOptions(activityTypes)}\r\n        </Select>\r\n      </FormControl>\r\n      {/* </Grid> */}\r\n      {/* <Grid item> */}\r\n      {activityTypes.Strike === activityType ? (\r\n        <StrikeSelection />\r\n      ) : activityTypes.Skill === activityType ? (\r\n        <SkillSelection />\r\n      ) : activityTypes.Cantrip === activityType ? (\r\n        <CantripSelection />\r\n      ) : activityTypes.Spell === activityType ? (\r\n        <SpellSelection />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {/* </Grid> */}\r\n      {/* </Grid> */}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction StrikeSelection() {\r\n  const [strikeInfo, setStrikeInfo] = useState<StrikeInfo>({\r\n    cClass: classes[6],\r\n    classOption: \"\",\r\n    activity: \"Strike\",\r\n    spell: attackSpells[0],\r\n    attackScore: statTrends.AS18a,\r\n    damageScore: statTrends.AS18a,\r\n    cantripScore: statTrends.AS16pp,\r\n\r\n    numPrevStrikes: 0,\r\n    numStrikes: 1,\r\n    twf: false,\r\n    isStrikeSecondaryWeapon: [false],\r\n    previousHits: 0,\r\n\r\n    weapon1: {\r\n      dieSize: 8,\r\n      traits: Object.fromEntries(weaponTraits.map((trait) => [trait, false])),\r\n      deadlySize: 8,\r\n      fatalSize: 10,\r\n      critSpec: false,\r\n      critSpecLevel: 5,\r\n      critSpecType: critSpecs[0],\r\n      runes: dieTrends.RUNE2,\r\n\r\n      numPrevStrikes: 0,\r\n    },\r\n    weapon2: {\r\n      dieSize: 8,\r\n      traits: Object.fromEntries(weaponTraits.map((trait) => [trait, false])),\r\n      deadlySize: 8,\r\n      fatalSize: 10,\r\n      critSpec: false,\r\n      critSpecLevel: 5,\r\n      critSpecType: critSpecs[0],\r\n      runes: dieTrends.RUNE2,\r\n\r\n      numPrevStrikes: 0,\r\n    },\r\n  });\r\n  // const [cClass, setCClass] = useState<typeof classes[number]>(classes[6]);\r\n  // const [classOption, setClassOption] = useState<string>(\"\");\r\n  // const [activity, setActivity] =\r\n  //   useState<typeof strikeActivities[number]>(\"Strike\");\r\n  // const [spell, setSpell] = useState<typeof attackSpells[number]>(\r\n  //   attackSpells[0]\r\n  // );\r\n  // const [attackScore, setAttackScore] = useState<StatTrend>(statTrends.AS18a);\r\n  // const [damageScore, setDamageScore] = useState<StatTrend>(statTrends.AS18a);\r\n  // const [cantripScore, setCantripScore] = useState<StatTrend>(\r\n  //   statTrends.AS16pp\r\n  // );\r\n\r\n  // const [numStrikes, setNumStrikes] = useState<number>(1);\r\n  // const [numPrevStrikes, setNumPrevStrikes] = useState<number>(0);\r\n  // const [twf, setTwf] = useState<boolean>(false);\r\n  // const [isStrikeSecondaryWeapon, setIsStrikeSecondaryWeapon] = useState<\r\n  //   boolean[]\r\n  // >([false]);\r\n  // const [previousHits, setPreviousHits] = useState<number>(0);\r\n\r\n  // const [dieSize, setDieSize] = useState<number>(diceSizes[8]);\r\n  // const [traits, setTraits] = useState(\r\n  //   // Array.from(weaponTraits, () => false)\r\n  //   Object.fromEntries(weaponTraits.map((trait) => [trait, false]))\r\n  // );\r\n  // const [deadlySize, setDeadlySize] = useState<number>(diceSizes[8]);\r\n  // const [fatalSize, setFatalSize] = useState<number>(diceSizes[10]);\r\n  // const [critSpec, setCritSpec] = useState<boolean>(false);\r\n  // const [critSpecLevel, setCritSpecLevel] = useState<number>(5);\r\n  // const [critSpecType, setCritSpecType] = useState<string>(critSpecs[0]);\r\n  // const [runes, setRunes] = useState<DieTrend>(dieTrends.RUNE2);\r\n\r\n  // const [dieSize2, setDieSize2] = useState<number>(diceSizes[8]);\r\n  // const [traits2, setTraits2] = useState(\r\n  //   // Array.from(weaponTraits, () => false)\r\n  //   Object.fromEntries(weaponTraits.map((trait) => [trait, false]))\r\n  // );\r\n  // const [deadlySize2, setDeadlySize2] = useState<number>(diceSizes[8]);\r\n  // const [fatalSize2, setFatalSize2] = useState<number>(diceSizes[10]);\r\n  // const [critSpec2, setCritSpec2] = useState<boolean>(false);\r\n  // const [critSpecLevel2, setCritSpecLevel2] = useState<number>(5);\r\n  // const [critSpecType2, setCritSpecType2] = useState<string>(critSpecs[0]);\r\n  // const [runes2, setRunes2] = useState<DieTrend>(dieTrends.RUNE2);\r\n\r\n  // const strikeInfo: StrikeInfo = {\r\n  //   cClass,\r\n  //   classOption,\r\n  //   activity,\r\n  //   spell,\r\n  //   attackScore,\r\n  //   damageScore,\r\n  //   cantripScore,\r\n\r\n  //   numPrevStrikes,\r\n  //   numStrikes,\r\n  //   twf,\r\n  //   isStrikeSecondaryWeapon,\r\n  //   previousHits,\r\n\r\n  //   dieSize,\r\n  //   traits,\r\n  //   deadlySize,\r\n  //   fatalSize,\r\n  //   critSpec,\r\n  //   critSpecLevel,\r\n  //   critSpecType,\r\n  //   runes,\r\n\r\n  //   dieSize2,\r\n  //   traits2,\r\n  //   deadlySize2,\r\n  //   fatalSize2,\r\n  //   critSpec2,\r\n  //   critSpecLevel2,\r\n  //   critSpecType2,\r\n  //   runes2,\r\n  // };\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setClass = (className: typeof classes[number]) => {\r\n    const newStrikeInfo = { ...strikeInfo };\r\n    newStrikeInfo.cClass = className;\r\n    if (classOptions[className].length > 0) {\r\n      newStrikeInfo.classOption = classOptions[className][0];\r\n    } else {\r\n      newStrikeInfo.classOption = \"\";\r\n    }\r\n    setStrikeInfo(newStrikeInfo);\r\n  };\r\n  const showClassOptions = (): boolean => {\r\n    return classOptions[strikeInfo.cClass].length > 0;\r\n  };\r\n  const showCantrip = (): boolean => {\r\n    if (strikeInfo.activity === \"Spell Strike\") {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  const showCantripScore = (): boolean => {\r\n    if (strikeInfo.cClass === \"Inventor\") {\r\n      if (\r\n        strikeInfo.classOption === \"Overdrive Success\" ||\r\n        strikeInfo.classOption === \"Overdrive Critical\"\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    if (strikeInfo.activity === \"Spell Strike\") {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        spacing={{ xs: 1, sm: 2 }}\r\n        sx={{ py: 2 }}\r\n        id=\"create-new-activity\"\r\n      >\r\n        <Grid item>\r\n          <TooltipSelect\r\n            title=\"Which class's proficiency and weapon specialization to use.\"\r\n            value={strikeInfo.cClass}\r\n            label=\"Class\"\r\n            onChange={(e) => {\r\n              setClass(e.target.value as typeof classes[number]);\r\n            }}\r\n          >\r\n            {makeOptions(classes)}\r\n          </TooltipSelect>\r\n        </Grid>\r\n\r\n        {showClassOptions() ? (\r\n          <Grid item>\r\n            <TooltipSelect\r\n              title=\"Which abilities are applied\"\r\n              value={strikeInfo.classOption}\r\n              label=\"Class Option\"\r\n              onChange={(e) => {\r\n                setStrikeInfo({ ...strikeInfo, classOption: e.target.value });\r\n              }}\r\n            >\r\n              {makeOptions(classOptions[strikeInfo.cClass])}\r\n            </TooltipSelect>\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <Grid item>\r\n          <TooltipSelect\r\n            title=\"Which activity to use\"\r\n            value={strikeInfo.activity}\r\n            label=\"Activity\"\r\n            onChange={(e) => {\r\n              const newStrikeInfo = { ...strikeInfo };\r\n              newStrikeInfo.activity = e.target\r\n                .value as typeof strikeActivities[number];\r\n              if (e.target.value === \"Double Slice\") {\r\n                newStrikeInfo.numStrikes = 2;\r\n                newStrikeInfo.isStrikeSecondaryWeapon = [false, true];\r\n              }\r\n              setStrikeInfo(newStrikeInfo);\r\n            }}\r\n          >\r\n            {makeOptions(strikeActivities)}\r\n          </TooltipSelect>\r\n        </Grid>\r\n        {showCantrip() ? (\r\n          <Grid item>\r\n            <TooltipSelect\r\n              title=\"Which spell to add to the strike\"\r\n              value={strikeInfo.spell}\r\n              label=\"Spell\"\r\n              onChange={(e) => {\r\n                setStrikeInfo({\r\n                  ...strikeInfo,\r\n                  spell: e.target.value as typeof attackSpells[number],\r\n                });\r\n              }}\r\n            >\r\n              {makeOptions(attackSpells)}\r\n            </TooltipSelect>\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Grid item>\r\n          <TooltipSelect\r\n            title=\"What ability score bonus progression to add to the attack roll.\"\r\n            value={strikeInfo.attackScore}\r\n            label=\"Attack Abilitiy Score\"\r\n            onChange={(e) => {\r\n              setStrikeInfo({\r\n                ...strikeInfo,\r\n                attackScore: e.target.value as StatTrend,\r\n              });\r\n            }}\r\n          >\r\n            {makeOptions(statTrends)}\r\n          </TooltipSelect>\r\n        </Grid>\r\n        <Grid item>\r\n          <TooltipSelect\r\n            title=\"What ability score bonus progression to add to the damage roll.\r\n            Not applied to ranged attacks.\"\r\n            value={strikeInfo.damageScore}\r\n            label=\"Damage Abilitiy Score\"\r\n            onChange={(e) => {\r\n              setStrikeInfo({\r\n                ...strikeInfo,\r\n                damageScore: e.target.value as StatTrend,\r\n              });\r\n            }}\r\n          >\r\n            {makeOptions(statTrends)}\r\n          </TooltipSelect>\r\n        </Grid>\r\n        {showCantripScore() ? (\r\n          <Grid item>\r\n            <TooltipSelect\r\n              title=\"What ability score bonus progression to add to the damage roll.\"\r\n              value={strikeInfo.cantripScore}\r\n              label=\"Mental Abilitiy Score\"\r\n              onChange={(e) => {\r\n                setStrikeInfo({\r\n                  ...strikeInfo,\r\n                  cantripScore: e.target.value as StatTrend,\r\n                });\r\n              }}\r\n            >\r\n              {makeOptions(statTrends)}\r\n            </TooltipSelect>\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n\r\n      <WeaponInput\r\n        weapon={strikeInfo.weapon1}\r\n        setWeapon={(weapon) =>\r\n          setStrikeInfo({ ...strikeInfo, weapon1: weapon })\r\n        }\r\n      />\r\n\r\n      {/* <Grid\r\n        container\r\n        columnSpacing={{ xs: 1, sm: 2 }}\r\n        sx={{ my: 2 }}\r\n        alignItems=\"center\"\r\n      > */}\r\n      {/* <Grid item xs=\"auto\"> */}\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={strikeInfo.twf}\r\n            onChange={(e) =>\r\n              setStrikeInfo({ ...strikeInfo, twf: e.target.checked })\r\n            }\r\n          />\r\n        }\r\n        label=\"Use Two Weapons\"\r\n        sx={{ py: 2 }}\r\n      />\r\n      {/* </Grid> */}\r\n      {strikeInfo.twf ? (\r\n        <WeaponInput\r\n          weapon={strikeInfo.weapon2}\r\n          setWeapon={(weapon) =>\r\n            setStrikeInfo({ ...strikeInfo, weapon2: weapon })\r\n          }\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {/* </Grid> */}\r\n\r\n      <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ py: 2 }}>\r\n        <Grid item xs=\"auto\">\r\n          <TooltipSelect\r\n            title=\"Select the number of previous attacks.\"\r\n            value={strikeInfo.numPrevStrikes}\r\n            label=\"Previous Attacks\"\r\n            onChange={(e) => {\r\n              setStrikeInfo({\r\n                ...strikeInfo,\r\n                numPrevStrikes: Number(e.target.value),\r\n              });\r\n            }}\r\n          >\r\n            {makeOptions([0, 1, 2])}\r\n          </TooltipSelect>\r\n        </Grid>\r\n        {strikeInfo.activity !== \"Double Slice\" ? (\r\n          <Grid item xs=\"auto\">\r\n            <TooltipSelect\r\n              title=\"Select the number of attacks to make with the selected options.\"\r\n              value={strikeInfo.numStrikes}\r\n              label=\"Number of Strikes\"\r\n              onChange={(e) => {\r\n                const newNumStrikes = Number(e.target.value);\r\n                const newStrikeInfo = { ...strikeInfo };\r\n                const isStrikeSecondaryWeapon = [];\r\n                for (let i = 0; i < newNumStrikes; i++) {\r\n                  if (i < strikeInfo.numStrikes) {\r\n                    isStrikeSecondaryWeapon.push(\r\n                      strikeInfo.isStrikeSecondaryWeapon[i]\r\n                    );\r\n                  } else {\r\n                    isStrikeSecondaryWeapon.push(false);\r\n                  }\r\n                }\r\n                newStrikeInfo.numStrikes = newNumStrikes;\r\n                newStrikeInfo.isStrikeSecondaryWeapon = isStrikeSecondaryWeapon;\r\n                setStrikeInfo(newStrikeInfo);\r\n              }}\r\n            >\r\n              {makeOptions([1, 2, 3, 4, 5, 6])}\r\n            </TooltipSelect>\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {strikeInfo.cClass === \"Ranger\" &&\r\n        strikeInfo.classOption === \"Precision Edge\" ? (\r\n          <Grid item xs=\"auto\">\r\n            <TooltipSelect\r\n              title=\"Select the number of previous hits.\"\r\n              value={strikeInfo.previousHits}\r\n              label=\"Previous Hits\"\r\n              onChange={(e) => {\r\n                setStrikeInfo({\r\n                  ...strikeInfo,\r\n                  previousHits: Number(e.target.value),\r\n                });\r\n              }}\r\n            >\r\n              {makeOptions([0, 1, 2, 3])}\r\n            </TooltipSelect>\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {/* Add Strike button */}\r\n        <Grid item xs=\"auto\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              ReactGA.event(\"select_content\", {\r\n                content_type: \"create-new-strike\",\r\n                item_id: strikeInfo.cClass,\r\n              });\r\n              dispatch(activityPathCreated({ strikeInfo }));\r\n            }}\r\n          >\r\n            Create New Activity\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {strikeInfo.twf && strikeInfo.activity !== \"Double Slice\" ? (\r\n        <Stack spacing={{ xs: 1, sm: 2 }}>\r\n          {strikeInfo.isStrikeSecondaryWeapon.map((isSecondary, index) => (\r\n            <FormControl component=\"fieldset\" key={index}>\r\n              <FormLabel component=\"legend\">Strike {index + 1}</FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-label={\"strike-\" + (index + 1)}\r\n                value={isSecondary ? 2 : 1}\r\n                onClick={(e) => {\r\n                  const newStrikeInfo = { ...strikeInfo };\r\n                  const newIsSecondary =\r\n                    strikeInfo.isStrikeSecondaryWeapon.slice();\r\n                  newIsSecondary[index] =\r\n                    (e.target as HTMLInputElement).value === \"2\";\r\n                  newStrikeInfo.isStrikeSecondaryWeapon = newIsSecondary;\r\n                  setStrikeInfo(newStrikeInfo);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio />}\r\n                  label=\"Weapon 1\"\r\n                />\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio />}\r\n                  label=\"Weapon 2\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          ))}\r\n        </Stack>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction WeaponInput({\r\n  weapon,\r\n  setWeapon,\r\n}: {\r\n  weapon: WeaponInfo;\r\n  setWeapon: (weapon: WeaponInfo) => void;\r\n}) {\r\n  return (\r\n    <Grid\r\n      container\r\n      columnSpacing={{ xs: 1, sm: 2 }}\r\n      sx={{ py: 2 }}\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs=\"auto\">\r\n        <Typography variant=\"h6\">Weapon</Typography>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Weapon damage die\"\r\n          value={weapon.dieSize}\r\n          label=\"Damage Die\"\r\n          onChange={(e) => {\r\n            setWeapon({ ...weapon, dieSize: Number(e.target.value) });\r\n          }}\r\n        >\r\n          {diceSizeOptions}\r\n        </TooltipSelect>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={weapon.critSpec}\r\n              onChange={(e) =>\r\n                setWeapon({ ...weapon, critSpec: e.target.checked })\r\n              }\r\n            />\r\n          }\r\n          label=\"Critical Specialization\"\r\n        />\r\n      </Grid>\r\n      {/* crit spec level slider */}\r\n      {weapon.critSpec ? (\r\n        <Grid item>\r\n          <Typography align=\"center\" id=\"crit-spec-level\">\r\n            At Level {weapon.critSpecLevel}\r\n          </Typography>\r\n          <Slider\r\n            aria-labelledby=\"crit-spec-level\"\r\n            value={weapon.critSpecLevel}\r\n            min={1}\r\n            max={20}\r\n            marks\r\n            onChange={(e, nv) =>\r\n              setWeapon({ ...weapon, critSpecLevel: Number(nv) })\r\n            }\r\n          />\r\n        </Grid>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {weapon.critSpec ? (\r\n        <Grid item>\r\n          <TooltipSelect\r\n            title=\"What weapon group's effect to apply on a critical hit.\"\r\n            value={weapon.critSpecType}\r\n            label=\"Weapon Group\"\r\n            onChange={(e) =>\r\n              setWeapon({ ...weapon, critSpecType: e.target.value })\r\n            }\r\n          >\r\n            {makeOptions(critSpecs)}\r\n          </TooltipSelect>\r\n        </Grid>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {/* Weapon Traits */}\r\n      <Grid item>\r\n        <Paper\r\n          variant=\"outlined\"\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"center\",\r\n            listStyle: \"none\",\r\n            p: 0.5,\r\n            my: 1,\r\n          }}\r\n          component=\"ul\"\r\n        >\r\n          {weaponTraits.map((traitName, index) => (\r\n            <Box component=\"li\" key={traitName} sx={{ margin: 0.5 }}>\r\n              <Chip\r\n                label={traitName}\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n                variant={weapon.traits[traitName] ? \"filled\" : \"outlined\"}\r\n                onClick={() => {\r\n                  const newTraits = {\r\n                    ...weapon.traits,\r\n                    [traitName]: !weapon.traits[traitName],\r\n                  };\r\n                  // newTraits[traitName] = !traits[traitName];\r\n                  setWeapon({ ...weapon, traits: newTraits });\r\n                }}\r\n              />\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      </Grid>\r\n      {weapon.traits[\"deadly\"] ? (\r\n        <Grid item>\r\n          <TooltipSelect\r\n            title=\"Deadly damage die.\"\r\n            value={weapon.deadlySize}\r\n            label=\"Deadly Die\"\r\n            onChange={(e) => {\r\n              setWeapon({ ...weapon, deadlySize: Number(e.target.value) });\r\n            }}\r\n          >\r\n            {diceSizeOptions}\r\n          </TooltipSelect>\r\n        </Grid>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {weapon.traits[\"fatal\"] ? (\r\n        <Grid item>\r\n          <TooltipSelect\r\n            title=\"Fatal damage die.\"\r\n            value={weapon.fatalSize}\r\n            label=\"Fatal Die\"\r\n            onChange={(e) => {\r\n              setWeapon({ ...weapon, fatalSize: Number(e.target.value) });\r\n            }}\r\n          >\r\n            {diceSizeOptions}\r\n          </TooltipSelect>\r\n        </Grid>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"What levels the damages from property runes such as 'flaming' are applied.\"\r\n          value={weapon.runes}\r\n          label=\"Damage Rune Levels\"\r\n          onChange={(e) => {\r\n            setWeapon({ ...weapon, runes: e.target.value as DieTrend });\r\n          }}\r\n        >\r\n          {makeOptions(runeTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction SkillSelection() {\r\n  const [proficiency, setProficiency] = useState<ProfTrend>(\r\n    profTrends.MAXSKILL\r\n  );\r\n  const [abilityScore, setAbilityScore] = useState<StatTrend>(statTrends.AS18a);\r\n  const [itemBonus, setItemBonus] = useState<ItemTrend>(itemTrends.SKILL);\r\n  const [skillActivity, setSkillActivity] = useState<\r\n    typeof skillActivities[number]\r\n  >(skillActivities[0]);\r\n\r\n  const skillInfo: SkillInfo = {\r\n    proficiency,\r\n    abilityScore,\r\n    itemBonus,\r\n    skillActivity,\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which proficiency progression to apply.\"\r\n          label=\"Proficiency\"\r\n          value={proficiency}\r\n          onChange={(e) => {\r\n            setProficiency(e.target.value as ProfTrend);\r\n          }}\r\n        >\r\n          {makeOptions(skillProfTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which ability score progression to apply.\"\r\n          label=\"Ability Score\"\r\n          value={abilityScore}\r\n          onChange={(e) => {\r\n            setAbilityScore(e.target.value as StatTrend);\r\n          }}\r\n        >\r\n          {makeOptions(statTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which item bonus progression to apply.\"\r\n          label=\"Item Bonus\"\r\n          value={itemBonus}\r\n          onChange={(e) => {\r\n            setItemBonus(e.target.value as ItemTrend);\r\n          }}\r\n        >\r\n          {makeOptions(itemTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which skill activity to use.\"\r\n          label=\"Activity\"\r\n          value={skillActivity}\r\n          onChange={(e) => {\r\n            setSkillActivity(e.target.value as typeof skillActivities[number]);\r\n          }}\r\n        >\r\n          {makeOptions(skillActivities)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            ReactGA.event(\"select_content\", {\r\n              content_type: \"create-new-skill\",\r\n              item_id: skillActivity,\r\n            });\r\n            dispatch(activityPathCreated({ skillInfo }));\r\n          }}\r\n        >\r\n          Create New Activity\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction CantripSelection() {\r\n  const [proficiency, setProficiency] = useState<ProfTrend>(\r\n    profTrends.CASTERSPELL\r\n  );\r\n  const [abilityScore, setAbilityScore] = useState<StatTrend>(statTrends.AS18a);\r\n  const [cantrip, setCantrip] = useState<typeof cantrips[number]>(cantrips[0]);\r\n\r\n  const cantripInfo: CantripInfo = {\r\n    proficiency,\r\n    abilityScore,\r\n    cantrip,\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which proficiency progression to apply.\"\r\n          label=\"Proficiency\"\r\n          value={proficiency}\r\n          onChange={(e) => {\r\n            setProficiency(e.target.value as ProfTrend);\r\n          }}\r\n        >\r\n          {makeOptions(spellProfTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which ability score progression to apply.\"\r\n          label=\"Ability Score\"\r\n          value={abilityScore}\r\n          onChange={(e) => {\r\n            setAbilityScore(e.target.value as StatTrend);\r\n          }}\r\n        >\r\n          {makeOptions(statTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which cantrip to use.\"\r\n          label=\"Cantrip\"\r\n          value={cantrip}\r\n          onChange={(e) => {\r\n            setCantrip(e.target.value as typeof cantrips[number]);\r\n          }}\r\n        >\r\n          {makeOptions(cantrips)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            ReactGA.event(\"select_content\", {\r\n              content_type: \"create-new-cantrip\",\r\n              item_id: cantrip,\r\n            });\r\n            dispatch(activityPathCreated({ cantripInfo }));\r\n          }}\r\n        >\r\n          Create New Activity\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction SpellSelection() {\r\n  const [proficiency, setProficiency] = useState<ProfTrend>(\r\n    profTrends.CASTERSPELL\r\n  );\r\n  const [abilityScore, setAbilityScore] = useState<StatTrend>(statTrends.AS18a);\r\n  const [spell, setSpell] = useState<typeof spells[number]>(spells[0]);\r\n\r\n  const spellInfo: SpellInfo = {\r\n    proficiency,\r\n    abilityScore,\r\n    spell,\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which proficiency progression to apply.\"\r\n          label=\"Proficiency\"\r\n          value={proficiency}\r\n          onChange={(e) => {\r\n            setProficiency(e.target.value as ProfTrend);\r\n          }}\r\n        >\r\n          {makeOptions(spellProfTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which ability score progression to apply.\"\r\n          label=\"Ability Score\"\r\n          value={abilityScore}\r\n          onChange={(e) => {\r\n            setAbilityScore(e.target.value as StatTrend);\r\n          }}\r\n        >\r\n          {makeOptions(statTrends)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <TooltipSelect\r\n          title=\"Select which spell to use.\"\r\n          label=\"Spell\"\r\n          value={spell}\r\n          onChange={(e) => {\r\n            setSpell(e.target.value as typeof spells[number]);\r\n          }}\r\n        >\r\n          {makeOptions(spells)}\r\n        </TooltipSelect>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            ReactGA.event(\"select_content\", {\r\n              content_type: \"create-new-spell\",\r\n              item_id: spell,\r\n            });\r\n            dispatch(activityPathCreated({ spellInfo }));\r\n          }}\r\n        >\r\n          Create New Activity\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport ReactGA from \"react-ga4\";\r\n// import { Adsense } from \"@ctrl/react-adsense\";\r\n\r\nimport Display from \"../Display/Display\";\r\nimport SelectedRoutine from \"../Routines/SelectedRoutine\";\r\nimport Routines from \"../Routines/Routines\";\r\nimport Export from \"../Sharing/Export\";\r\n\r\nimport \"./PF2App.css\";\r\n\r\nimport {\r\n  selectSelectedRoutine,\r\n  selectSelectedActivityPath,\r\n  selectCreateNewActivity,\r\n} from \"../Routines/RoutineSlice/routineSlice\";\r\nimport { Container, Grid, Box, Button } from \"@mui/material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n// import Header from \"./Header\";\r\nimport { ActivityPath } from \"../Routines/Activity/ActivityPath\";\r\nimport NewActivity from \"../Routines/NewActivity/NewActivity\";\r\nimport { useAppSelector } from \"./hooks\";\r\n\r\n// Initialize google analytics\r\nReactGA.initialize(\"G-JR2YK097BG\");\r\n\r\nfunction PF2App() {\r\n  const isBigEnough = useMediaQuery((theme: any) => {\r\n    return theme.breakpoints.up(\"md\");\r\n  });\r\n\r\n  ReactGA.send(\"pageview\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Header /> */}\r\n      <Container maxWidth=\"xl\">\r\n        {isBigEnough ? (\r\n          <Grid\r\n            container\r\n            columnSpacing={{ xs: 2, md: 2, lg: 3, xl: 4 }}\r\n            sx={{ height: \"100vh\" }}\r\n          >\r\n            <Grid\r\n              id=\"container\"\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              sx={{ height: \"100%\", overflow: \"auto\" }}\r\n            >\r\n              <Controls />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              sx={{ mt: 0, height: 1, overflow: \"hidden auto\" }}\r\n            >\r\n              <Display />\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Display />\r\n            <Controls />\r\n            {/* <Adsense client=\"ca-pub-8032326260699508\" slot=\"3994991926\" /> */}\r\n          </React.Fragment>\r\n        )}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst Controls = () => {\r\n  const selectedRoutine = useAppSelector(selectSelectedRoutine);\r\n  const selectedActivityPath = useAppSelector(selectSelectedActivityPath);\r\n  const createNewActivity = useAppSelector(selectCreateNewActivity);\r\n\r\n  useEffect(() => {\r\n    if (createNewActivity) {\r\n      window.location.href = \"#create-new-activity\";\r\n      ReactGA.event(\"select_content\", {\r\n        content_type: \"new-activity\",\r\n        item_id: \"create-new-activity\",\r\n      });\r\n    }\r\n  }, [createNewActivity]);\r\n\r\n  return (\r\n    <Box sx={{}}>\r\n      <Routines />\r\n      {selectedRoutine !== undefined ? (\r\n        <SelectedRoutine routineId={selectedRoutine} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {selectedActivityPath !== undefined ? (\r\n        <ActivityPath id={selectedActivityPath} open={true} />\r\n      ) : createNewActivity ? (\r\n        <NewActivity />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Export />\r\n      <Grid\r\n        container\r\n        sx={{ mb: 2, mt: 0 }}\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <Donate />\r\n        </Grid>\r\n        <Grid item>\r\n          <Contact />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Donate = () => {\r\n  return (\r\n    <Box\r\n      sx={{ height: 60, width: 217 }}\r\n      onClick={() =>\r\n        ReactGA.event(\"select_content\", {\r\n          content_type: \"buy-me-a-coffee\",\r\n        })\r\n      }\r\n    >\r\n      <a\r\n        href=\"https://www.buymeacoffee.com/bahalbach\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <img\r\n          src=\"https://cdn.buymeacoffee.com/buttons/v2/default-red.png\"\r\n          alt=\"Buy Me A Coffee\"\r\n          width=\"217px\"\r\n          height=\"60px\"\r\n        />\r\n      </a>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Button\r\n      sx={{ height: 60, width: 217 }}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      href=\"mailto:bahalbach@gmail.com\"\r\n    >\r\n      Contact Me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PF2App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport routineReducer, {\r\n  damageAdded,\r\n  effectAdded,\r\n  importRoutine,\r\n  routineAdded,\r\n  setRoutine,\r\n} from \"../Routines/RoutineSlice/routineSlice\";\r\nimport targetReducer, { targetAdded } from \"../Display/targetSlice\";\r\nimport sharingReducer from \"../Display/sharingSlice\";\r\nimport weaknessReducer from \"../Display/weaknessSlice\";\r\nimport {\r\n  ACTrends,\r\n  conditions,\r\n  damageTrends,\r\n  damageTypes,\r\n  dCond,\r\n  dieTrends,\r\n  effectTypes,\r\n  graphTypes,\r\n  HPTrends,\r\n  materials,\r\n  SaveTrends,\r\n  whenConditions,\r\n} from \"../Model/types\";\r\nimport { exampleRoutines } from \"../Model/exampleRoutines\";\r\n\r\nconst empty: { [key: number]: number } = {};\r\nfor (let i = 1; i <= 20; i++) {\r\n  empty[i] = 0;\r\n}\r\n\r\nconst makeStore = () => {\r\n  const store = configureStore({\r\n    reducer: {\r\n      routines: routineReducer,\r\n      weaknesses: weaknessReducer,\r\n      targets: targetReducer,\r\n      sharing: sharingReducer,\r\n    },\r\n  });\r\n\r\n  store.dispatch(\r\n    targetAdded({\r\n      id: 0,\r\n      name: \"AC: High, Saves: Moderate\",\r\n\r\n      levelDiff: 0,\r\n      persistentMultiplier: 2,\r\n\r\n      ACTrend: ACTrends.HIGH,\r\n      FortTrend: SaveTrends.MODERATE,\r\n      RefTrend: SaveTrends.MODERATE,\r\n      WillTrend: SaveTrends.MODERATE,\r\n      PerTrend: SaveTrends.MODERATE,\r\n      HPTrend: HPTrends.MODERATE,\r\n      percentHP: 100,\r\n\r\n      flatfooted: false,\r\n      percentSelectedRoutine: false,\r\n      weaknesses: [],\r\n\r\n      graphType: graphTypes.DISTRIBUTION,\r\n      routineLevel: 1,\r\n      targetLevel: 1,\r\n      overrideAC: 16,\r\n      overrideFort: 7,\r\n      overrideRef: 7,\r\n      overrideWill: 7,\r\n      overridePer: 7,\r\n      overrideHP: 20,\r\n      currentHP: 20,\r\n    })\r\n  );\r\n\r\n  // default damages and effects\r\n  try {\r\n    if (localStorage.getItem(\"routineState\") === null) {\r\n      // console.log(\"Adding content\");\r\n      store.dispatch(\r\n        damageAdded({\r\n          id: 0,\r\n          damageCondition: dCond.STRIKE,\r\n\r\n          dieTrend: dieTrends.WEAPON,\r\n          dieAdjustments: { ...empty },\r\n          diceSize: 8,\r\n          fatal: false,\r\n          fatalDie: 10,\r\n          damageTrend: [damageTrends.AS18a, damageTrends.MARTIALWEAPONSPEC],\r\n          damageAdjustments: { ...empty },\r\n\r\n          damageType: damageTypes.S,\r\n          material: materials.NONE,\r\n          persistent: false,\r\n          multiplier: 1,\r\n          damageWhen: [whenConditions.Always],\r\n        })\r\n      );\r\n      store.dispatch(\r\n        damageAdded({\r\n          id: 1,\r\n          damageCondition: dCond.STRIKE,\r\n\r\n          dieTrend: dieTrends.RUNE2,\r\n          dieAdjustments: { ...empty },\r\n          diceSize: 6,\r\n          fatal: false,\r\n          fatalDie: 10,\r\n          damageTrend: [],\r\n          damageAdjustments: { ...empty },\r\n\r\n          damageType: damageTypes.FIRE,\r\n          material: materials.NONE,\r\n          persistent: false,\r\n          multiplier: 1,\r\n          damageWhen: [whenConditions.Always],\r\n        })\r\n      );\r\n      store.dispatch(\r\n        damageAdded({\r\n          id: 2,\r\n          damageCondition: dCond.BASIC,\r\n\r\n          dieTrend: dieTrends.SPELLLEVEL2,\r\n          dieAdjustments: { ...empty },\r\n          diceSize: 6,\r\n          fatal: false,\r\n          fatalDie: 10,\r\n          damageTrend: [],\r\n          damageAdjustments: { ...empty },\r\n\r\n          damageType: damageTypes.FIRE,\r\n          material: materials.NONE,\r\n          persistent: false,\r\n          multiplier: 1,\r\n          damageWhen: [whenConditions.Always],\r\n        })\r\n      );\r\n      store.dispatch(\r\n        effectAdded({\r\n          id: 0,\r\n          effectCondition: conditions.CRIT,\r\n          effectType: effectTypes.FLATFOOT,\r\n          effectValue: 1,\r\n          startLevel: 5,\r\n          endLevel: 20,\r\n          damageWhen: [whenConditions.Always],\r\n        })\r\n      );\r\n\r\n      // add in some example routines\r\n      store.dispatch(\r\n        routineAdded({\r\n          id: 0,\r\n          name: \"Baseline\",\r\n          display: true,\r\n          apIds: [],\r\n          levelDiff: 0,\r\n          description: \"No damage. Just so graphs display 0 with autoscalling.\",\r\n          startLevel: 1,\r\n          endLevel: 20,\r\n        })\r\n      );\r\n\r\n      for (let r of exampleRoutines) {\r\n        store.dispatch(importRoutine(r));\r\n      }\r\n\r\n      store.dispatch(setRoutine(3));\r\n      // set the first routine you see to be Fighter - 2 Strike - d12 Sword\r\n    }\r\n  } catch {\r\n    // ignore errors\r\n  }\r\n  return store;\r\n};\r\nexport { makeStore };\r\nconst store = makeStore();\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","const fighterGs2 = `{\"id\":101,\"name\":\"Fighter - 2 Strike - d12 Sword\",\"display\":false,\"apIds\":[{\"name\":\"Fighter - Strike - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1003},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1004}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1002}],\"apIds\":[{\"name\":\"Fighter - Strike - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1001},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1002}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1001}],\"apIds\":[],\"id\":1002,\"parentId\":1001}],\"id\":1001,\"routineId\":101}],\"levelDiff\":0,\"description\":\"2 Strike with class Fighter () after 0 previous strikes. Weapon is d12 Sword\",\"startLevel\":1,\"endLevel\":20}`;\r\nconst fighterPA = `{\"id\":102,\"name\":\"Fighter - 1 Power Attack - d12 Sword\",\"display\":false,\"apIds\":[{\"name\":\"Fighter - Power Attack - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":3,\"19\":3,\"20\":3},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1005},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1006}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1003}],\"apIds\":[],\"id\":1003,\"routineId\":102}],\"levelDiff\":0,\"description\":\"1 Power Attack with class Fighter () after 0 previous strikes. Weapon is d12 Sword\",\"startLevel\":1,\"endLevel\":20}`;\r\nconst fighterDSpick = `{\"id\":103,\"name\":\"Fighter - Double Slice - d6 fatal d10 Pick | d4 agile fatal d8 Pick\",\"display\":false,\"apIds\":[{\"name\":\"Fighter - Double Slice - d6 fatal d10 Pick\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[],\"effects\":[],\"apIds\":[{\"name\":\"Fighter - Double Slice - d4 agile fatal d8 Pick\",\"type\":\"Strike\",\"condition\":\"On Crit\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":true,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1007},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1008},{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1009},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":4,\"fatal\":true,\"fatalDie\":8,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1010},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1011},{\"damageCondition\":\"On Crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1012}],\"effects\":[],\"apIds\":[],\"id\":1005,\"parentId\":1004},{\"name\":\"Fighter - Double Slice - d4 agile fatal d8 Pick\",\"type\":\"Strike\",\"condition\":\"On Success\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1013},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1014},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":4,\"fatal\":true,\"fatalDie\":8,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1015},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1016},{\"damageCondition\":\"On Crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1017}],\"effects\":[],\"apIds\":[],\"id\":1006,\"parentId\":1004},{\"name\":\"Fighter - Double Slice - d4 agile fatal d8 Pick\",\"type\":\"Strike\",\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":4,\"fatal\":true,\"fatalDie\":8,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1018},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1019},{\"damageCondition\":\"On Crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1020}],\"effects\":[],\"apIds\":[],\"id\":1007,\"parentId\":1004}],\"id\":1004,\"routineId\":103}],\"levelDiff\":0,\"description\":\"2 Double Slice with class Fighter () after 0 previous strikes. Weapon is d6 fatal d10 Pick. Weapon two is d4 agile fatal d8 Pick\",\"startLevel\":1,\"endLevel\":20}`;\r\nconst fireball = `{\"id\":2,\"name\":\"Fireball\",\"display\":false,\"apIds\":[{\"id\":2,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Save\",\"profTrend\":\"Caster Spell (7, 15, 19)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"None\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"Ref\",\"targetInfoId\":0,\"damages\":[{\"id\":7,\"damageCondition\":\"Basic save\",\"dieTrend\":\"2 x Spell Level\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[],\"apIds\":[]}],\"levelDiff\":0,\"description\":\"A 2d6 / spell level basic reflex save.\",\"startLevel\":1,\"endLevel\":20}`;\r\nconst barbGiant2 = `{\"id\":104,\"name\":\"Barbarian (giant rage) - 2 Strike - d12 Sword\",\"display\":false,\"apIds\":[{\"name\":\"Barbarian (giant rage) - Strike - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\",\"Giant Rage\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1023},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1024}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1005}],\"apIds\":[{\"name\":\"Barbarian (giant rage) - Strike - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\",\"Giant Rage\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1021},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1022}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1004}],\"apIds\":[],\"id\":1009,\"parentId\":1008}],\"id\":1008,\"routineId\":104}],\"levelDiff\":0,\"description\":\"2 Strike with class Barbarian (giant rage) after 0 previous strikes. Weapon is d12 Sword\",\"startLevel\":1,\"endLevel\":20}`;\r\nconst rogueDS = `{\"id\":105,\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 deadly d8 Sword | d6 agile Sword\",\"display\":true,\"apIds\":[{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 deadly d8 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1009}],\"apIds\":[{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 agile Sword\",\"type\":\"Strike\",\"condition\":\"On Crit\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1025},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1026},{\"damageCondition\":\"Always\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1027},{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1028},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1029},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1030}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1006}],\"apIds\":[],\"id\":1011,\"parentId\":1010},{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 agile Sword\",\"type\":\"Strike\",\"condition\":\"On Success\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1031},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1032},{\"damageCondition\":\"Failure or worse\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1033},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1034},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1035},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1036}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1007}],\"apIds\":[],\"id\":1012,\"parentId\":1010},{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 agile Sword\",\"type\":\"Strike\",\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1037},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1038},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1039}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1008}],\"apIds\":[],\"id\":1013,\"parentId\":1010}],\"id\":1010,\"routineId\":105}],\"levelDiff\":0,\"description\":\"2 Double Slice with class Rogue (Sneak Attack) after 0 previous strikes. Weapon is d6 deadly d8 Sword. Weapon two is d6 agile Sword\",\"startLevel\":1,\"endLevel\":20}`;\r\n\r\n// const thaum2strikes = `{\"id\":101,\"name\":\"Thaumaturge 2 strikes\",\"display\":false,\"apIds\":[{\"id\":1002,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"16 to 22 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1004,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"16 to 22 apex(17)\",\"Martial Weapon Specializaton\",\"Implement's Empowerment\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1005,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1006,\"damageCondition\":\"Success or better\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"1/2 Level\"],\"damageAdjustments\":{\"1\":2,\"2\":2,\"3\":2,\"4\":2,\"5\":2,\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2}}],\"effects\":[{\"id\":1002,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1001,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"16 to 22 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1001,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"16 to 22 apex(17)\",\"Martial Weapon Specializaton\",\"Implement's Empowerment\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1002,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1003,\"damageCondition\":\"Success or better\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"1/2 Level\"],\"damageAdjustments\":{\"1\":2,\"2\":2,\"3\":2,\"4\":2,\"5\":2,\"6\":2,\"7\":2,\"8\":2,\"9\":2,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2}}],\"effects\":[{\"id\":1001,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[]}]}],\"levelDiff\":0,\"description\":\"A playtest Thaumaturge making 2 strikes with a longsword. 1d6 damage runes at 8 and 15. Critical specialization at 5 from weapon implement. After they succeeded in giving the target a 1/2 level +2 weakness.\",\"startLevel\":1,\"endLevel\":20}`;\r\n// const disintigrate = `{\"id\":102,\"name\":\"Disintigrate\",\"display\":false,\"apIds\":[{\"id\":1003,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Caster Spell (7, 15, 19)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"None\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[],\"effects\":[],\"apIds\":[{\"id\":1004,\"condition\":\"On Crit\",\"rollType\":\"Normal\",\"type\":\"Save\",\"profTrend\":\"Caster Spell (7, 15, 19)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"None\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"Fort\",\"damages\":[{\"id\":1009,\"damageCondition\":\"On Failure\",\"dieTrend\":\"2 x Spell Level\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"None\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2},{\"id\":1010,\"damageCondition\":\"On Success\",\"damageType\":\"None\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"2 x Spell Level\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1011,\"damageCondition\":\"On Crit\",\"damageType\":\"None\",\"material\":\"none\",\"persistent\":false,\"multiplier\":0.5,\"dieTrend\":\"2 x Spell Level\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]},{\"id\":1005,\"condition\":\"On Success\",\"rollType\":\"Normal\",\"type\":\"Save\",\"profTrend\":\"Caster Spell (7, 15, 19)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"None\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"Fort\",\"damages\":[{\"id\":1012,\"damageCondition\":\"Basic save\",\"dieTrend\":\"2 x Spell Level\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"None\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[],\"apIds\":[]}]}],\"levelDiff\":0,\"description\":\"If the spell attack crits then the save is one degree worse example. \",\"startLevel\":11,\"endLevel\":20}`;\r\n// const giantBarb3 = `{\"id\":103,\"name\":\"Giant Barbarian 3 Strikes\",\"display\":false,\"apIds\":[{\"id\":1006,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1011,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\",\"Giant Rage\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1012,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[{\"id\":1003,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1007,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1013,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\",\"Giant Rage\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1014,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[{\"id\":1004,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1009,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1017,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\",\"Giant Rage\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1018,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[{\"id\":1006,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[]}]}]}],\"levelDiff\":0,\"description\":\"A Barbarian making 3 strikes with a greatsword. 1d6 damage runes at 8 and 15. Crit specialization at 5.\",\"startLevel\":1,\"endLevel\":20}`;\r\n// const flurryRanger4 = `{\"id\":104,\"name\":\"Melee Flurry Ranger 4 strikes\",\"display\":false,\"apIds\":[{\"id\":1009,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"MAP\":\"0 (0x-3)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1017,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1018,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[{\"id\":1006,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1010,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"MAP\":\"-2 (1x-2)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1019,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1020,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[{\"id\":1007,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1011,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"MAP\":\"-4 (2x-2)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1021,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1022,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[{\"id\":1008,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1012,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"MAP\":\"-4 (2x-2)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1023,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1024,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[{\"id\":1009,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[]}]}]}]}],\"levelDiff\":0,\"description\":\"A longsword shortsword ranger with flurry edge making an attack with a longsword, then 3 shortsword attacks. improvement at 17 included. Crit spec at 5. \",\"startLevel\":1,\"endLevel\":20}`;\r\n// const doubleSliceRogue = `{\"id\":105,\"name\":\"Rogue Double Slice Sneak Attack\",\"display\":false,\"apIds\":[{\"id\":1013,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1025,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1026,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1028,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[{\"id\":1010,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1014,\"condition\":\"On Crit\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-4)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1029,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1030,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1032,\"damageCondition\":\"Always\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[{\"id\":1011,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[]},{\"id\":1015,\"condition\":\"On Success\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-4)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1033,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1034,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1036,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1037,\"damageCondition\":\"Success or worse\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[{\"id\":1012,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[]},{\"id\":1016,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-4)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1038,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1039,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1041,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[{\"id\":1013,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[]}]}],\"levelDiff\":0,\"description\":\"Using double slice on a Rogue. Only applying sneak attack damage to at most one attack. rapier and shortsword. Crit Spec at 5.\",\"startLevel\":1,\"endLevel\":20}`;\r\n// const rogue2strikes = `{\"id\":106,\"name\":\"Rogue 2 Strikes Sneak Attack\",\"display\":false,\"apIds\":[{\"id\":1017,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1038,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1039,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1040,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1044,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[{\"id\":1014,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[{\"id\":1018,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-4 (1x-4)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1041,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1042,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1045,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[{\"id\":1015,\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"startLevel\":5,\"endLevel\":20}],\"apIds\":[]}]}],\"levelDiff\":0,\"description\":\"Two strikes with sneak attack applied. \",\"startLevel\":1,\"endLevel\":20}`;\r\n// const preRanger4bow = `{\"id\":107,\"name\":\"Precision Ranger Shortbow 4 Strikes\",\"display\":false,\"apIds\":[{\"id\":1019,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1045,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1046,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1047,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1048,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 1(1, 11, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1020,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1049,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1050,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1051,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1052,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 2(17, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1022,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1057,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1058,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1059,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1060,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 3(19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1024,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1065,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1066,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1067,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]},{\"id\":1025,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1069,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1070,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1071,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1072,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 3(19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]}]},{\"id\":1023,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1061,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1062,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1063,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1064,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 2(17, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1026,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1073,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1074,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1075,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1076,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 3(19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]},{\"id\":1027,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1077,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1078,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1079,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1080,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 2(17, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]}]}]},{\"id\":1021,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1053,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1054,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1055,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1056,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 1(1, 11, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1029,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1085,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1086,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1087,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1088,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 2(17, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1031,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1093,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1094,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1095,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1096,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 3(19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]},{\"id\":1032,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1097,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1098,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1099,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1100,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 2(17, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]}]},{\"id\":1030,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1089,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1090,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1091,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1092,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 1(1, 11, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1033,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1101,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1102,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1103,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1104,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 2(17, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]},{\"id\":1034,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-10 (2x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1105,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1106,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1107,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1108,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 1(1, 11, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]}]}]}]}],\"levelDiff\":0,\"description\":\"4 Strikes for a Ranger with Precision Edge using a shortbow. Composite bow at 2. Str 14 boosted to 18 at 10. Runes at 8 and 15. \",\"startLevel\":1,\"endLevel\":20}`;\r\n// const preRanger2bow = `{\"id\":107,\"name\":\"Precision Ranger Shortbow 2 Strikes\",\"display\":false,\"apIds\":[{\"id\":1033,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1100,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1101,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1102,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1103,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 1(1, 11, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[{\"id\":1025,\"condition\":\"Success or better\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1068,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1069,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1070,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1071,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 2(17, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]},{\"id\":1032,\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"type\":\"Strike\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"id\":1096,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"20\":2},\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1097,\"damageCondition\":\"x1 hit, x2 crit\",\"dieTrend\":\"Runes (8, 15)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1},{\"id\":1098,\"damageCondition\":\"On Crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}},{\"id\":1099,\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"slashing\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"dieTrend\":\"Precision Edge 1(1, 11, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0}}],\"effects\":[],\"apIds\":[]}]}],\"levelDiff\":0,\"description\":\"2 Strikes for a Ranger with Precision Edge using a shortbow. Composite bow at 2. Str 14 boosted to 18 at 10. Runes at 8 and 15. \",\"startLevel\":1,\"endLevel\":20}`;\r\n\r\nexport const exampleRoutines = [\r\n  barbGiant2,\r\n  fighterGs2,\r\n  fighterPA,\r\n  fighterDSpick,\r\n  rogueDS,\r\n  fireball,\r\n  // thaum2strikes,\r\n  // disintigrate,\r\n  // giantBarb3,\r\n  // flurryRanger4,\r\n  // doubleSliceRogue,\r\n  // rogue2strikes,\r\n  // preRanger4bow,\r\n  // preRanger2bow,\r\n];\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createTheme } from \"@mui/material/styles\";\r\nimport { red } from \"@mui/material/colors\";\r\n\r\n// A custom theme for this app\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: red[900],\r\n    },\r\n    background: {\r\n      default: \"#222222\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport PF2App from \"./App/PF2App\";\r\nimport store from \"./App/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport theme from \"./App/theme\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <PF2App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}