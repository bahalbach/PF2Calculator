{"version":3,"sources":["Model/defaults.ts","Model/types.ts","App/hooks.ts","Display/weaknessSlice.ts","Model/options.tsx","Display/targetSlice.ts","Display/ByLevelInput.tsx","Model/newActivityInfo.ts","Routines/RoutineSlice/RoutineTypes.ts","Routines/RoutineSlice/routineSlice.ts","Calculation/Distribution.ts","Calculation/Calculation.ts","Calculation/EvaluateActivityPath.ts","Display/sharingSlice.ts","Display/useGenerateGraphs.tsx","Display/SingleLevelInput.tsx","Display/JointInput.tsx","Sharing/Upload.tsx","Display/Display.tsx","Routines/ActivityPathStub.tsx","TooltipSelect.tsx","Routines/Activity/LevelList.tsx","Routines/Activity/Damage.tsx","Routines/Activity/Effect.tsx","Routines/Activity/ActivityPath.tsx","Routines/SelectedRoutine.tsx","Routines/Routines.tsx","Sharing/Export.tsx","Routines/NewActivity/NewActivity.tsx","App/PF2App.tsx","App/store.ts","Model/exampleRoutines.ts","serviceWorker.js","App/theme.ts","index.js"],"names":["graphTypes","DISTRIBUTION","PMDEFENSE","PMRES","importStates","ACTrends","LOW","MODERATE","HIGH","EXTREME","SaveTrends","TERRIBLE","HPTrends","conditions","ALWAYS","CRIT","SUCC","FAIL","CRIF","AT_LEAST_SUCC","AT_LEAST_FAIL","FAIL_WORSE","SUCC_WORSE","rollTypes","NORMAL","ADVANTAGE","DISADVANTAGE","activityTypes","STRIKE","SAVE","SKILL","SPELLATTACK","profTrends","UNTRAINED","TRAINED","FIGHTERWEAPON","MARTIALWEAPON","CASTERWEAPON","ALCHWEAPON","CASTERSPELL","CLASSDC1","CLASSDC2","MCSPELL","MAXSKILL","ANIMALCOMPANION","SAVAGEACATHLETICS","statTrends","AS10","AS18a","AS18","AS16a","AS16pp","AS16p","AS14pp","AS14p","AS12p","AS10p","NIMBLEAC","SAVAGEAC","itemTrends","NONE","WEAPON","Gate_Attenuator","BOMB","MUTAGEN","MAPs","N1","N2","N3","A1","A2","A3","R1","R2","R3","RA1","RA2","RA3","RAA1","RAA2","RAA3","nextMAPs","defenses","AC","FORT","REF","WILL","PER","selfDC","targetDC","dCond","BASIC","dieTrends","ELEMENTALBLAST","SPELLLEVEL1","SPELLLEVEL2","LEVEL","HALFLEVEL","RUNE","RUNE2","DEADLY","SNEAK","STRATEGIC","PRECISE","PRECISIONEDGE","PRECISIONEDGE2","PRECISIONEDGE3","KISTRIKE","damageTrends","_objectSpread","FIGHTERWEAPONSPEC","MARTIALWEAPONSPEC","CASTERWEAPONSPEC","BOMBPLUS","RAGE","ANIMALRAGE","DRAGONRAGE","GIANTRAGE","SPIRITRAGE","ARCANECASCADE","OVERDRIVES","OVERDRIVEC","IMPLEMENT","CONSTRUCT","NIMBLE","SAVAGE","damageTypes","B","P","S","BLEED","FIRE","COLD","MENTAL","FORCE","PRECISION","materials","COLD_IRON","SILVER","ADAMANTINE","effectStateTypes","FLATFOOT","PRONE","GRAPPLED","RESTRAINED","effectValueTypes","FRIGHTENED","CLUMSY","BONUSC1","BONUSSA","effectTypes","whenConditions","Always","diceSizes","useAppDispatch","useDispatch","useAppSelector","useSelector","weaknessAdapter","createEntityAdapter","weakness","weaknessesSlice","createSlice","name","initialState","getInitialState","reducers","weaknessAdded","addOne","weaknessUpdated","updateOne","weaknessCreated","reducer","state","action","_action$payload","payload","id","type","value","prepare","_ref","parentId","weaknessRemoved","removeOne","_weaknessesSlice$acti","actions","_weaknessAdapter$getS","getSelectors","weaknesses","selectweaknessById","selectById","selectweaknessEntities","selectIds","selectEntities","selectAll","selectTotal","proficiencyValues","levels","valuesFromBonusLevels","concat","addLevel","arguments","length","undefined","currentValue","values","i","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","valuesFromBonuses","bonuses","_step2","_iterator2","bonus","zero","level","halfLevel","trained","maxSkill","maxScore","score16pp","score16p","score16","score14p","score14","score12","score10","DexNimbleAC","StrSavageAC","martialProf","alchProf","casterProf","spellProf","weaponItem","gateAttenuator","skillItem","bomb","mutagen","weaponDice","spellDice","spellDice2","Math","floor","runes","runes2","deadly","sneak","strategic","precise","kiStrike","preEdge1","preEdge2","preEdge3","acDice","martialSpec","casterSpec","constructDamage","nimbleDamage","savageDamage","bombPlusSplash","rage","animalrage","dragonrage","giantrage","spiritrage","arcaneCascade","overdriveSuccess","overdriveCritical","implementEmpower","fighterAB","martialAB","casterAB","alchAB","casterSpellAttack","casterSaveDC","classdc1","classdc2","mcspell","ACunarmedPro","ACathleticsProf","fighterStatic","fighterRanged","martialStatic","martialRanged","casterStatic","casterRanged","profTrendValues","_profTrendValues","_defineProperty","statTrendValues","_statTrendValues","itemTrendValues","_itemTrendValues","MAPvalues","dieTrendValues","_dieTrendValues","damageTrendValues","_objectSpread2","extremeAC","highAC","moderateAC","lowAC","gt","defaultACs","_defaultACs","defaultSaves","_defaultSaves","standardDC","defaultHP","_defaultHP","targetAdapter","targetsSlice","targetAdded","targetUpdated","changes","updateTargetLevel","targetLevel","extraReducers","builder","addCase","weaknessId","entities","push","_action$payload2","filter","wid","_targetsSlice$actions","_targetAdapter$getSel","targets","selecttargetById","selecttargetEntities","overrideAC","ACTrend","overrideFort","FortTrend","overrideRef","RefTrend","overrideWill","WillTrend","overridePer","PerTrend","currentHP","round","HPTrend","overrideHP","makeOptions","options","element","optionElements","_jsx","_MenuItem","children","graphTypeOptions","c","levelOptions","rt","conditionOptions","at","rollOptions","pt","activityTypeOptions","st","profTrendOptions","it","statTrendOptions","m","itemBTrendOptions","d","MAPOptions","act","defenseOptions","svt","ACOptions","dc","SaveOptions","dieT","damageConditionOptions","ds","dieTrendOptions","damT","diceSizeOptions","dt","damageTrendOptions","mat","damageTypeOptions","materialOptions","weaknessOptions","multiplierOptions","_i","_arr","est","evt","effectTypeOptions","ByLevelInput","_useAppSelector","levelDiff","percentHP","_useState","useState","_useState2","_slicedToArray","tempName","setTempName","dispatch","_jsxs","_Grid","container","spacing","xs","sm","sx","my","py","item","md","lg","_TextField","fullWidth","label","placeholder","onChange","target","onBlur","_Typography","_Slider","step","min","max","marks","nv","_FormControl","_InputLabel","_Select","labelId","justifyContent","_Box","px","width","valueLabelDisplay","_","newPercentHP","Number","Strike","Skill","Cantrip","Spell","Impulse","runeTrends","classes","noOptions","strikeActivities","classOptions","Alchemist","Barbarian","Bard","Champion","Cleric","Druid","Fighter","Gunslinger","Inventor","Investigator","Kineticist","Magus","Monk","Oracle","Ranger","Rogue","Sorcerer","Summoner","Swashbuckler","Witch","Wizard","weaponTraits","blastTraits","critSpecs","skillProfTrends","spellProfTrends","impulseProfTrends","skillActivities","cantrips","spells","impulses","attackSpells","getWeaponTraits","weapon","info","dieSize","trait","traits","fatalSize","deadlySize","critSpec","critSpecType","classAdjustments","strikeInfo","strikeNumber","adjustments","classOption","cClass","numPrevStrikes","activity","twf","weapon2","weapon1","activityWeaponDiceAdjustments","hasClassPrecisionDamage","previousHits","classPrecisionDamage","dieTrend","diceSize","damageWhen","damageTrend","getSpellDamage","spell","abilityScore","damageType","classWeaponDamageTrends","useWeapon2","trends","damageScore","includes","thisWeaponStrikes","isStrikeSecondaryWeapon","isWeapon2","classDamageAdjustments","cantripScore","hasDeadly","hasFatal","hasPickCritSpec","hasKnifeCritSpec","hasSwordCritSpec","hasHammerCritSpec","hasSpearCritSpec","critSpecDice","critSpecLevel","critSpecDamage","getSkillTarget","skillInfo","skillActivity","isRoutineObject","routine","display","description","isActivityPaths","apIds","startLevel","endLevel","Array","isArray","apId","Object","condition","rollType","profTrend","statTrend","itemTrend","isAdjustment","bonusAdjustments","MAP","targetType","isDamages","damages","isEffects","effects","damage","_step3","_iterator3","_step4","_iterator4","dw","damageCondition","dieAdjustments","fatal","fatalDie","damageAdjustments","material","persistent","multiplier","_step5","_iterator5","effect","_step6","_iterator6","effectCondition","effectType","routinesAdapter","activityPathAdapter","damageAdapter","effectAdapter","routineId","activityPathId","damageId","effectId","empty","one","savedState","serializedState","localStorage","getItem","JSON","parse","apply","_toConsumableArray","routines","ids","activityPaths","console","log","loadState","selectedRoutine","selectedActivityPath","parentRoutine","parentActivity","importRoutine","defaultActivity","defaultStrikeParent","defaultSaveParent","defaultDamage","defaultEffect","effectValue","routinesSlice","setRoutine","stringify","setItem","_unused","saveState","setActivityPath","routineAdded","routineUpdated","activityPathAdded","activityPathUpdated","damageAdded","damageUpdated","effectAdded","effectUpdated","routineCreated","copy","copyActivityPaths","_ref$copy","routineRemoved","childrenIds","removeActivityPaths","setNewActivityParent","emptyActivityPathCreated","activityType","ap","copyDamages","copyEffects","_ref2","activityPathCreated","_action$payload3","cantripInfo","spellInfo","impulseInfo","createStrikeActivity","_getStrikeRoutineName","numStrikes","getStrikeRoutineName","_getStrikeRoutineName2","_getSkillRoutineName","proficiency","itemBonus","getSkillRoutineName","_getSkillRoutineName2","createSkillActivity","_getCantripRoutineNam","cantrip","getCantripRoutineName","_getCantripRoutineNam2","createCantripActivity","_getSpellRoutineName","getSpellRoutineName","_getSpellRoutineName2","createSpellActivity","_getImpulseRoutineNam","impulse","getImpulseRoutineName","_getImpulseRoutineNam2","createImpulseActivity","activityPathContinued","_action$payload4","parentAP","newDamages","newEffects","_ref3","activityPathRemoved","_action$payload5","damageCreated","_action$payload6","_ref4","damageRemoved","_action$payload7","did","effectCreated","_action$payload8","_ref5","effectRemoved","_action$payload9","eid","routineObject","insertRoutine","error","_routinesSlice$action","_routinesAdapter$getS","selectRoutineById","selectRoutineEntities","selectAllRoutines","_activityPathAdapter$","selectactivityPathById","selectactivityPathEntities","_damageAdapter$getSel","selectdamageById","selectdamageEntities","_effectAdapter$getSel","selecteffectById","selecteffectEntities","selectSelectedRoutine","selectSelectedActivityPath","selectParentActivityId","selectCreateNewActivity","selectSelectedRoutineObject","getActivityPaths","selectRoutineDescriptions","map","selectImportState","index","removeMany","onCrit","onHit","onMiss","getStrikeName","createStrikeDamages","createStrikeEffects","classWeaponMAP","effectiveStrikeNumber","className","attackScore","addDoubleSliceDamage","doubleSliceCondition","weaponDamage","runeDamage","_classPrecisionDamage","classDamage","critDamage","_classPrecisionDamage2","_classPrecisionDamage3","hasActivityDamageDice","activityDamage","activityDamageDice","hasActivityCritDamage","activityCritDamage","hasSplashDamage","splashDamage","getSplashDamage","hasCritSpecEffect","critSpecEffect","hasBackswing","backswingEffect","createSkillDamages","createSkillEffects","hasSkillDamage","skillDamage","getSkillEffects","_step$value","skillEffect","createCantripDamages","getCantripTarget","cantripDamage","getCantripDamage","persDamage","createSpellDamages","createSpellEffects","getSpellTarget","spellDamage","crfa","fail","succ","e3","e6","e9","createImpulseDamages","weaponInfo","activityTargetTypes","getImpulseTarget","impulseDamage","isTwoAction","isRanged","isPropulsive","strScore","getImpulseDamage","newApIds","newAps","aps","getDamages","getEffects","_step7","_iterator7","insertActivityPaths","_step8","_iterator8","insertDamages","insertEffects","_step9","_iterator9","_step10","_iterator10","convolve","vec1","vec2","Error","volume","kernel","displacement","convVec","j","multiplyDist","dam","dist","staticDamage","damageDist","newDist","newDam","oldValue","chance","newValue","diff","applyMin","shift","addDamage","baseContext","context","normal","_multiplyDist","oldAveDamage","newAveDamage","validateCondition","degreeOfSuccess","indicies","ActivityPathEvaluator","_classCallCheck","this","_createClass","key","routineLevel","ACBonus","resBonus","maxDamage","initialTargetState","persistentDamages","_Object$values","_i2","_Object$values2","Flatfooted","flatfooted","dataArray","cumulative","expD","routineDDist","activityPath","evalPath","_applyMax","newDamageDist","remainingChance","slice","reduce","pv","cv","applyMax","currentSum","targetState","defenseBonus","resistanceBonus","_this","currentTarget","currentDamages","currentEffects","currentWeaknesses","_calculateExpectedDam","isLeaf","targetValue","DC","targetDefault","targetPenalty","Frightened","Clumsy","critPercent","dif","getCritSuccessPercent","succPercent","getSuccessPercent","failPercent","getFailurePercent","crfaPercent","getCritFailurePercent","notcrit","nothit","notfail","notcrfa","notsucc","chances","critDamagesByType","succDamagesByType","failDamagesByType","crfaDamagesByType","damageTreesByType","damageTrees","forEach","shouldAddThisDamage","diceNum","fatalDist","diceArray","damageTreeIndex","damageTree","finalTree","damageQuality","totalStaticDamage","totalDamageDist","_applyMin","maxW","maxR","_applyMin2","_applyMin3","_applyMin4","_multiplyDist2","persistentMultiplier","calculateExpectedDamage","targetStates","_loop","shouldAddThisEffect","val","Restrained","Grappled","Prone","evaluations","Map","has","pathDist","set","get","_len","dists","_key","_dists","distribution","consolidateDists","sharingSlice","graphUrl","singleLevelGraphUrl","imgLink","graphSaved","singleLevelGraphSaved","saveImgLink","_sharingSlice$actions","Plot","createPlotlyComponent","Plotly","evaluateByLevel","evaluator","datasets","selectedRoutineDamage","percentSelectedRoutine","canEvaluate","evalRoutine","levelArray","expDbyLevel","x","y","yaxis","evaluatePM","defense","expectedDamages","canEvaluateSingleLevel","bonusArray","expDbyBonus","toFixed","evaluateDistribution","_evaluator$evalRoutin4","useGenerateGraphs","graphType","saveGraph","_figure","graphDiv","toImage","format","height","then","url","saveSingleLevelGraph","title","byLevelTile","_evaluateDistribution","_evaluatePM","_evaluatePM2","xtitle","ytitle","byLeveldatasets","damageChart","data","layout","autosize","xaxis","legend","xanchor","yanchor","margin","l","r","useResizeHandler","style","onInitialized","onUpdate","byLevelDamageChart","SingleLevelInput","toString","setAC","_useState3","_useState4","Fort","setFort","_useState5","_useState6","Ref","setRef","_useState7","_useState8","Will","setWill","_useState9","_useState10","Per","setPer","_useState11","_useState12","HP","setHP","useEffect","React","Fragment","p","alignItems","Box","newTargetLevel","focus","newVal","parseInt","inputProps","newCurrentHP","WeaknessInput","AddWeakness","_useState13","_useState14","tempVal","setTempVal","WeaknessSelect","_e$target","_Tooltip","size","isNaN","_useState15","_useState16","JointInput","perMul","setPerMul","_FormControlLabel","control","_Switch","checked","parseFloat","ReactGA","initialize","Upload","_ref$byLevel","byLevel","sharing","selectGraphUrl","split","routineDescriptions","isBigEnough","_useMediaQuery","theme","breakpoints","up","fd","FormData","append","requestOptions","method","headers","Authorization","body","_Button","onClick","event","tab","window","open","fetch","response","json","link","location","catch","alert","close","variant","color","endIcon","ShareIcon","Display","showByLevel","setShowByLevel","showSingleLevel","setShowSingleLevel","setGraphType","_useGenerateGraphs","singleLevelHeight","_Paper","_Collapse","in","ActivityPathStub","_ref$displayChildren","displayChildren","parentActivityId","icon","GavelIcon","AutoFixHighIcon","showMAP","_ListItem","disablePadding","secondaryAction","_IconButton","edge","DeleteIcon","_ListItemButton","selected","pl","_ListItemIcon","_ListItemText","primary","secondary","TooltipSelect","_ref$fullWidth","setOpen","onFocus","onMouseEnter","onMouseLeave","minWidth","generateAdjustments","entries","total","currentIndex","adjustmentsFromLevelChange","newLevel","sort","a","b","adjustmentsFromNewEntry","lastValue","LevelList","baseEntries","generateEntries","setEntries","be","levelList","newEntries","ni","AddIcon","Damage","showContent","setShowContent","dieLevelList","damageLevelList","damageTrendList","newdt","splice","DamageDisplay","damageInfo","mt","mb","bgcolor","multiple","renderValue","join","_Checkbox","Divider","textAlign","_ref2$damageInfo","setLevel","diceNumber","averageDamage","fatalString","damageString","columnSpacing","ml","component","Effect","setValue","showValue","validLevels","setValidLevels","align","getAriaLabel","getAriaValueText","v","ActivityPath","_ref$level","_ref$open","mountOnEnter","Roll","_List","subheader","_ListSubheader","href","content_type","item_id","_useAppSelector2","isSave","bonusLevelList","RollBonusDisplay","rollInfo","_ref3$rollInfo","totalBonus","SelectedRoutine","createNewActivity","tempDescription","setTempDescription","displayAllRoutines","multiline","Routines","routineOptions","routineDisplays","maxWidth","_Chip","onDelete","flexWrap","listStyle","ImportExport","importState","messageSeen","setMessageSeen","textValue","setTextValue","navigator","clipboard","writeText","maxRows","NewActivity","setActivityType","StrikeSelection","SkillSelection","CantripSelection","SpellSelection","ImpulseSelection","fromEntries","setStrikeInfo","newStrikeInfo","setClass","WeaponInput","setWeapon","newNumStrikes","_Stack","isSecondary","_FormLabel","_RadioGroup","row","newIsSecondary","_Radio","_ref2$isElementalBlas","isElementalBlast","traitName","newTraits","setProficiency","setAbilityScore","setItemBonus","setSkillActivity","_useState17","_useState18","setCantrip","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","setSpell","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setImpulse","_useState31","_useState32","setIsTwoAction","_useState33","_useState34","setStrScore","_useState35","_useState36","_Fragment","Controls","Export","Donate","Contact","rel","src","alt","PF2App","useMediaQuery","send","_Container","xl","overflow","exampleRoutines","store","configureStore","routineReducer","weaknessReducer","targetReducer","sharingReducer","makeStore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","createTheme","palette","main","red","background","default","ReactDOM","render","StrictMode","Provider","ThemeProvider","_CssBaseline","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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AAK,IAAIvX,EAAI,EAAGA,EAAIssB,EAAStsB,IAC3BusB,EAAYvG,GAASuG,EAAWC,EAEpC,CAIA,OAHA5F,GAAgB0F,EAGRlV,GACN,KAAKze,EAAM9D,OACTyyB,GACEyE,EACAlY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF2P,GACEwE,EACAjY,EACA4D,EACAC,EACAkP,EACAtP,EAAQiV,EAAY1F,EACP,EAAblP,GAEF,MAEF,KAAKhf,EAAMC,MACT0uB,GACEyE,EACAlY,EACA4D,EACAC,EACAkP,EACAC,EACa,GAAblP,GAEF2P,GACE0E,EACAnY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF2P,GACE2E,EACApY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF,MAEF,KAAKhf,EAAMxE,KACTmzB,GACE2E,EACApY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF,MAEF,KAAKhf,EAAMzE,KACTozB,GACE0E,EACAnY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF,MAEF,KAAKhf,EAAM1E,KACTqzB,GACEyE,EACAlY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF,MAEF,KAAKhf,EAAM3E,KACTszB,GACEwE,EACAjY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF,MAEF,KAAKhf,EAAMvE,cACTkzB,GACEyE,EACAlY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF2P,GACEwE,EACAjY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF,MAEF,KAAKhf,EAAMtE,cACTizB,GACE0E,EACAnY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF2P,GACEyE,EACAlY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF2P,GACEwE,EACAjY,EACA4D,EACAC,EACAkP,EACAC,EACa,EAAblP,GAEF,MAEF,KAAKhf,EAAMrE,WACTgzB,GACE2E,EACApY,EACA4D,EACAC,EACAkP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","file":"static/js/main.bc47f159.chunk.js","sourcesContent":["import {\n  ACTrends,\n  profTrends,\n  damageTrends,\n  dieTrends,\n  SaveTrends,\n  statTrends,\n  itemTrends,\n  HPTrends,\n} from \"./types\";\n\ninterface defaultValue {\n  [x: number]: number;\n}\n\nexport const proficiencyValues = (levels: number[]) => {\n  return valuesFromBonusLevels(levels.concat(levels), true);\n};\n\nexport const valuesFromBonusLevels = (levels: number[], addLevel = false) => {\n  let currentValue = 0;\n  let values: defaultValue = {};\n  for (let i = 1; i <= 20; i++) {\n    for (let level of levels) {\n      if (level === i) {\n        currentValue += 1;\n      }\n    }\n    values[i] = addLevel ? currentValue + i : currentValue;\n  }\n  return values;\n};\nexport const valuesFromBonuses = (bonuses: [number, number][]) => {\n  let currentValue = 0;\n  let values: defaultValue = {};\n  for (let i = 1; i <= 20; i++) {\n    for (let bonus of bonuses) {\n      if (bonus[0] === i) {\n        currentValue += bonus[1];\n      }\n    }\n    values[i] = currentValue;\n  }\n  return values;\n};\n\nconst zero: defaultValue = {};\nconst level: defaultValue = {};\nconst halfLevel: defaultValue = {};\n\nconst trained: defaultValue = {};\nconst maxSkill: defaultValue = {};\n\nconst maxScore: defaultValue = {};\nconst score16pp: defaultValue = {};\nconst score16p: defaultValue = {};\nconst score16: defaultValue = {};\nconst score14p: defaultValue = {};\nconst score14: defaultValue = {};\nconst score12: defaultValue = {};\nconst score10: defaultValue = {};\nconst DexNimbleAC: defaultValue = {};\nconst StrSavageAC: defaultValue = {};\n\nconst martialProf: defaultValue = {};\nconst alchProf: defaultValue = {};\nconst casterProf: defaultValue = {};\n\nconst spellProf: defaultValue = {};\n\nconst weaponItem: defaultValue = {};\nconst gateAttenuator: defaultValue = {};\nconst skillItem: defaultValue = {};\nconst bomb: defaultValue = {};\nconst mutagen: defaultValue = {};\n\nconst weaponDice: defaultValue = {};\nconst spellDice: defaultValue = {};\nconst spellDice2: defaultValue = {};\nfor (let i = 1; i <= 20; i++) {\n  spellDice[i] = Math.floor((i + 1) / 2);\n  spellDice2[i] = 2 * Math.floor((i + 1) / 2);\n}\nconst runes: defaultValue = {};\nconst runes2: defaultValue = {};\nconst deadly: defaultValue = {};\n\nconst sneak: defaultValue = {};\nconst strategic: defaultValue = {};\nconst precise: defaultValue = {};\n\nconst kiStrike: defaultValue = {};\n\nconst preEdge1: defaultValue = {};\nconst preEdge2: defaultValue = {};\nconst preEdge3: defaultValue = {};\n\nconst acDice: defaultValue = {};\n\nconst martialSpec: defaultValue = {};\nconst casterSpec: defaultValue = {};\n\nconst constructDamage: defaultValue = {};\nconst nimbleDamage: defaultValue = {};\nconst savageDamage: defaultValue = {};\n\nconst bombPlusSplash: defaultValue = {};\n\nconst rage: defaultValue = {};\nconst animalrage: defaultValue = {};\nconst dragonrage: defaultValue = {};\nconst giantrage: defaultValue = {};\nconst spiritrage: defaultValue = {};\n\nconst arcaneCascade: defaultValue = {};\n\nconst overdriveSuccess: defaultValue = {};\nconst overdriveCritical: defaultValue = {};\n\nconst implementEmpower: defaultValue = {};\n\nconst fighterAB: defaultValue = {};\nconst martialAB: defaultValue = {};\nconst casterAB: defaultValue = {};\nconst alchAB: defaultValue = {};\n\nconst casterSpellAttack: defaultValue = {};\nconst casterSaveDC: defaultValue = {};\nconst classdc1: defaultValue = {};\nconst classdc2: defaultValue = {};\nconst mcspell: defaultValue = {};\n\nconst ACunarmedPro: defaultValue = {};\nconst ACathleticsProf: defaultValue = {};\n\nconst fighterStatic: defaultValue = {};\nconst fighterRanged: defaultValue = {};\nconst martialStatic: defaultValue = {};\nconst martialRanged: defaultValue = {};\nconst casterStatic: defaultValue = {};\nconst casterRanged: defaultValue = {};\n\nfor (let i = 1; i <= 20; i++) {\n  zero[i] = 0;\n  level[i] = i;\n  halfLevel[i] = Math.floor(i / 2);\n  trained[i] = i + 2;\n  maxSkill[i] = i + 2;\n\n  maxScore[i] = 4;\n  score16pp[i] = 3;\n  score16p[i] = 3;\n  score16[i] = 3;\n  score14p[i] = 2;\n  score14[i] = 2;\n  score12[i] = 1;\n  score10[i] = 0;\n  DexNimbleAC[i] = 3;\n  StrSavageAC[i] = 3;\n\n  martialProf[i] = 2;\n  alchProf[i] = 2;\n  casterProf[i] = 2;\n\n  spellProf[i] = 2;\n  classdc1[i] = i + 2;\n  classdc2[i] = i + 2;\n  mcspell[i] = i + 2;\n\n  ACunarmedPro[i] = i + 2;\n  ACathleticsProf[i] = i + 2;\n\n  weaponItem[i] = 0;\n  gateAttenuator[i] = 0;\n  skillItem[i] = 0;\n  bomb[i] = 0;\n  mutagen[i] = 1;\n\n  weaponDice[i] = 1;\n  runes[i] = 0;\n  runes2[i] = 0;\n  deadly[i] = 1;\n\n  sneak[i] = 1;\n  strategic[i] = 1;\n  precise[i] = 2;\n\n  kiStrike[i] = 1;\n\n  acDice[i] = 1;\n\n  preEdge1[i] = 1;\n  preEdge2[i] = 0;\n  preEdge3[i] = 0;\n\n  martialSpec[i] = 0;\n  casterSpec[i] = 0;\n\n  constructDamage[i] = 3;\n  nimbleDamage[i] = 2;\n  savageDamage[i] = 3;\n\n  bombPlusSplash[i] = 1;\n\n  rage[i] = 2;\n  animalrage[i] = 2;\n  dragonrage[i] = 4;\n  giantrage[i] = 6;\n  spiritrage[i] = 3;\n\n  arcaneCascade[i] = 1;\n\n  overdriveSuccess[i] = 2;\n  overdriveCritical[i] = 4;\n\n  implementEmpower[i] = 2;\n\n  if (i >= 2) {\n    weaponItem[i] = 1;\n  }\n  if (i >= 3) {\n    maxSkill[i] = i + 4;\n    gateAttenuator[i] = 1;\n    skillItem[i] = 1;\n    bomb[i] = 1;\n    mutagen[i] = 2;\n\n    bombPlusSplash[i] = 2;\n\n    overdriveSuccess[i] = 3;\n    overdriveCritical[i] = 5;\n\n    implementEmpower[i] = 4;\n  }\n  if (i >= 4) {\n    weaponDice[i] = 2;\n    acDice[i] = 2;\n\n    constructDamage[i] = 4;\n    nimbleDamage[i] = 3;\n    savageDamage[i] = 4;\n\n    bombPlusSplash[i] = 4;\n\n    DexNimbleAC[i] = 4;\n    StrSavageAC[i] = 4;\n  }\n  if (i >= 5) {\n    martialProf[i] = 4;\n    score16pp[i] = 4;\n    score16p[i] = 4;\n    score16[i] = 4;\n    score14p[i] = 3;\n    score14[i] = 3;\n    score12[i] = 2;\n    score10[i] = 1;\n\n    sneak[i] = 2;\n    strategic[i] = 2;\n    precise[i] = 3;\n  }\n  if (i >= 7) {\n    alchProf[i] = 4;\n    martialSpec[i] = 1;\n    spellProf[i] = 4;\n    maxSkill[i] = i + 6;\n\n    rage[i] = 6;\n    animalrage[i] = 5;\n    dragonrage[i] = 8;\n    giantrage[i] = 10;\n    spiritrage[i] = 7;\n\n    arcaneCascade[i] = 2;\n\n    overdriveSuccess[i] = 4;\n    overdriveCritical[i] = 6;\n  }\n  if (i >= 8) {\n    ACathleticsProf[i] = i + 4;\n\n    runes[i] = 1;\n    runes2[i] = 1;\n\n    constructDamage[i] = 8;\n    nimbleDamage[i] = 6;\n    savageDamage[i] = 9;\n\n    DexNimbleAC[i] = 6;\n    StrSavageAC[i] = 6;\n  }\n  if (i >= 9) {\n    skillItem[i] = 2;\n    classdc1[i] = i + 4;\n\n    strategic[i] = 3;\n    precise[i] = 4;\n\n    kiStrike[i] = 2;\n  }\n  if (i >= 10) {\n    weaponItem[i] = 2;\n    maxScore[i] = 5;\n    score14p[i] = 4;\n    score14[i] = 4;\n    score12[i] = 3;\n    score10[i] = 2;\n\n    runes2[i] = 2;\n\n    bombPlusSplash[i] = 7;\n\n    overdriveCritical[i] = 7;\n  }\n  if (i >= 11) {\n    casterProf[i] = 4;\n    classdc2[i] = i + 4;\n\n    gateAttenuator[i] = 2;\n    bomb[i] = 2;\n    mutagen[i] = 3;\n\n    bombPlusSplash[i] = 8;\n\n    sneak[i] = 3;\n    implementEmpower[i] = 6;\n\n    preEdge1[i] = 2;\n  }\n  if (i >= 12) {\n    weaponDice[i] = 3;\n    mcspell[i] = i + 4;\n    deadly[i] = 2;\n  }\n  if (i >= 13) {\n    martialProf[i] = 6;\n    casterSpec[i] = 1;\n\n    strategic[i] = 4;\n    precise[i] = 5;\n  }\n  if (i >= 14) {\n    ACunarmedPro[i] = i + 4;\n    ACathleticsProf[i] = i + 6;\n\n    acDice[i] = 3;\n    constructDamage[i] = 11;\n    nimbleDamage[i] = 8;\n    savageDamage[i] = 13;\n\n    DexNimbleAC[i] = 8;\n    StrSavageAC[i] = 7;\n  }\n  if (i >= 15) {\n    martialSpec[i] = 2;\n    score16pp[i] = 5;\n    score16p[i] = 5;\n    score12[i] = 4;\n    score10[i] = 3;\n    spellProf[i] = 6;\n    maxSkill[i] = i + 8;\n    runes[i] = 2;\n\n    rage[i] = 12;\n    animalrage[i] = 12;\n    dragonrage[i] = 16;\n    giantrage[i] = 18;\n    spiritrage[i] = 13;\n\n    arcaneCascade[i] = 1;\n\n    overdriveSuccess[i] = 5;\n    overdriveCritical[i] = 8;\n  }\n  if (i >= 16) {\n    weaponItem[i] = 3;\n    runes2[i] = 3;\n  }\n  if (i >= 17) {\n    score16pp[i] = 6;\n    maxScore[i] = 6;\n    skillItem[i] = 3;\n    classdc1[i] = i + 6;\n    bomb[i] = 3;\n    mutagen[i] = 4;\n    bombPlusSplash[i] = 10;\n\n    sneak[i] = 4;\n    strategic[i] = 5;\n    precise[i] = 6;\n\n    kiStrike[i] = 3;\n\n    preEdge2[i] = 1;\n\n    overdriveSuccess[i] = 6;\n    overdriveCritical[i] = 9;\n  }\n  if (i >= 18) {\n    mcspell[i] = i + 6;\n  }\n  if (i >= 19) {\n    weaponDice[i] = 4;\n    spellProf[i] = 8;\n    classdc2[i] = i + 6;\n    deadly[i] = 3;\n\n    implementEmpower[i] = 8;\n\n    preEdge1[i] = 3;\n    preEdge2[i] = 2;\n    preEdge3[i] = 1;\n  }\n  if (i >= 20) {\n    maxScore[i] = 7;\n    score10[i] = 4;\n    bombPlusSplash[i] = 11;\n\n    overdriveCritical[i] = 10;\n  }\n\n  fighterAB[i] = i + martialProf[i] + 2;\n  martialAB[i] = i + martialProf[i];\n  casterAB[i] = i + casterProf[i];\n  alchAB[i] = i + alchProf[i];\n  casterSpellAttack[i] = i + spellProf[i];\n  casterSaveDC[i] = 10 + i + spellProf[i] + maxScore[i];\n\n  fighterStatic[i] = maxScore[i] + (martialSpec[i] * (martialProf[i] + 2)) / 2;\n  fighterRanged[i] = (martialSpec[i] * (martialProf[i] + 2)) / 2;\n  martialStatic[i] = maxScore[i] + (martialSpec[i] * martialProf[i]) / 2;\n  martialRanged[i] = (martialSpec[i] * martialProf[i]) / 2;\n  casterStatic[i] = score16[i] + (casterSpec[i] * casterProf[i]) / 2;\n  casterRanged[i] = (casterSpec[i] * casterProf[i]) / 2;\n}\nexport const profTrendValues = {\n  [profTrends.UNTRAINED]: valuesFromBonusLevels([]),\n  [profTrends.TRAINED]: proficiencyValues([1]),\n  [profTrends.FIGHTERWEAPON]: proficiencyValues([1, 1, 5, 13]),\n  [profTrends.MARTIALWEAPON]: proficiencyValues([1, 5, 13]),\n  [profTrends.CASTERWEAPON]: proficiencyValues([1, 11]),\n  [profTrends.ALCHWEAPON]: proficiencyValues([1, 7]),\n  [profTrends.CASTERSPELL]: proficiencyValues([1, 7, 15, 19]),\n  [profTrends.CLASSDC1]: proficiencyValues([1, 9, 17]),\n  [profTrends.CLASSDC2]: proficiencyValues([1, 11, 19]),\n  [profTrends.MCSPELL]: proficiencyValues([1, 12, 18]),\n  [profTrends.MAXSKILL]: proficiencyValues([1, 3, 7, 15]),\n  [profTrends.ANIMALCOMPANION]: proficiencyValues([1, 14]),\n  [profTrends.SAVAGEACATHLETICS]: proficiencyValues([1, 4, 14]),\n};\nexport const statTrendValues = {\n  [statTrends.AS10]: valuesFromBonusLevels([]),\n  [statTrends.AS18]: valuesFromBonusLevels([1, 1, 1, 1, 10, 20]),\n  [statTrends.AS18a]: valuesFromBonusLevels([1, 1, 1, 1, 10, 17, 20]),\n  [statTrends.AS16a]: valuesFromBonusLevels([1, 1, 1, 5, 15, 17]),\n  [statTrends.AS16pp]: valuesFromBonusLevels([1, 1, 1, 5, 15]),\n  [statTrends.AS16p]: valuesFromBonusLevels([1, 1, 1, 5]),\n  [statTrends.AS14pp]: valuesFromBonusLevels([1, 1, 5, 10, 20]),\n  [statTrends.AS14p]: valuesFromBonusLevels([1, 1, 5, 10]),\n  [statTrends.AS12p]: valuesFromBonusLevels([1, 5, 10, 15]),\n  [statTrends.AS10p]: valuesFromBonusLevels([5, 10, 15, 20]),\n  [statTrends.NIMBLEAC]: DexNimbleAC,\n  [statTrends.SAVAGEAC]: StrSavageAC,\n};\nexport const itemTrendValues = {\n  [itemTrends.NONE]: valuesFromBonusLevels([]),\n  [itemTrends.WEAPON]: weaponItem,\n  [itemTrends.Gate_Attenuator]: gateAttenuator,\n  [itemTrends.SKILL]: skillItem,\n  [itemTrends.BOMB]: bomb,\n  [itemTrends.MUTAGEN]: mutagen,\n};\n\nexport const MAPvalues = {\n  \"0 (0x-5)\": 0,\n  \"-5 (1x-5)\": -5,\n  \"-10 (2x-5)\": -10,\n  \"0 (0x-4)\": 0,\n  \"-4 (1x-4)\": -4,\n  \"-8 (2x-4)\": -8,\n  \"0 (0x-3)\": 0,\n  \"-3 (1x-3)\": -3,\n  \"-6 (2x-3)\": -6,\n  \"0 (0x-2)\": 0,\n  \"-2 (1x-2)\": -2,\n  \"-4 (2x-2)\": -4,\n  \"0 (0x-1)\": 0,\n  \"-1 (1x-1)\": -1,\n  \"-2 (2x-1)\": -2,\n};\n\nexport const dieTrendValues = {\n  [dieTrends.NONE]: zero,\n  [dieTrends.WEAPON]: weaponDice,\n  [dieTrends.ELEMENTALBLAST]: valuesFromBonusLevels([1, 5, 9, 13, 17]),\n  [dieTrends.SPELLLEVEL1]: spellDice,\n  [dieTrends.SPELLLEVEL2]: spellDice2,\n  [dieTrends.LEVEL]: level,\n  [dieTrends.HALFLEVEL]: halfLevel,\n  [dieTrends.RUNE]: runes,\n  [dieTrends.RUNE2]: runes2,\n  [dieTrends.DEADLY]: deadly,\n  [dieTrends.BOMB]: mutagen,\n  [dieTrends.SNEAK]: sneak,\n  [dieTrends.STRATEGIC]: strategic,\n  [dieTrends.PRECISE]: precise,\n  [dieTrends.PRECISIONEDGE]: preEdge1,\n  [dieTrends.PRECISIONEDGE2]: preEdge2,\n  [dieTrends.PRECISIONEDGE3]: preEdge3,\n  [dieTrends.KISTRIKE]: kiStrike,\n  [dieTrends.ANIMALCOMPANION]: acDice,\n};\n\nexport const damageTrendValues = {\n  ...statTrendValues,\n  [damageTrends.NONE]: zero,\n  [damageTrends.FIGHTERWEAPONSPEC]: fighterRanged,\n  [damageTrends.MARTIALWEAPONSPEC]: martialRanged,\n  [damageTrends.CASTERWEAPONSPEC]: casterRanged,\n  [damageTrends.WEAPON]: weaponDice,\n  [damageTrends.SPELLLEVEL1]: spellDice,\n  [damageTrends.LEVEL]: level,\n  [damageTrends.HALFLEVEL]: halfLevel,\n  [damageTrends.BOMB]: mutagen,\n  [damageTrends.BOMBPLUS]: bombPlusSplash,\n  [damageTrends.RAGE]: rage,\n  [damageTrends.ANIMALRAGE]: animalrage,\n  [damageTrends.DRAGONRAGE]: dragonrage,\n  [damageTrends.GIANTRAGE]: giantrage,\n  [damageTrends.SPIRITRAGE]: spiritrage,\n  [damageTrends.PRECISE]: precise,\n  [damageTrends.ARCANECASCADE]: arcaneCascade,\n  [damageTrends.OVERDRIVES]: overdriveSuccess,\n  [damageTrends.OVERDRIVEC]: overdriveCritical,\n  [damageTrends.IMPLEMENT]: implementEmpower,\n  [damageTrends.CONSTRUCT]: constructDamage,\n  [damageTrends.NIMBLE]: nimbleDamage,\n  [damageTrends.SAVAGE]: savageDamage,\n};\n\nconst extremeAC: defaultValue = {\n  \"-1\": 18,\n  0: 19,\n  1: 19,\n  2: 21,\n  3: 22,\n  4: 24,\n  5: 25,\n  6: 27,\n  7: 28,\n  8: 30,\n  9: 31,\n  10: 33,\n  11: 34,\n  12: 36,\n  13: 37,\n  14: 39,\n  15: 40,\n  16: 42,\n  17: 43,\n  18: 45,\n  19: 46,\n  20: 48,\n  21: 49,\n  22: 51,\n  23: 52,\n  24: 54,\n};\nconst highAC = { ...extremeAC };\nfor (let level in highAC) highAC[level] -= 3;\n\nconst moderateAC = { ...extremeAC };\nfor (let level in moderateAC) moderateAC[level] -= 4;\n\nconst lowAC = { ...extremeAC };\nfor (let level in lowAC) lowAC[level] -= 6;\n\nexport const defaultACs = {\n  [ACTrends.EXTREME]: extremeAC,\n  [ACTrends.HIGH]: highAC,\n  [ACTrends.MODERATE]: moderateAC,\n  [ACTrends.LOW]: lowAC,\n};\n\nconst extremeSaves: defaultValue = {\n  \"-1\": 9,\n  0: 10,\n  1: 11,\n  2: 12,\n  3: 14,\n  4: 15,\n  5: 17,\n  6: 18,\n  7: 20,\n  8: 21,\n  9: 23,\n  10: 24,\n  11: 26,\n  12: 27,\n  13: 29,\n  14: 30,\n  15: 32,\n  16: 33,\n  17: 35,\n  18: 36,\n  19: 38,\n  20: 39,\n  21: 41,\n  22: 43,\n  23: 44,\n  24: 46,\n};\nconst highSaves: defaultValue = {\n  \"-1\": 8,\n  0: 9,\n  1: 10,\n  2: 11,\n  3: 12,\n  4: 14,\n  5: 15,\n  6: 17,\n  7: 18,\n  8: 19,\n  9: 21,\n  10: 22,\n  11: 24,\n  12: 25,\n  13: 26,\n  14: 28,\n  15: 29,\n  16: 30,\n  17: 32,\n  18: 33,\n  19: 35,\n  20: 36,\n  21: 38,\n  22: 39,\n  23: 40,\n  24: 42,\n};\nconst moderateSaves: defaultValue = {\n  \"-1\": 5,\n  0: 6,\n  1: 7,\n  2: 8,\n  3: 9,\n  4: 11,\n  5: 12,\n  6: 14,\n  7: 15,\n  8: 16,\n  9: 18,\n  10: 19,\n  11: 21,\n  12: 22,\n  13: 23,\n  14: 25,\n  15: 26,\n  16: 28,\n  17: 29,\n  18: 30,\n  19: 32,\n  20: 33,\n  21: 35,\n  22: 36,\n  23: 37,\n  24: 38,\n};\nconst lowSaves: defaultValue = {\n  \"-1\": 2,\n  0: 3,\n  1: 4,\n  2: 5,\n  3: 6,\n  4: 8,\n  5: 9,\n  6: 11,\n  7: 12,\n  8: 13,\n  9: 15,\n  10: 16,\n  11: 18,\n  12: 19,\n  13: 20,\n  14: 22,\n  15: 23,\n  16: 25,\n  17: 26,\n  18: 27,\n  19: 29,\n  20: 30,\n  21: 32,\n  22: 33,\n  23: 34,\n  24: 36,\n};\nconst terribleSaves: defaultValue = {\n  \"-1\": 0,\n  0: 1,\n  1: 2,\n  2: 3,\n  3: 4,\n  4: 6,\n  5: 7,\n  6: 8,\n  7: 10,\n  8: 11,\n  9: 12,\n  10: 14,\n  11: 15,\n  12: 16,\n  13: 18,\n  14: 19,\n  15: 20,\n  16: 22,\n  17: 23,\n  18: 24,\n  19: 26,\n  20: 27,\n  21: 28,\n  22: 30,\n  23: 31,\n  24: 32,\n};\nexport const defaultSaves = {\n  [SaveTrends.EXTREME]: extremeSaves,\n  [SaveTrends.HIGH]: highSaves,\n  [SaveTrends.MODERATE]: moderateSaves,\n  [SaveTrends.LOW]: lowSaves,\n  [SaveTrends.TERRIBLE]: terribleSaves,\n};\nexport const standardDC: defaultValue = {\n  \"-1\": 12,\n  0: 14,\n  1: 15,\n  2: 16,\n  3: 18,\n  4: 19,\n  5: 20,\n  6: 22,\n  7: 23,\n  8: 24,\n  9: 26,\n  10: 27,\n  11: 28,\n  12: 30,\n  13: 31,\n  14: 32,\n  15: 34,\n  16: 35,\n  17: 36,\n  18: 38,\n  19: 39,\n  20: 40,\n  21: 42,\n  22: 44,\n  23: 46,\n  24: 48,\n  25: 50,\n} as const;\n\nconst lowHP: defaultValue = {\n  \"-1\": 5,\n  0: 12,\n  1: 15,\n  2: 23,\n  3: 34,\n  4: 45,\n  5: 56,\n  6: 71,\n  7: 86,\n  8: 101,\n  9: 116,\n  10: 131,\n  11: 146,\n  12: 161,\n  13: 176,\n  14: 191,\n  15: 206,\n  16: 221,\n  17: 236,\n  18: 251,\n  19: 266,\n  20: 281,\n  21: 300,\n  22: 323,\n  23: 345,\n  24: 375,\n} as const;\n\nconst moderateHP: defaultValue = {\n  \"-1\": 7,\n  0: 15,\n  1: 20,\n  2: 30,\n  3: 45,\n  4: 60,\n  5: 75,\n  6: 95,\n  7: 115,\n  8: 135,\n  9: 155,\n  10: 175,\n  11: 195,\n  12: 215,\n  13: 235,\n  14: 255,\n  15: 275,\n  16: 295,\n  17: 315,\n  18: 335,\n  19: 355,\n  20: 375,\n  21: 400,\n  22: 430,\n  23: 460,\n  24: 500,\n} as const;\n\nconst highHP: defaultValue = {\n  \"-1\": 9,\n  0: 18,\n  1: 25,\n  2: 38,\n  3: 56,\n  4: 75,\n  5: 94,\n  6: 119,\n  7: 144,\n  8: 169,\n  9: 194,\n  10: 219,\n  11: 244,\n  12: 269,\n  13: 294,\n  14: 319,\n  15: 344,\n  16: 369,\n  17: 394,\n  18: 419,\n  19: 444,\n  20: 469,\n  21: 499,\n  22: 538,\n  23: 575,\n  24: 625,\n} as const;\n\nexport const defaultHP = {\n  [HPTrends.HIGH]: highHP,\n  [HPTrends.MODERATE]: moderateHP,\n  [HPTrends.LOW]: lowHP,\n};\n","export const graphTypes = {\n  DISTRIBUTION: \"Damage Distribution\",\n  PMDEFENSE: \"+/- AC/Save Bonus\",\n  PMRES: \"+/- Resistance/Weakness\",\n} as const;\nexport type GraphType = typeof graphTypes[keyof typeof graphTypes];\n\nexport const importStates = {\n  Importing: \"Importing\",\n  Successful: \"Successful\",\n  Failure: \"Failure\",\n  MessageSeen: \"Message Seen\",\n} as const;\nexport type ImportStates = typeof importStates[keyof typeof importStates];\n\nexport const ACTrends = {\n  LOW: \"Low\",\n  MODERATE: \"Moderate\",\n  HIGH: \"High\",\n  EXTREME: \"Extreme\",\n} as const;\nexport type ACTrend = typeof ACTrends[keyof typeof ACTrends];\n\nexport const SaveTrends = {\n  TERRIBLE: \"Terrible\",\n  LOW: \"Low\",\n  MODERATE: \"Moderate\",\n  HIGH: \"High\",\n  EXTREME: \"Extreme\",\n} as const;\nexport type SaveTrend = typeof SaveTrends[keyof typeof SaveTrends];\n\nexport const HPTrends = {\n  LOW: \"Low\",\n  MODERATE: \"Moderate\",\n  HIGH: \"High\",\n} as const;\nexport type HPTrend = typeof HPTrends[keyof typeof HPTrends];\n\nexport const conditions = {\n  ALWAYS: \"Always\",\n  CRIT: \"On Crit\",\n  SUCC: \"On Success\",\n  FAIL: \"On Failure\",\n  CRIF: \"On Crit Fail\",\n  AT_LEAST_SUCC: \"Success or better\",\n  AT_LEAST_FAIL: \"Failure or better\",\n  FAIL_WORSE: \"Failure or worse\",\n  SUCC_WORSE: \"Success or worse\",\n} as const;\nexport type Condition = typeof conditions[keyof typeof conditions];\n\nexport const rollTypes = {\n  NORMAL: \"Normal\",\n  ADVANTAGE: \"Advantage\",\n  DISADVANTAGE: \"Disadvantage\",\n} as const;\nexport type RollType = typeof rollTypes[keyof typeof rollTypes];\n\nexport const activityTypes = {\n  STRIKE: \"Strike\",\n  SAVE: \"Save\",\n  SKILL: \"Skill Check\",\n  SPELLATTACK: \"Spell Attack\",\n} as const;\nexport type ActivityType = typeof activityTypes[keyof typeof activityTypes];\n\nexport const profTrends = {\n  UNTRAINED: \"Untrained\",\n  TRAINED: \"Trained Proficiency\",\n  FIGHTERWEAPON: \"Fighter Weapon (1, 5, 13)\",\n  MARTIALWEAPON: \"Martial Weapon (5, 13)\",\n  CASTERWEAPON: \"Caster Weapon (11)\",\n  ALCHWEAPON: \"Alchemist Weapon (7)\",\n  CASTERSPELL: \"Caster Spell (7, 15, 19)\",\n  CLASSDC1: \"Class/Spell (9, 17)\",\n  CLASSDC2: \"Class/Spell (11, 19)\",\n  MCSPELL: \"MC Spell (12, 18)\",\n  MAXSKILL: \"Max skill (3, 7, 15)\",\n  ANIMALCOMPANION: \"Animal/Construct Companion (14)\",\n  SAVAGEACATHLETICS: \"Construct/Savage AC Atheletics (8, 14)\",\n} as const;\nexport type ProfTrend = typeof profTrends[keyof typeof profTrends];\n\nexport const statTrends = {\n  AS10: \"10\",\n  AS18a: \"18 to 24 apex(17)\",\n  AS18: \"18 to 22\",\n  AS16a: \"16 to 22 apex(17)\",\n  AS16pp: \"16 to 20\",\n  AS16p: \"16 to 18\",\n  AS14pp: \"14 to 20\",\n  AS14p: \"14 to 18\",\n  AS12p: \"12 to 18\",\n  AS10p: \"10 to 18\",\n  NIMBLEAC: \"Dex 16 Nimble AC\",\n  SAVAGEAC: \"Str 16 Construct/Savage AC\",\n} as const;\nexport type StatTrend = typeof statTrends[keyof typeof statTrends];\n\nexport const itemTrends = {\n  NONE: \"None\",\n  WEAPON: \"Weapon (2, 10, 16)\",\n  Gate_Attenuator: \"Gate Attenuator (3, 11)\",\n  SKILL: \"Skill (3, 9, 17)\",\n  BOMB: \"Bomb (3, 11, 17)\",\n  MUTAGEN: \"Mutagen (1, 3, 11, 17)\",\n} as const;\nexport type ItemTrend = typeof itemTrends[keyof typeof itemTrends];\n\nexport const MAPs = {\n  N1: \"0 (0x-5)\",\n  N2: \"-5 (1x-5)\",\n  N3: \"-10 (2x-5)\",\n  A1: \"0 (0x-4)\",\n  A2: \"-4 (1x-4)\",\n  A3: \"-8 (2x-4)\",\n  R1: \"0 (0x-3)\",\n  R2: \"-3 (1x-3)\",\n  R3: \"-6 (2x-3)\",\n  RA1: \"0 (0x-2)\",\n  RA2: \"-2 (1x-2)\",\n  RA3: \"-4 (2x-2)\",\n  RAA1: \"0 (0x-1)\",\n  RAA2: \"-1 (1x-1)\",\n  RAA3: \"-2 (2x-1)\",\n} as const;\nexport type MAP = typeof MAPs[keyof typeof MAPs];\n\nexport const nextMAPs = {\n  \"0 (0x-5)\": \"-5 (1x-5)\",\n  \"-5 (1x-5)\": \"-10 (2x-5)\",\n  \"-10 (2x-5)\": \"-10 (2x-5)\",\n  \"0 (0x-4)\": \"-4 (1x-4)\",\n  \"-4 (1x-4)\": \"-8 (2x-4)\",\n  \"-8 (2x-4)\": \"-8 (2x-4)\",\n  \"0 (0x-3)\": \"-3 (1x-3)\",\n  \"-3 (1x-3)\": \"-6 (2x-3)\",\n  \"-6 (2x-3)\": \"-6 (2x-3)\",\n  \"0 (0x-2)\": \"-2 (1x-2)\",\n  \"-2 (1x-2)\": \"-4 (2x-2)\",\n  \"-4 (2x-2)\": \"-4 (2x-2)\",\n  \"0 (0x-1)\": \"-1 (1x-1)\",\n  \"-1 (1x-1)\": \"-2 (2x-1)\",\n  \"-2 (2x-1)\": \"-2 (2x-1)\",\n} as const;\n\nexport const defenses = {\n  AC: \"AC\",\n  FORT: \"Fort\",\n  REF: \"Ref\",\n  WILL: \"Will\",\n  PER: \"Perception\",\n  selfDC: \"Self Standard DC\",\n  targetDC: \"Target Standard DC\",\n} as const;\nexport type Defense = typeof defenses[keyof typeof defenses];\n\nexport const dCond = {\n  STRIKE: \"x1 hit, x2 crit\",\n  BASIC: \"Basic save\",\n  ALWAYS: \"Always\",\n  CRIT: \"On Crit\",\n  SUCC: \"On Success\",\n  FAIL: \"On Failure\",\n  CRIF: \"On Crit Fail\",\n  AT_LEAST_SUCC: \"Success or better\",\n  AT_LEAST_FAIL: \"Failure or better\",\n  FAIL_WORSE: \"Failure or worse\",\n  SUCC_WORSE: \"Success or worse\",\n} as const;\nexport type DamageCond = typeof dCond[keyof typeof dCond];\n\nexport const dieTrends = {\n  NONE: \"None\",\n  WEAPON: \"Weapon (1, 4, 12, 19)\",\n  ELEMENTALBLAST: \"Elemental Blast (1, 5, 9, 13, 17)\",\n  SPELLLEVEL1: \"1 x Spell Level\",\n  SPELLLEVEL2: \"2 x Spell Level\",\n  LEVEL: \"Level\",\n  HALFLEVEL: \"1/2 Level\",\n  RUNE: \"Runes (8, 15)\",\n  RUNE2: \"Runes (8, 10, 16)\",\n  DEADLY: \"Deadly (1, 12, 19)\",\n  BOMB: \"Bomb (1, 3, 11, 17)\",\n  SNEAK: \"Sneak Attack (1, 5, 11, 17)\",\n  STRATEGIC: \"Strategic Strike (1, 5, 9, 13, 17)\",\n  PRECISE: \"Precise Strike (1, 1, 5, 9, 13, 17)\",\n  PRECISIONEDGE: \"Precision Edge 1(1, 11, 19)\",\n  PRECISIONEDGE2: \"Precision Edge 2(17, 19)\",\n  PRECISIONEDGE3: \"Precision Edge 3(19)\",\n  KISTRIKE: \"Ki Strike (1, 9, 17)\",\n  ANIMALCOMPANION: \"Animal/Construct Companion (1, 4, 14)\",\n} as const;\nexport type DieTrend = typeof dieTrends[keyof typeof dieTrends];\n\nexport const damageTrends = {\n  NONE: \"None\",\n  FIGHTERWEAPONSPEC: \"Fighter Weapon Specialization\",\n  MARTIALWEAPONSPEC: \"Martial Weapon Specializaton\",\n  CASTERWEAPONSPEC: \"Caster Weapon Specializaton\",\n  ...statTrends,\n  WEAPON: \"Weapon (1, 4, 12, 19)\",\n  SPELLLEVEL1: \"1 x Spell Level\",\n  LEVEL: \"Level\",\n  HALFLEVEL: \"1/2 Level\",\n  BOMB: \"Bomb Splash (1, 3, 11, 17)\",\n  BOMBPLUS: \"Max Int Calculated/Expanded Splash\",\n  RAGE: \"Rage\",\n  ANIMALRAGE: \"Animal Rage\",\n  DRAGONRAGE: \"Dragon Rage\",\n  GIANTRAGE: \"Giant Rage\",\n  SPIRITRAGE: \"Spirit Rage\",\n  PRECISE: \"Precise Strike (1, 1, 5, 9, 13, 17)\",\n  ARCANECASCADE: \"Arcane Cascade\",\n  OVERDRIVES: \"Overdrive Success\",\n  OVERDRIVEC: \"Overdrive Critical\",\n  IMPLEMENT: \"Implement's Empowerment\",\n  CONSTRUCT: \"Construct Companion Damage\",\n  NIMBLE: \"Str 14 Nimble AC Damage\",\n  SAVAGE: \"Str 16 Savage AC Damage\",\n} as const;\nexport type DamageTrend = typeof damageTrends[keyof typeof damageTrends];\n\nexport const damageTypes = {\n  NONE: \"None\",\n  B: \"bludgeoning\",\n  P: \"piercing\",\n  S: \"slashing\",\n  BLEED: \"bleed\",\n  FIRE: \"fire\",\n  COLD: \"cold\",\n  MENTAL: \"mental\",\n  FORCE: \"force\",\n  PRECISION: \"precision\",\n} as const;\nexport type DamageType = typeof damageTypes[keyof typeof damageTypes];\n\nexport const materials = {\n  NONE: \"none\",\n  COLD_IRON: \"cold iron\",\n  SILVER: \"silver\",\n  ADAMANTINE: \"adamantine\",\n} as const;\nexport type Material = typeof materials[keyof typeof materials];\n\nexport const effectStateTypes = {\n  FLATFOOT: \"Flatfooted\",\n  PRONE: \"Prone\",\n  GRAPPLED: \"Grappled\",\n  RESTRAINED: \"Restrained\",\n} as const;\nexport type EffectStateType =\n  typeof effectStateTypes[keyof typeof effectStateTypes];\nexport const effectValueTypes = {\n  FRIGHTENED: \"Frightened\",\n  CLUMSY: \"Clumsy\",\n  BONUSC1: \"Cicumstance Bonus to next attack\",\n  BONUSSA: \"Status Bonus to all attacks\",\n} as const;\nexport type EffectValueType =\n  typeof effectValueTypes[keyof typeof effectValueTypes];\nexport const effectTypes = {\n  ...effectStateTypes,\n  ...effectValueTypes,\n} as const;\nexport type EffectType = EffectStateType | EffectValueType;\n\nexport const whenConditions = {\n  Always: \"Always\",\n\n  ...effectStateTypes,\n  ...effectValueTypes,\n} as const;\nexport type WhenConditions = typeof whenConditions[keyof typeof whenConditions];\n\nexport type TargetState = {\n  [key in EffectValueType]: number;\n} & {\n  [key in EffectStateType]: boolean;\n} & {\n  persistentDamages: {\n    [key in DamageType]?: {\n      material: Material;\n      staticDamage: number;\n      damageDist: number[];\n    };\n  };\n};\n\nexport const diceNums = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  10: 10,\n  11: 11,\n  12: 12,\n  13: 13,\n  14: 14,\n  15: 15,\n  16: 16,\n  17: 17,\n  18: 18,\n  19: 19,\n  20: 20,\n} as const;\n\nexport const diceSizes = {\n  \"4\": 4,\n  \"6\": 6,\n  \"8\": 8,\n  \"10\": 10,\n  \"12\": 12,\n} as const;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {\n  createEntityAdapter,\n  createSlice,\n  EntityId,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { damageTypes, materials } from \"../Model/types\";\nimport { RootState } from \"../App/store\";\n\nexport interface Weakness {\n  id: number;\n  type:\n    | typeof damageTypes[keyof typeof damageTypes]\n    | typeof materials[keyof typeof materials];\n  value: number;\n}\nexport const weaknessAdapter = createEntityAdapter<Weakness>();\n\nlet weakness = 0;\n\nexport const weaknessesSlice = createSlice({\n  name: \"weaknesses\",\n  initialState: weaknessAdapter.getInitialState(),\n  reducers: {\n    weaknessAdded: weaknessAdapter.addOne,\n    weaknessUpdated: weaknessAdapter.updateOne,\n    weaknessCreated: {\n      reducer(state, action: PayloadAction<Weakness>) {\n        const { id, type, value } = action.payload;\n        weaknessAdapter.addOne(state, { id, type, value });\n      },\n      prepare({ parentId, type, value }) {\n        const id = ++weakness;\n        return {\n          payload: {\n            id,\n            parentId,\n            type,\n            value,\n          },\n        };\n      },\n    },\n    weaknessRemoved(\n      state,\n      action: PayloadAction<{ parentId: EntityId; id: EntityId }>\n    ) {\n      weaknessAdapter.removeOne(state, action.payload.id);\n    },\n  },\n});\n\nexport const {\n  weaknessRemoved,\n  weaknessCreated,\n  weaknessAdded,\n  weaknessUpdated,\n} = weaknessesSlice.actions;\n\nexport default weaknessesSlice.reducer;\n\nexport const {\n  selectById: selectweaknessById,\n  selectIds: selectweaknessIds,\n  selectEntities: selectweaknessEntities,\n  selectAll: selectAllweaknesses,\n  selectTotal: selectTotalweaknesses,\n} = weaknessAdapter.getSelectors((state: RootState) => state.weaknesses);\n","import { MenuItem } from \"@mui/material\";\nimport React from \"react\";\n\nimport {\n  activityTypes,\n  profTrends,\n  conditions,\n  damageTrends,\n  damageTypes,\n  dCond,\n  defenses,\n  diceSizes,\n  dieTrends,\n  effectStateTypes,\n  effectValueTypes,\n  MAPs,\n  materials,\n  rollTypes,\n  statTrends,\n  itemTrends,\n  ACTrends,\n  SaveTrends,\n  graphTypes,\n} from \"./types\";\n\nexport const makeOptions = (options: object): JSX.Element[] => {\n  let element: keyof typeof options;\n  const optionElements: JSX.Element[] = [];\n  // @ts-ignore\n  for (element in options) {\n    optionElements.push(\n      <MenuItem key={element} value={options[element]}>\n        {options[element]}\n      </MenuItem>\n    );\n  }\n  return optionElements;\n};\n\nexport const arrayOptions = (options: string[]): JSX.Element[] => {\n  const optionElements: JSX.Element[] = [];\n  for (let element of options) {\n    optionElements.push(\n      <MenuItem key={element} value={element}>\n        {element}\n      </MenuItem>\n    );\n  }\n  return optionElements;\n};\n\nlet gt: keyof typeof graphTypes;\nexport const graphTypeOptions: JSX.Element[] = [];\nfor (gt in graphTypes) {\n  graphTypeOptions.push(<option key={gt}>{graphTypes[gt]}</option>);\n}\n\nexport const levelOptions: JSX.Element[] = [];\nfor (let level = 1; level <= 20; level++) {\n  levelOptions.push(\n    <MenuItem key={level} value={level}>\n      {level}\n    </MenuItem>\n  );\n}\n\nlet c: keyof typeof conditions;\nexport const conditionOptions: JSX.Element[] = [];\nfor (c in conditions) {\n  conditionOptions.push(\n    <MenuItem key={c} value={conditions[c]}>\n      {conditions[c]}\n    </MenuItem>\n  );\n}\nlet rt: keyof typeof rollTypes;\nexport const rollOptions: JSX.Element[] = [];\nfor (rt in rollTypes) {\n  rollOptions.push(\n    <MenuItem key={rt} value={rollTypes[rt]}>\n      {rollTypes[rt]}\n    </MenuItem>\n  );\n}\n\nlet at: keyof typeof activityTypes;\nexport const activityTypeOptions: JSX.Element[] = [];\nfor (at in activityTypes) {\n  activityTypeOptions.push(\n    <MenuItem key={at} value={activityTypes[at]}>\n      {activityTypes[at]}\n    </MenuItem>\n  );\n}\n\nlet pt: keyof typeof profTrends;\nexport const profTrendOptions: JSX.Element[] = [];\nfor (pt in profTrends) {\n  profTrendOptions.push(\n    <MenuItem key={pt} value={profTrends[pt]}>\n      {profTrends[pt]}\n    </MenuItem>\n  );\n}\nlet st: keyof typeof statTrends;\nexport const statTrendOptions: JSX.Element[] = [];\nfor (st in statTrends) {\n  statTrendOptions.push(\n    <MenuItem key={st} value={statTrends[st]}>\n      {statTrends[st]}\n    </MenuItem>\n  );\n}\nlet it: keyof typeof itemTrends;\nexport const itemBTrendOptions: JSX.Element[] = [];\nfor (it in itemTrends) {\n  itemBTrendOptions.push(\n    <MenuItem key={it} value={itemTrends[it]}>\n      {itemTrends[it]}\n    </MenuItem>\n  );\n}\n\nlet m: keyof typeof MAPs;\nexport const MAPOptions: JSX.Element[] = [];\nfor (m in MAPs) {\n  MAPOptions.push(\n    <MenuItem key={m} value={MAPs[m]}>\n      {MAPs[m]}\n    </MenuItem>\n  );\n}\nlet d: keyof typeof defenses;\nexport const defenseOptions: JSX.Element[] = [];\nfor (d in defenses) {\n  defenseOptions.push(\n    <MenuItem key={d} value={defenses[d]}>\n      {defenses[d]}\n    </MenuItem>\n  );\n}\nlet act: keyof typeof ACTrends;\nexport const ACOptions: JSX.Element[] = [];\nfor (act in ACTrends) {\n  ACOptions.push(\n    <MenuItem key={act} value={ACTrends[act]}>\n      {ACTrends[act]}\n    </MenuItem>\n  );\n}\nlet svt: keyof typeof SaveTrends;\nexport const SaveOptions: JSX.Element[] = [];\nfor (svt in SaveTrends) {\n  SaveOptions.push(\n    <MenuItem key={svt} value={SaveTrends[svt]}>\n      {SaveTrends[svt]}\n    </MenuItem>\n  );\n}\n\nlet dc: keyof typeof dCond;\nexport const damageConditionOptions: JSX.Element[] = [];\nfor (dc in dCond) {\n  damageConditionOptions.push(\n    <MenuItem key={dc} value={dCond[dc]}>\n      {dCond[dc]}\n    </MenuItem>\n  );\n}\nlet dieT: keyof typeof dieTrends;\nexport const dieTrendOptions: JSX.Element[] = [];\nfor (dieT in dieTrends) {\n  dieTrendOptions.push(\n    <MenuItem key={dieT} value={dieTrends[dieT]}>\n      {dieTrends[dieT]}\n    </MenuItem>\n  );\n}\nlet ds: keyof typeof diceSizes;\nexport const diceSizeOptions: JSX.Element[] = [];\nfor (ds in diceSizes) {\n  diceSizeOptions.push(\n    <MenuItem key={ds} value={ds}>\n      {\"d\" + ds}\n    </MenuItem>\n  );\n}\nlet damT: keyof typeof damageTrends;\nexport const damageTrendOptions: JSX.Element[] = [];\nfor (damT in damageTrends) {\n  damageTrendOptions.push(\n    <MenuItem key={damT} value={damageTrends[damT]}>\n      {damageTrends[damT]}\n    </MenuItem>\n  );\n}\n\nlet dt: keyof typeof damageTypes;\nexport const damageTypeOptions: JSX.Element[] = [];\nfor (dt in damageTypes) {\n  damageTypeOptions.push(\n    <MenuItem key={dt} value={damageTypes[dt]}>\n      {damageTypes[dt]}\n    </MenuItem>\n  );\n}\nlet mat: keyof typeof materials;\nexport const materialOptions: JSX.Element[] = [];\nfor (mat in materials) {\n  materialOptions.push(\n    <MenuItem key={mat} value={materials[mat]}>\n      {materials[mat]}\n    </MenuItem>\n  );\n}\nexport const weaknessOptions: JSX.Element[] = [];\nfor (dt in damageTypes) {\n  weaknessOptions.push(\n    <MenuItem key={dt} value={damageTypes[dt]}>\n      {damageTypes[dt]}\n    </MenuItem>\n  );\n}\nfor (mat in materials) {\n  if (materials[mat] === materials.NONE) continue;\n  weaknessOptions.push(\n    <MenuItem key={mat} value={materials[mat]}>\n      {materials[mat]}\n    </MenuItem>\n  );\n}\n\nexport const multiplierOptions: JSX.Element[] = [];\nfor (let m of [0.5, 1, 2]) {\n  multiplierOptions.push(\n    <MenuItem key={m} value={m}>\n      {m}\n    </MenuItem>\n  );\n}\n\nexport const effectTypeOptions: JSX.Element[] = [];\nlet est: keyof typeof effectStateTypes;\nfor (est in effectStateTypes) {\n  effectTypeOptions.push(\n    <MenuItem key={est} value={effectStateTypes[est]}>\n      {effectStateTypes[est]}\n    </MenuItem>\n  );\n}\nlet evt: keyof typeof effectValueTypes;\nfor (evt in effectValueTypes) {\n  effectTypeOptions.push(\n    <MenuItem key={evt} value={effectValueTypes[evt]}>\n      {effectValueTypes[evt]}\n    </MenuItem>\n  );\n}\n","import {\n  createEntityAdapter,\n  createSlice,\n  EntityId,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { ACTrends, GraphType, HPTrends, SaveTrends } from \"../Model/types\";\nimport type { RootState } from \"../App/store\";\n// import { defaultACs, defaultSaves } from \"../defaults\";\n// import { defenses } from \"../types\";\nimport { weaknessCreated, weaknessRemoved } from \"./weaknessSlice\";\nimport { defaultACs, defaultHP, defaultSaves } from \"../Model/defaults\";\n\n// interface limited<Type> { typeof Type[keyof typeof Type] }\n// Define a type for the slice state\n// interface TargetState {  }\nconst id = 0;\nexport interface Target {\n  id: EntityId;\n  name: string;\n  levelDiff: number;\n  persistentMultiplier: number;\n  ACTrend: typeof ACTrends[keyof typeof ACTrends];\n  FortTrend: typeof SaveTrends[keyof typeof SaveTrends];\n  RefTrend: typeof SaveTrends[keyof typeof SaveTrends];\n  WillTrend: typeof SaveTrends[keyof typeof SaveTrends];\n  PerTrend: typeof SaveTrends[keyof typeof SaveTrends];\n  HPTrend: typeof HPTrends[keyof typeof HPTrends];\n  percentHP: number;\n\n  flatfooted: boolean;\n  percentSelectedRoutine: boolean;\n  weaknesses: number[];\n\n  graphType: GraphType;\n  routineLevel: number;\n  targetLevel: number;\n\n  overrideAC: number;\n  overrideFort: number;\n  overrideRef: number;\n  overrideWill: number;\n  overridePer: number;\n  overrideHP: number;\n  currentHP: number;\n}\n\nexport const targetAdapter = createEntityAdapter<Target>();\n\nexport const targetsSlice = createSlice({\n  name: \"targets\",\n  initialState: targetAdapter.getInitialState(),\n  reducers: {\n    targetAdded: targetAdapter.addOne,\n    targetUpdated: (state, action) => {\n      targetAdapter.updateOne(state, action.payload);\n      if (\"targetLevel\" in action.payload.changes) {\n        updateTargetLevel(state, action.payload.changes.targetLevel);\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(weaknessCreated, (state, action) => {\n        const { parentId: id, id: weaknessId } = action.payload;\n        state.entities[id]!.weaknesses.push(weaknessId);\n        // targetAdded.updateOne(state, { id, changes: { weaknesses: [...weaknesses, weaknessId] }});\n      })\n      .addCase(weaknessRemoved, (state, action) => {\n        const { parentId: id, id: weaknessId } = action.payload;\n        state.entities[id]!.weaknesses = state.entities[id]!.weaknesses.filter(\n          (wid) => wid !== weaknessId\n        );\n      });\n  },\n});\n\nexport const { targetAdded, targetUpdated } = targetsSlice.actions;\n\nexport default targetsSlice.reducer;\n\nexport const {\n  selectById: selecttargetById,\n  selectIds: selecttargetIds,\n  selectEntities: selecttargetEntities,\n  selectAll: selectAlltargets,\n  selectTotal: selectTotaltargets,\n} = targetAdapter.getSelectors((state: RootState) => state.targets);\n\nexport const selectRoutineLevel = (state: RootState) =>\n  state.targets.entities[0]!.routineLevel;\n\nconst updateTargetLevel = (state: EntityState<Target>, targetLevel: number) => {\n  state.entities[id]!.overrideAC =\n    defaultACs[state.entities[id]!.ACTrend][targetLevel];\n  state.entities[id]!.overrideFort =\n    defaultSaves[state.entities[id]!.FortTrend][targetLevel];\n  state.entities[id]!.overrideRef =\n    defaultSaves[state.entities[id]!.RefTrend][targetLevel];\n  state.entities[id]!.overrideWill =\n    defaultSaves[state.entities[id]!.WillTrend][targetLevel];\n  state.entities[id]!.overridePer =\n    defaultSaves[state.entities[id]!.PerTrend][targetLevel];\n  state.entities[id]!.currentHP = Math.round(\n    (state.entities[id]!.currentHP *\n      defaultHP[state.entities[id]!.HPTrend][targetLevel]) /\n      state.entities[id]!.overrideHP\n  );\n  state.entities[id]!.overrideHP =\n    defaultHP[state.entities[id]!.HPTrend][targetLevel];\n};\n","import React, { useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\nimport { selecttargetById, targetUpdated } from \"./targetSlice\";\nimport { RootState } from \"../App/store\";\nimport { ACOptions, makeOptions, SaveOptions } from \"../Model/options\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Grid,\n  TextField,\n  Slider,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport { HPTrends } from \"../Model/types\";\n\nfunction ByLevelInput() {\n  const id = 0;\n  const {\n    name,\n    levelDiff,\n    ACTrend,\n    FortTrend,\n    RefTrend,\n    WillTrend,\n    PerTrend,\n    HPTrend,\n    percentHP,\n  } = useAppSelector((state: RootState) => selecttargetById(state, id)!);\n\n  const [tempName, setTempName] = useState(name);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ my: 0, py: 1 }}>\n      <Grid item xs={12} sm={6} md={12} lg={6}>\n        <TextField\n          fullWidth\n          label=\"Graph Name\"\n          placeholder=\"Enter the name that will display on the graph\"\n          value={tempName}\n          onChange={(e) => {\n            setTempName(e.target.value);\n          }}\n          onBlur={() =>\n            dispatch(targetUpdated({ id, changes: { name: tempName } }))\n          }\n        />\n      </Grid>\n      <Grid item xs={6} sm={3} md={6} lg={3}>\n        <Typography>Level Diff: {levelDiff}</Typography>\n        <Slider\n          value={levelDiff}\n          step={1}\n          min={-5}\n          max={5}\n          marks\n          onChange={(e, nv) => {\n            dispatch(\n              targetUpdated({\n                id,\n                changes: {\n                  levelDiff: nv,\n                },\n              })\n            );\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={3} md={6} lg={3}>\n        <FormControl fullWidth>\n          <InputLabel id=\"AC-input\">AC</InputLabel>\n          <Select\n            labelId=\"AC-input\"\n            id=\"AC\"\n            value={ACTrend}\n            label=\"AC\"\n            onChange={(e) =>\n              dispatch(\n                targetUpdated({ id, changes: { ACTrend: e.target.value } })\n              )\n            }\n          >\n            {ACOptions}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={3} sm={3} md={3} lg={3}>\n        <FormControl fullWidth>\n          <InputLabel id=\"Fort-input\">Fort</InputLabel>\n          <Select\n            labelId=\"Fort-input\"\n            id=\"Fort\"\n            value={FortTrend}\n            label=\"Fort\"\n            onChange={(e) =>\n              dispatch(\n                targetUpdated({ id, changes: { FortTrend: e.target.value } })\n              )\n            }\n          >\n            {SaveOptions}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={3} sm={3} md={3} lg={3}>\n        <FormControl fullWidth>\n          <InputLabel id=\"Ref-input\">Reflex</InputLabel>\n          <Select\n            labelId=\"Ref-input\"\n            id=\"Ref\"\n            value={RefTrend}\n            label=\"Reflex\"\n            onChange={(e) =>\n              dispatch(\n                targetUpdated({ id, changes: { RefTrend: e.target.value } })\n              )\n            }\n          >\n            {SaveOptions}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={3} sm={3} md={3} lg={3}>\n        <FormControl fullWidth>\n          <InputLabel id=\"Will-input\">Will</InputLabel>\n          <Select\n            labelId=\"Will-input\"\n            id=\"Will\"\n            value={WillTrend}\n            label=\"Will\"\n            onChange={(e) =>\n              dispatch(\n                targetUpdated({ id, changes: { WillTrend: e.target.value } })\n              )\n            }\n          >\n            {SaveOptions}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={3} sm={3} md={3} lg={3}>\n        <FormControl fullWidth>\n          <InputLabel id=\"Per-input\">Perception</InputLabel>\n          <Select\n            labelId=\"Per-input\"\n            id=\"Per\"\n            value={PerTrend}\n            label=\"Perception\"\n            onChange={(e) =>\n              dispatch(\n                targetUpdated({ id, changes: { PerTrend: e.target.value } })\n              )\n            }\n          >\n            {SaveOptions}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel id=\"HP-input\">Hit Points</InputLabel>\n          <Select\n            labelId=\"HP-input\"\n            id=\"HP\"\n            value={HPTrend}\n            label=\"Hit Points\"\n            onChange={(e) =>\n              dispatch(\n                targetUpdated({ id, changes: { HPTrend: e.target.value } })\n              )\n            }\n          >\n            {makeOptions(HPTrends)}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6} container justifyContent=\"center\">\n        <Typography id=\"percent-HP\">Remaining HP: {percentHP}%</Typography>\n\n        <Box sx={{ px: 2, width: 1 }}>\n          <Slider\n            aria-labelledby=\"percent-HP\"\n            valueLabelDisplay=\"auto\"\n            value={percentHP}\n            min={0}\n            max={100}\n            step={1}\n            onChange={(_, nv) => {\n              let newPercentHP = Number(nv);\n              dispatch(\n                targetUpdated({\n                  id,\n                  changes: {\n                    percentHP: newPercentHP,\n                  },\n                })\n              );\n            }}\n          />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { ByLevelInput };\n","import {\n  statTrendValues,\n  valuesFromBonuses,\n  valuesFromBonusLevels,\n} from \"./defaults\";\nimport {\n  conditions,\n  activityTypes as activityTargetTypes,\n  DamageTrend,\n  damageTrends,\n  DamageType,\n  damageTypes,\n  dCond,\n  defenses,\n  diceSizes,\n  DieTrend,\n  dieTrends,\n  effectTypes,\n  ItemTrend,\n  MAPs,\n  ProfTrend,\n  profTrends,\n  StatTrend,\n  whenConditions,\n} from \"./types\";\n\nexport type WeaponInfo = {\n  dieSize: number;\n  traits: {\n    [k: string]: boolean;\n  };\n  deadlySize: number;\n  fatalSize: number;\n  critSpec: boolean;\n  critSpecLevel: number;\n  critSpecType: string;\n  runes: DieTrend;\n\n  numPrevStrikes: number;\n};\n\nexport type StrikeInfo = {\n  cClass: typeof classes[number];\n  classOption: string;\n\n  activity: typeof strikeActivities[number];\n  spell: typeof attackSpells[number];\n  attackScore: StatTrend;\n  damageScore: StatTrend;\n  cantripScore: StatTrend;\n\n  numPrevStrikes: number;\n  numStrikes: number;\n  twf: boolean;\n  isStrikeSecondaryWeapon: boolean[];\n  previousHits: number;\n\n  weapon1: WeaponInfo;\n  weapon2: WeaponInfo;\n};\nexport type SkillInfo = {\n  proficiency: ProfTrend;\n  abilityScore: StatTrend;\n  itemBonus: ItemTrend;\n  skillActivity: typeof skillActivities[number];\n};\nexport type CantripInfo = {\n  proficiency: ProfTrend;\n  abilityScore: StatTrend;\n  cantrip: typeof cantrips[number];\n};\nexport type SpellInfo = {\n  proficiency: ProfTrend;\n  abilityScore: StatTrend;\n  spell: typeof spells[number];\n};\nexport type ImpulseInfo = {\n  proficiency: ProfTrend;\n  abilityScore: StatTrend;\n  impulse: typeof impulses[number];\n  isTwoAction: boolean;\n  strScore: StatTrend;\n  weaponInfo: WeaponInfo;\n};\n\nexport const activityTypes = {\n  Strike: \"Strike\",\n  Skill: \"Skill Action\",\n  Cantrip: \"Cantrip\",\n  Spell: \"Spell\",\n  Impulse: \"Kineticist Impulse\",\n} as const;\n\nexport const runeTrends = [dieTrends.NONE, dieTrends.RUNE, dieTrends.RUNE2];\n\nexport const classes = [\n  \"Alchemist\",\n  \"Barbarian\",\n  \"Bard\",\n  \"Champion\",\n  \"Cleric\",\n  \"Druid\",\n  \"Fighter\",\n  \"Gunslinger\",\n  \"Inventor\",\n  \"Investigator\",\n  \"Kineticist\",\n  \"Magus\",\n  \"Monk\",\n  \"Oracle\",\n  \"Ranger\",\n  \"Rogue\",\n  \"Sorcerer\",\n  \"Summoner\",\n  \"Swashbuckler\",\n  \"Witch\",\n  \"Wizard\",\n] as const;\n\nconst noOptions = [] as const;\nconst alchemistOptions = [\n  \"Normal\",\n  \"Bomb Strike\",\n  \"Bomb w/ feats\",\n  \"Perpetual Bomb\",\n  \"Perpetual Bomb w/ feats\",\n] as const;\nconst barbarianOptions = [\n  \"Normal\",\n  \"animal rage\",\n  \"dragon rage\",\n  \"rage\",\n  \"giant rage\",\n  \"spirit rage\",\n] as const;\nconst clericOptions = [\"Cloistered\", \"Warpriest\"] as const;\nconst rangerOptions = [\"Normal\", \"Flurry Edge\", \"Precision Edge\"] as const;\nconst inventorOptions = [\n  \"Normal\",\n  \"Overdrive Success\",\n  \"Overdrive Critical\",\n] as const;\nconst investigatorOptions = [\"Normal\", \"Strategic Strike\"] as const;\nconst rogueOptions = [\"Normal\", \"Sneak Attack\"] as const;\nconst swashbucklerOptions = [\n  \"Normal\",\n  \"Precise Strike\",\n  \"Precise Finisher\",\n] as const;\nconst magusOptions = [\"Normal\", \"Arcane Cascade\"] as const;\n\nexport const strikeActivities = [\n  \"Strike\",\n  \"Double Slice\",\n  \"Power Attack\",\n  \"Spell Strike\",\n  \"Ki Strike\",\n] as const;\ntype ClassOptions = { [key in typeof classes[number]]: readonly string[] };\nexport const classOptions: ClassOptions = {\n  Alchemist: alchemistOptions,\n  Barbarian: barbarianOptions,\n  Bard: noOptions,\n  Champion: noOptions,\n  Cleric: clericOptions,\n  Druid: noOptions,\n  Fighter: noOptions,\n  Gunslinger: noOptions,\n  Inventor: inventorOptions,\n  Investigator: investigatorOptions,\n  Kineticist: noOptions,\n  Magus: magusOptions,\n  Monk: noOptions,\n  Oracle: noOptions,\n  Ranger: rangerOptions,\n  Rogue: rogueOptions,\n  Sorcerer: noOptions,\n  Summoner: noOptions,\n  Swashbuckler: swashbucklerOptions,\n  Witch: noOptions,\n  Wizard: noOptions,\n} as const;\n\nexport const weaponTraits = [\n  \"agile\",\n  \"backswing\",\n  \"deadly\",\n  \"fatal\",\n  \"forceful\",\n  \"ranged\",\n  \"propulsive\",\n] as const;\n\nexport const blastTraits = [\n  \"agile\",\n  \"ranged\",\n  \"propulsive\",\n] as const;\n\nexport const critSpecs = [\n  \"Sword\",\n  \"Hammer\",\n  \"Spear\",\n  \"Other\",\n  \"Pick\",\n  \"Knife\",\n] as const;\n\nexport const skillProfTrends = [profTrends.TRAINED, profTrends.MAXSKILL];\nexport const spellProfTrends = [\n  profTrends.TRAINED,\n  profTrends.CASTERSPELL,\n  profTrends.MCSPELL,\n  profTrends.CLASSDC1,\n  profTrends.CLASSDC2,\n];\nexport const impulseProfTrends = [profTrends.TRAINED, profTrends.CASTERSPELL];\n\nexport const skillActivities = [\"Trip\", \"Grapple\", \"Demoralize\"] as const;\nexport const cantrips = [\n  \"Electric Arc\",\n  \"Daze\",\n  \"Gouging Claw\",\n  \"Produce Flame\",\n  \"Ray of Frost\",\n  \"Telekinetic Projectile\",\n] as const;\nexport const spells = [\"Fear\", \"Fireball\", \"Heroism\"] as const;\nexport const impulses = [\"Elemental Blast\"] as const;\n\nexport const attackSpells = [\n  \"Gouging Claw\",\n  \"Produce Flame\",\n  \"Ray of Frost\",\n  \"Telekinetic Projectile\",\n];\n\nexport const getStrikeRoutineName = (strikeInfo: StrikeInfo) => {\n  const { weapon1, weapon2 } = strikeInfo;\n  let name = strikeInfo.cClass;\n  let description = `${strikeInfo.numStrikes} ${\n    strikeInfo.activity\n  } with class ${strikeInfo.cClass} (${strikeInfo.classOption}) after ${\n    strikeInfo.numPrevStrikes\n  } previous strikes. Weapon is ${getWeaponTraits(weapon1)}`;\n\n  if (strikeInfo.classOption !== \"\")\n    name += \" (\" + strikeInfo.classOption + \")\";\n  name += \" - \";\n  if (strikeInfo.activity !== \"Double Slice\") {\n    name += strikeInfo.numStrikes + \" \";\n  }\n  name += strikeInfo.activity + \" - \" + getWeaponTraits(weapon1);\n\n  if (strikeInfo.twf) {\n    name += \" | \" + getWeaponTraits(weapon2);\n    description += \". Weapon two is \" + getWeaponTraits(weapon2);\n  }\n\n  return [name, description];\n};\n\nconst getWeaponTraits = (weapon: WeaponInfo) => {\n  let info = \"d\" + weapon.dieSize;\n\n  for (let trait in weapon.traits) {\n    if (weapon.traits[trait]) {\n      info += \" \" + trait;\n      if (trait === \"fatal\") {\n        info += \" d\" + weapon.fatalSize;\n      }\n      if (trait === \"deadly\") {\n        info += \" d\" + weapon.deadlySize;\n      }\n    }\n  }\n  if (weapon.critSpec) {\n    info += \" \" + weapon.critSpecType;\n  }\n\n  return info;\n};\n\nexport const getStrikeName = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  let name = strikeInfo.cClass;\n  if (strikeInfo.classOption !== \"\")\n    name += \" (\" + strikeInfo.classOption + \")\";\n  name += \" - \";\n  name +=\n    strikeInfo.activity +\n    // \" \" +\n    // (strikeNumber + 1) +\n    \" - d\" +\n    weapon.dieSize;\n  for (let trait in weapon.traits) {\n    if (weapon.traits[trait]) {\n      name += \" \" + trait;\n      if (trait === \"fatal\") {\n        name += \" d\" + weapon.fatalSize;\n      }\n      if (trait === \"deadly\") {\n        name += \" d\" + weapon.deadlySize;\n      }\n    }\n  }\n  if (weapon.critSpec) {\n    name += \" \" + weapon.critSpecType;\n  }\n\n  return name;\n};\nexport const getSpellRoutineName = (spellInfo: SpellInfo) => {\n  let name = spellInfo.spell;\n\n  let description = `Cast spell ${spellInfo.spell} with proficiency (${spellInfo.proficiency}) and ability score (${spellInfo.abilityScore}).`;\n\n  return [name, description];\n};\n\nexport const getImpulseRoutineName = (impulseInfo: ImpulseInfo) => {\n  let name = impulseInfo.impulse;\n\n  let description = `Use ${impulseInfo.impulse} with proficiency (${impulseInfo.proficiency}) and ability score (${impulseInfo.abilityScore}).`;\n\n  return [name, description];\n};\n\nexport const getSkillRoutineName = (skillInfo: SkillInfo) => {\n  let name = skillInfo.skillActivity;\n\n  let description = `Use action ${skillInfo.skillActivity} with proficiency (${skillInfo.proficiency}), ability score (${skillInfo.abilityScore}), and item bonus (${skillInfo.itemBonus}).`;\n\n  return [name, description];\n};\n\nexport const getCantripRoutineName = (cantripInfo: CantripInfo) => {\n  let name = cantripInfo.cantrip;\n\n  let description = `Cast spell ${cantripInfo.cantrip} with proficiency (${cantripInfo.proficiency}) and ability score (${cantripInfo.abilityScore}).`;\n\n  return [name, description];\n};\n\nexport const classWeaponProf = (className: string, classOption: string) => {\n  if ([\"Fighter\", \"Gunslinger\"].includes(className))\n    return profTrends.FIGHTERWEAPON;\n  if (\n    [\n      \"Bard\",\n      \"Druid\",\n      \"Oracle\",\n      \"Sorcerer\",\n      \"Summoner\",\n      \"Witch\",\n      \"Wizard\",\n    ].includes(className)\n  )\n    return profTrends.CASTERWEAPON;\n  if ([\"Alchemist\"].includes(className)) return profTrends.ALCHWEAPON;\n  if (className === \"Cleric\") {\n    if (classOption === \"Warpriest\") return profTrends.ALCHWEAPON;\n    return profTrends.CASTERWEAPON;\n  }\n  return profTrends.MARTIALWEAPON;\n};\n\nexport const classWeaponMAP = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  if (\n    strikeInfo.cClass === \"Ranger\" &&\n    strikeInfo.classOption === \"Flurry Edge\"\n  ) {\n    if (weapon.traits[\"agile\"]) return MAPs.RA1;\n    else return MAPs.R1;\n  } else {\n    if (weapon.traits[\"agile\"]) return MAPs.A1;\n    else return MAPs.N1;\n  }\n};\n\nexport const classAdjustments = (\n  strikeInfo: StrikeInfo,\n  strikeNumber: number\n) => {\n  const adjustments: { [key: number]: number } = {};\n  let currentValue = 0;\n  for (let i = 1; i <= 20; i++) {\n    currentValue = 0;\n\n    if (\n      strikeInfo.classOption === \"Perpetual Bomb\" ||\n      strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\n    ) {\n      currentValue -= 1;\n    }\n\n    if (\n      strikeInfo.cClass === \"Ranger\" &&\n      strikeInfo.classOption === \"Flurry Edge\" &&\n      i >= 17\n    )\n      currentValue += Math.min(strikeNumber + strikeInfo.numPrevStrikes, 2);\n\n    if (strikeInfo.activity === \"Ki Strike\") currentValue += 1;\n\n    if (\n      strikeInfo.activity === \"Double Slice\" &&\n      strikeNumber === 1 &&\n      (strikeInfo.twf\n        ? !strikeInfo.weapon2.traits[\"agile\"]\n        : !strikeInfo.weapon1.traits[\"agile\"])\n    ) {\n      currentValue -= 2;\n    }\n\n    adjustments[i] = currentValue;\n  }\n  return adjustments;\n};\n\nexport const activityWeaponDiceAdjustments = (strikeInfo: StrikeInfo) => {\n  const adjustments: { [key: number]: number } = {};\n  let currentValue = 0;\n  for (let i = 1; i <= 20; i++) {\n    currentValue = 0;\n    if (strikeInfo.activity === \"Power Attack\" && i >= 1) currentValue += 1;\n    if (strikeInfo.activity === \"Power Attack\" && i >= 10) currentValue += 1;\n    if (strikeInfo.activity === \"Power Attack\" && i >= 18) currentValue += 1;\n    if (\n      strikeInfo.classOption === \"Perpetual Bomb\" ||\n      strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\n    ) {\n      currentValue -= 1;\n    }\n    adjustments[i] = currentValue;\n  }\n  return adjustments;\n};\n\nexport const hasClassPrecisionDamage = (\n  strikeInfo: StrikeInfo,\n  previousHits: number\n) => {\n  if (\n    strikeInfo.cClass === \"Ranger\" &&\n    strikeInfo.classOption === \"Precision Edge\" &&\n    previousHits < 3\n  ) {\n    return true;\n  }\n  if (\n    strikeInfo.cClass === \"Rogue\" &&\n    strikeInfo.classOption === \"Sneak Attack\"\n  ) {\n    return true;\n  }\n  if (\n    strikeInfo.cClass === \"Investigator\" &&\n    strikeInfo.classOption === \"Strategic Strike\"\n  ) {\n    return true;\n  }\n  if (\n    strikeInfo.cClass === \"Swashbuckler\" &&\n    (strikeInfo.classOption === \"Precise Finisher\" ||\n      strikeInfo.classOption === \"Precise Strike\")\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const classPrecisionDamage = (\n  strikeInfo: StrikeInfo,\n  previousHits: number\n) => {\n  if (\n    strikeInfo.cClass === \"Ranger\" &&\n    strikeInfo.classOption === \"Precision Edge\" &&\n    previousHits < 3\n  ) {\n    let dieTrend: DieTrend = dieTrends.PRECISIONEDGE;\n    if (previousHits === 1) {\n      dieTrend = dieTrends.PRECISIONEDGE2;\n    }\n    if (previousHits === 2) {\n      dieTrend = dieTrends.PRECISIONEDGE3;\n    }\n    return {\n      dieTrend,\n      diceSize: diceSizes[8],\n      damageWhen: [whenConditions.Always],\n      damageTrend: [],\n    };\n  }\n  if (\n    strikeInfo.cClass === \"Rogue\" &&\n    strikeInfo.classOption === \"Sneak Attack\"\n  ) {\n    return {\n      dieTrend: dieTrends.SNEAK,\n      diceSize: diceSizes[6],\n      damageWhen: [whenConditions.FLATFOOT],\n      damageTrend: [],\n    };\n  }\n  if (\n    strikeInfo.cClass === \"Investigator\" &&\n    strikeInfo.classOption === \"Strategic Strike\"\n  ) {\n    return {\n      dieTrend: dieTrends.STRATEGIC,\n      diceSize: diceSizes[6],\n      damageWhen: [whenConditions.Always],\n      damageTrend: [],\n    };\n  }\n  if (\n    strikeInfo.cClass === \"Swashbuckler\" &&\n    strikeInfo.classOption === \"Precise Finisher\"\n  ) {\n    return {\n      dieTrend: dieTrends.PRECISE,\n      diceSize: diceSizes[6],\n      damageWhen: [whenConditions.Always],\n      damageTrend: [],\n    };\n  }\n  if (\n    strikeInfo.cClass === \"Swashbuckler\" &&\n    strikeInfo.classOption === \"Precise Strike\"\n  ) {\n    return {\n      dieTrend: dieTrends.NONE,\n      diceSize: diceSizes[6],\n      damageWhen: [whenConditions.Always],\n      damageTrend: [damageTrends.PRECISE],\n    };\n  }\n  return {\n    dieTrend: dieTrends.NONE,\n    diceSize: diceSizes[6],\n    damageWhen: [whenConditions.Always],\n    damageTrend: [],\n  };\n};\n\nexport const hasActivityDamageDice = (strikeInfo: StrikeInfo) => {\n  if (strikeInfo.activity === \"Ki Strike\") {\n    return true;\n  }\n  if (strikeInfo.activity === \"Spell Strike\") {\n    return true;\n  }\n  return false;\n};\n\nexport const activityDamageDice = (strikeInfo: StrikeInfo) => {\n  if (strikeInfo.activity === \"Ki Strike\") {\n    return {\n      dieTrend: dieTrends.KISTRIKE,\n      diceSize: diceSizes[6],\n      damageType: damageTypes.FORCE,\n    };\n  }\n  if (strikeInfo.activity === \"Spell Strike\") {\n    return getSpellDamage(strikeInfo.spell, strikeInfo.cantripScore);\n  }\n  return {\n    dieTrend: dieTrends.NONE,\n    diceSize: diceSizes[6],\n    damageType: damageTypes.NONE,\n  };\n};\n\nexport const hasSplashDamage = (strikeInfo: StrikeInfo) => {\n  if (\n    strikeInfo.classOption === \"Bomb Strike\" ||\n    strikeInfo.classOption === \"Bomb w/ feats\"\n  ) {\n    return true;\n  }\n  if (\n    strikeInfo.classOption === \"Perpetual Bomb\" ||\n    strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getSplashDamage = (strikeInfo: StrikeInfo) => {\n  if (strikeInfo.classOption === \"Bomb Strike\") {\n    return { damageTrend: [damageTrends.BOMB] };\n  } else if (strikeInfo.classOption === \"Bomb w/ feats\") {\n    return { damageTrend: [damageTrends.BOMBPLUS] };\n  } else if (strikeInfo.classOption === \"Perpetual Bomb\") {\n    return {\n      damageTrend: [damageTrends.BOMB],\n      damageAdjustments: valuesFromBonuses([[1, -1]]),\n    };\n  } else if (strikeInfo.classOption === \"Perpetual Bomb w/ feats\") {\n    return {\n      damageTrend: [damageTrends.BOMBPLUS],\n      damageAdjustments: valuesFromBonuses([\n        [1, -1],\n        [4, 1],\n        [10, -1],\n      ]),\n    };\n  }\n\n  return {};\n};\n\nconst getSpellDamage = (\n  spell: typeof attackSpells[number],\n  abilityScore: StatTrend\n) => {\n  let damageType: DamageType = damageTypes.B;\n  let diceSize: number = diceSizes[4];\n  let dieTrend = dieTrends.SPELLLEVEL1;\n  let damageTrend = [abilityScore];\n\n  if (spell === \"Telekinetic Projectile\" || spell === \"Gouging Claw\") {\n    diceSize = diceSizes[6];\n  }\n  if (spell === \"Produce Flame\") {\n    damageType = damageTypes.FIRE;\n  }\n  if (spell === \"Gouging Claw\") {\n    damageType = damageTypes.S;\n  }\n  if (spell === \"Ray of Frost\") {\n    damageType = damageTypes.COLD;\n  }\n\n  return { damageType, dieTrend, diceSize, damageTrend };\n};\n\nexport const hasActivityCritDamage = (strikeInfo: StrikeInfo) => {\n  return (\n    strikeInfo.activity === \"Spell Strike\" &&\n    (strikeInfo.spell === \"Produce Flame\" ||\n      strikeInfo.spell === \"Gouging Claw\")\n  );\n};\n\nexport const activityCritDamage = (strikeInfo: StrikeInfo) => {\n  let damageType: DamageType = damageTypes.B;\n  let diceSize = diceSizes[4];\n  if (strikeInfo.spell === \"Produce Flame\") {\n    damageType = damageTypes.FIRE;\n  }\n  if (strikeInfo.spell === \"Gouging Claw\") {\n    damageType = damageTypes.BLEED;\n  }\n\n  return {\n    damageType,\n    diceSize,\n    dieTrend: dieTrends.SPELLLEVEL1,\n    persistent: true,\n  };\n};\n\nexport const classWeaponDamageTrends = (\n  strikeInfo: StrikeInfo,\n  strikeNumber: number,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n\n  const trends: DamageTrend[] = [];\n\n  if (!weapon.traits[\"propulsive\"] && !weapon.traits[\"ranged\"]) {\n    trends.push(strikeInfo.damageScore);\n  }\n\n  if ([\"Fighter\", \"Gunslinger\"].includes(strikeInfo.cClass)) {\n    trends.push(damageTrends.FIGHTERWEAPONSPEC);\n  } else if (\n    [\n      \"Bard\",\n      \"Cleric\",\n      \"Druid\",\n      \"Oracle\",\n      \"Sorcerer\",\n      \"Summoner\",\n      \"Witch\",\n      \"Wizard\",\n    ].includes(strikeInfo.cClass)\n  ) {\n    trends.push(damageTrends.CASTERWEAPONSPEC);\n  } else if ([\"Alchemist\"].includes(strikeInfo.cClass)) {\n    trends.push(damageTrends.CASTERWEAPONSPEC);\n  } else {\n    trends.push(damageTrends.MARTIALWEAPONSPEC);\n  }\n\n  let thisWeaponStrikes = 0;\n  if (!strikeInfo.twf) {\n    thisWeaponStrikes = strikeNumber + strikeInfo.numPrevStrikes;\n  } else {\n    thisWeaponStrikes = weapon.numPrevStrikes;\n    for (let isWeapon2 of strikeInfo.isStrikeSecondaryWeapon) {\n      if ((isWeapon2 && useWeapon2) || (!isWeapon2 && !useWeapon2)) {\n        thisWeaponStrikes += 1;\n      }\n    }\n  }\n\n  if (weapon.traits[\"forceful\"]) {\n    if (thisWeaponStrikes === 1) {\n      trends.push(damageTrends.WEAPON);\n    } else if (thisWeaponStrikes >= 2) {\n      trends.push(damageTrends.WEAPON);\n      trends.push(damageTrends.WEAPON);\n    }\n  }\n\n  if (strikeInfo.cClass === \"Barbarian\") {\n    switch (strikeInfo.classOption) {\n      case \"animal rage\":\n        trends.push(damageTrends.ANIMALRAGE);\n        break;\n      case \"dragon rage\":\n        trends.push(damageTrends.DRAGONRAGE);\n        break;\n      case \"rage\":\n        trends.push(damageTrends.RAGE);\n        break;\n      case \"giant rage\":\n        trends.push(damageTrends.GIANTRAGE);\n        break;\n      case \"spirit rage\":\n        trends.push(damageTrends.SPIRITRAGE);\n        break;\n      default:\n    }\n  }\n  if (strikeInfo.cClass === \"Magus\") {\n    switch (strikeInfo.classOption) {\n      case \"Arcane Cascade\":\n        trends.push(damageTrends.ARCANECASCADE);\n        break;\n      default:\n    }\n  }\n\n  return trends;\n};\n\nexport const classDamageAdjustments = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n\n  const adjustments: { [key: number]: number } = {};\n  let currentValue = 0;\n  for (let i = 1; i <= 20; i++) {\n    currentValue = 0;\n\n    if (weapon.traits[\"propulsive\"]) {\n      currentValue += Math.floor(\n        statTrendValues[strikeInfo.damageScore][i] / 2\n      );\n    }\n\n    if (strikeInfo.cClass === \"Gunslinger\") currentValue += 1;\n\n    if (strikeInfo.cClass === \"Inventor\") {\n      let bonus = 0;\n      if (i >= 3) bonus = 1;\n      if (i >= 7) bonus = 2;\n      if (i >= 15) bonus = 3;\n      switch (strikeInfo.classOption) {\n        case \"Overdrive Success\":\n          currentValue +=\n            Math.floor(statTrendValues[strikeInfo.cantripScore][i] / 2) + bonus;\n          break;\n        case \"Overdrive Critical\":\n          currentValue += statTrendValues[strikeInfo.cantripScore][i] + bonus;\n          break;\n        default:\n      }\n    }\n\n    adjustments[i] = currentValue;\n  }\n  return adjustments;\n};\n\nexport const hasBackswing = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.traits[\"backswing\"];\n};\nexport const hasDeadly = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.traits[\"deadly\"];\n};\nexport const hasFatal = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.traits[\"fatal\"];\n};\nexport const hasPickCritSpec = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.critSpec && weapon.critSpecType === \"Pick\";\n};\nexport const hasKnifeCritSpec = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.critSpec && weapon.critSpecType === \"Knife\";\n};\nexport const hasCritSpecEffect = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  return (\n    hasSwordCritSpec(strikeInfo, useWeapon2) ||\n    hasHammerCritSpec(strikeInfo, useWeapon2) ||\n    hasSpearCritSpec(strikeInfo, useWeapon2)\n  );\n};\nexport const hasSwordCritSpec = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.critSpec && weapon.critSpecType === \"Sword\";\n};\nexport const hasHammerCritSpec = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.critSpec && weapon.critSpecType === \"Hammer\";\n};\nexport const hasSpearCritSpec = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  return weapon.critSpec && weapon.critSpecType === \"Spear\";\n};\nexport const critSpecDice = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n\n  const adjustments: { [key: number]: number } = {};\n  let currentValue = 0;\n  for (let i = 1; i <= 20; i++) {\n    if (i >= weapon.critSpecLevel) {\n      if (weapon.critSpec && weapon.critSpecType === \"Knife\") {\n        if (i >= 1) currentValue = 1;\n      }\n    }\n    adjustments[i] = currentValue;\n  }\n  return adjustments;\n};\nexport const critSpecDamage = (\n  strikeInfo: StrikeInfo,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n\n  const adjustments: { [key: number]: number } = {};\n  let currentValue = 0;\n  for (let i = 1; i <= 20; i++) {\n    if (i >= weapon.critSpecLevel) {\n      if (weapon.critSpec && weapon.critSpecType === \"Pick\") {\n        if (i >= 1) currentValue = 2;\n        if (i >= 4) currentValue = 4;\n        if (i >= 12) currentValue = 6;\n        if (i >= 19) currentValue = 8;\n      }\n      if (weapon.critSpec && weapon.critSpecType === \"Knife\") {\n        if (i >= 2) currentValue = 1;\n        if (i >= 10) currentValue = 2;\n        if (i >= 16) currentValue = 3;\n      }\n    }\n    adjustments[i] = currentValue;\n  }\n  return adjustments;\n};\n\nexport const getSkillTarget = (skillInfo: SkillInfo) => {\n  switch (skillInfo.skillActivity) {\n    case \"Trip\":\n      return defenses.REF;\n    case \"Grapple\":\n      return defenses.FORT;\n    case \"Demoralize\":\n      return defenses.WILL;\n    default:\n      return defenses.selfDC;\n  }\n};\n\nexport const getSkillEffects = (skillInfo: SkillInfo) => {\n  switch (skillInfo.skillActivity) {\n    case \"Trip\":\n      return [\n        {\n          effectCondition: conditions.AT_LEAST_SUCC,\n          effectType: effectTypes.PRONE,\n          effectValue: 1,\n        },\n      ];\n    case \"Grapple\":\n      return [\n        {\n          effectCondition: conditions.SUCC,\n          effectType: effectTypes.GRAPPLED,\n          effectValue: 1,\n        },\n        {\n          effectCondition: conditions.CRIT,\n          effectType: effectTypes.RESTRAINED,\n          effectValue: 1,\n        },\n      ];\n    case \"Demoralize\":\n      return [\n        {\n          effectCondition: conditions.SUCC,\n          effectType: effectTypes.FRIGHTENED,\n          effectValue: 1,\n        },\n        {\n          effectCondition: conditions.CRIT,\n          effectType: effectTypes.FRIGHTENED,\n          effectValue: 2,\n        },\n      ];\n    default:\n      return [];\n  }\n};\nexport const hasSkillDamage = (skillInfo: SkillInfo) => {\n  if (skillInfo.skillActivity === \"Trip\") {\n    return true;\n  }\n  return false;\n};\n\nexport const getCantripTarget = (cantripInfo: CantripInfo) => {\n  switch (cantripInfo.cantrip) {\n    case \"Electric Arc\":\n      return { type: \"Save\", targetType: defenses.REF } as const;\n    case \"Daze\":\n      return { type: \"Save\", targetType: defenses.WILL } as const;\n\n    default:\n      return { targetType: defenses.AC };\n  }\n};\nexport const getCantripDamage = (cantripInfo: CantripInfo) => {\n  switch (cantripInfo.cantrip) {\n    case \"Electric Arc\":\n      return { damageCondition: dCond.BASIC, diceSize: diceSizes[4] };\n    case \"Daze\":\n      return {\n        damageCondition: dCond.BASIC,\n        dieTrend: dieTrends.NONE,\n        dieAdjustments: valuesFromBonusLevels([5, 9, 13, 17]),\n      };\n    case \"Telekinetic Projectile\":\n      return {};\n    default:\n      return { diceSize: diceSizes[4] };\n  }\n};\nexport const getSpellTarget = (spellInfo: SpellInfo) => {\n  switch (spellInfo.spell) {\n    case \"Fireball\":\n      return { targetType: defenses.REF };\n    case \"Fear\":\n      return { targetType: defenses.WILL };\n\n    default:\n      return { targetType: defenses.REF };\n  }\n};\nexport const getImpulseTarget = (impulseInfo: ImpulseInfo) => {\n  switch (impulseInfo.impulse) {\n    case \"Elemental Blast\":\n      return { type: activityTargetTypes.SPELLATTACK, targetType: defenses.AC } as const;\n    // case \"Daze\":\n    //   return { type: \"Save\", targetType: defenses.REF } as const;\n    default:\n      return { targetType: defenses.AC };\n  }\n};\nexport const getImpulseDamage = (impulseInfo: ImpulseInfo) => {\n  switch (impulseInfo.impulse) {\n    case \"Elemental Blast\":\n      let damageAdjustments = undefined;\n      const damageTrend: DamageTrend[] = [];\n      if (impulseInfo.isTwoAction) {\n        damageTrend.push(impulseInfo.abilityScore);\n      }\n      const isRanged = impulseInfo.weaponInfo.traits[\"ranged\"];\n      const isPropulsive = impulseInfo.weaponInfo.traits[\"propulsive\"];\n      if (!isRanged && !isPropulsive) {\n        damageTrend.push(impulseInfo.strScore);\n      }\n      if (isPropulsive) {\n        const adjustments: { [key: number]: number } = {};\n        for (let i = 1; i <= 20; i++) {\n          adjustments[i] = Math.floor(\n            statTrendValues[impulseInfo.strScore][i] / 2\n          );\n        }\n        damageAdjustments = adjustments;\n      }\n      return { \n        dieTrend: dieTrends.ELEMENTALBLAST,\n        diceSize: impulseInfo.weaponInfo.dieSize,\n        damageTrend,\n        ...(damageAdjustments ? { damageAdjustments } : {}),\n      };\n    // case \"Daze\":\n    //   return {\n    //     damageCondition: dCond.BASIC,\n    //     dieTrend: dieTrends.NONE,\n    //     dieAdjustments: valuesFromBonusLevels([5, 9, 13, 17]),\n    //   };\n    // case \"Telekinetic Projectile\":\n    //   return {};\n    default:\n      return { diceSize: diceSizes[4] };\n  }\n};","import { EntityState } from \"@reduxjs/toolkit\";\nimport {\n  activityTypes,\n  conditions,\n  profTrends,\n  defenses,\n  MAPs,\n  rollTypes,\n  statTrends,\n  itemTrends,\n  effectTypes,\n  damageTrends,\n  Condition,\n  RollType,\n  ActivityType,\n  ProfTrend,\n  StatTrend,\n  ItemTrend,\n  MAP,\n  Defense,\n  DamageCond,\n  DieTrend,\n  DamageTrend,\n  DamageType,\n  Material,\n  EffectType,\n  damageTypes,\n  dCond,\n  dieTrends,\n  materials,\n  WhenConditions,\n  ImportStates,\n  whenConditions,\n} from \"../../Model/types\";\n\nexport type State = {\n  selectedRoutine: number | undefined;\n  selectedActivityPath: number | undefined;\n  parentRoutine: number | undefined;\n  parentActivity: number | undefined;\n  routines: EntityState<Routine>;\n  activityPaths: EntityState<ActivityPath>;\n  damages: EntityState<Damage>;\n  effects: EntityState<Effect>;\n\n  importRoutine: ImportStates;\n};\n\nexport interface Adjustment {\n  [key: number]: number;\n}\nexport interface Routine {\n  id: number;\n  name: string;\n  display: boolean;\n  apIds: number[];\n  levelDiff: number;\n  description: string;\n  startLevel: number;\n  endLevel: number;\n}\nexport interface RoutineObject {\n  id: number;\n  name: string;\n  display: boolean;\n  apIds: ActivityPathObject[];\n  levelDiff: number;\n  description: string;\n  startLevel: number;\n  endLevel: number;\n}\nexport interface ActivityPath {\n  id: number;\n  parentId?: number;\n  routineId?: number;\n  name: string;\n  condition: Condition;\n\n  rollType: RollType;\n  type: ActivityType;\n  profTrend: ProfTrend;\n  statTrend: StatTrend;\n  itemTrend: ItemTrend;\n  bonusAdjustments: Adjustment;\n  MAP: MAP;\n\n  targetType: Defense;\n  damages: number[];\n  effects: number[];\n  apIds: number[];\n}\nexport interface ActivityPathObject {\n  id: number;\n  parentId?: number;\n  routineId?: number;\n  name: string;\n  condition: Condition;\n\n  rollType: RollType;\n  type: ActivityType;\n  profTrend: ProfTrend;\n  statTrend: StatTrend;\n  itemTrend: ItemTrend;\n  bonusAdjustments: Adjustment;\n  MAP: MAP;\n\n  targetType: Defense;\n  damages: Damage[];\n  effects: Effect[];\n  apIds: ActivityPathObject[];\n}\nexport interface Damage {\n  id: number;\n  damageCondition: DamageCond;\n\n  dieTrend: DieTrend;\n  dieAdjustments: Adjustment;\n  diceSize: number;\n  fatal: boolean;\n  fatalDie: number;\n  damageTrend: DamageTrend[];\n  damageAdjustments: Adjustment;\n\n  damageType: DamageType;\n  material: Material;\n  persistent: boolean;\n  multiplier: number;\n  damageWhen: WhenConditions[];\n}\nexport interface Effect {\n  id: number;\n  effectCondition: Condition;\n  effectType: EffectType;\n  effectValue: number | undefined;\n  startLevel: number;\n  endLevel: number;\n  damageWhen: WhenConditions[];\n}\n\nexport function isRoutineObject(routine: any): routine is RoutineObject {\n  return (\n    typeof routine === \"object\" &&\n    typeof routine.name === \"string\" &&\n    typeof routine.display === \"boolean\" &&\n    typeof routine.levelDiff === \"number\" &&\n    typeof routine.description === \"string\" &&\n    isActivityPaths(routine.apIds) &&\n    typeof routine.startLevel === \"number\" &&\n    typeof routine.endLevel === \"number\"\n  );\n}\nfunction isActivityPaths(apIds: unknown): apIds is ActivityPathObject[] {\n  if (Array.isArray(apIds)) {\n    for (let apId of apIds) {\n      if (\n        !(\n          Object.values(conditions).includes(apId.condition) &&\n          Object.values(rollTypes).includes(apId.rollType) &&\n          Object.values(activityTypes).includes(apId.type) &&\n          Object.values(profTrends).includes(apId.profTrend) &&\n          Object.values(statTrends).includes(apId.statTrend) &&\n          Object.values(itemTrends).includes(apId.itemTrend) &&\n          isAdjustment(apId.bonusAdjustments) &&\n          Object.values(MAPs).includes(apId.MAP) &&\n          Object.values(defenses).includes(apId.targetType) &&\n          isActivityPaths(apId.apIds) &&\n          isDamages(apId.damages) &&\n          isEffects(apId.effects)\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // console.log(\"6\");\n  return false;\n}\nfunction isAdjustment(adjustments: any): adjustments is Adjustment {\n  if (typeof adjustments !== \"object\") {\n    return false;\n  }\n  for (let i = 1; i <= 20; i++) {\n    if (typeof adjustments[i] !== \"number\") {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDamages(damages: unknown): damages is Damage[] {\n  if (Array.isArray(damages)) {\n    for (let damage of damages) {\n      if (Array.isArray(damage.damageTrend)) {\n        for (let dt of damage.damageTrend) {\n          if (!Object.values(damageTrends).includes(dt)) {\n            return false;\n          }\n        }\n      }\n\n      if (Array.isArray(damage.damageWhen)) {\n        for (let dw of damage.damageWhen) {\n          if (!Object.values(whenConditions).includes(dw)) {\n            return false;\n          }\n        }\n      }\n\n      if (\n        !(\n          Object.values(dCond).includes(damage.damageCondition) &&\n          Object.values(dieTrends).includes(damage.dieTrend) &&\n          isAdjustment(damage.dieAdjustments) &&\n          typeof damage.diceSize === \"number\" &&\n          typeof damage.fatal === \"boolean\" &&\n          typeof damage.fatalDie === \"number\" &&\n          isAdjustment(damage.damageAdjustments) &&\n          Object.values(damageTypes).includes(damage.damageType) &&\n          Object.values(materials).includes(damage.material) &&\n          typeof damage.persistent === \"boolean\" &&\n          [0.5, 1, 2].includes(damage.multiplier)\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\nfunction isEffects(effects: unknown): effects is Effect[] {\n  if (Array.isArray(effects)) {\n    for (let effect of effects) {\n      if (Array.isArray(effect.damageWhen)) {\n        for (let dw of effect.damageWhen) {\n          if (!Object.values(whenConditions).includes(dw)) {\n            return false;\n          }\n        }\n      }\n\n      if (\n        !(\n          Object.values(conditions).includes(effect.effectCondition) &&\n          Object.values(effectTypes).includes(effect.effectType) &&\n          typeof effect.startLevel === \"number\" &&\n          typeof effect.endLevel === \"number\"\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","import {\n  createEntityAdapter,\n  createSlice,\n  PayloadAction,\n  Update,\n} from \"@reduxjs/toolkit\";\nimport { WritableDraft } from \"immer/dist/internal\";\nimport {\n  classWeaponMAP,\n  classWeaponProf,\n  classAdjustments,\n  StrikeInfo,\n  activityWeaponDiceAdjustments,\n  classWeaponDamageTrends,\n  hasDeadly,\n  hasFatal,\n  hasPickCritSpec,\n  critSpecDamage,\n  hasKnifeCritSpec,\n  critSpecDice,\n  classDamageAdjustments,\n  hasCritSpecEffect,\n  hasSwordCritSpec,\n  hasHammerCritSpec,\n  hasSpearCritSpec,\n  hasClassPrecisionDamage,\n  classPrecisionDamage,\n  hasActivityDamageDice,\n  activityDamageDice,\n  SkillInfo,\n  getSkillEffects,\n  hasSkillDamage,\n  getSkillTarget,\n  CantripInfo,\n  SpellInfo,\n  getCantripTarget,\n  getCantripDamage,\n  getSpellTarget,\n  hasBackswing,\n  getStrikeName,\n  hasActivityCritDamage,\n  activityCritDamage,\n  getStrikeRoutineName,\n  getSkillRoutineName,\n  getCantripRoutineName,\n  getSpellRoutineName,\n  hasSplashDamage,\n  getSplashDamage,\n  ImpulseInfo,\n  getImpulseRoutineName,\n  getImpulseDamage,\n  getImpulseTarget,\n} from \"../../Model/newActivityInfo\";\nimport {\n  activityTypes,\n  conditions,\n  profTrends,\n  defenses,\n  MAPs,\n  nextMAPs,\n  rollTypes,\n  statTrends,\n  itemTrends,\n  effectTypes,\n  EffectType,\n  diceSizes,\n  damageTypes,\n  dCond,\n  dieTrends,\n  materials,\n  effectStateTypes,\n  effectValueTypes,\n  whenConditions,\n  importStates,\n  ActivityType,\n  Condition,\n  MAP,\n  ItemTrend,\n  DieTrend,\n} from \"../../Model/types\";\nimport { RootState } from \"../../App/store\";\nimport {\n  ActivityPath,\n  ActivityPathObject,\n  Damage,\n  Effect,\n  isRoutineObject,\n  Routine,\n  RoutineObject,\n  State,\n} from \"./RoutineTypes\";\n\nexport const routinesAdapter = createEntityAdapter<Routine>();\nexport const activityPathAdapter = createEntityAdapter<ActivityPath>();\nexport const damageAdapter = createEntityAdapter<Damage>();\nexport const effectAdapter = createEntityAdapter<Effect>();\n\nlet routineId = 1;\nlet activityPathId = 1;\nlet damageId = 1;\nlet effectId = 1;\n\nconst empty: { [key: number]: number } = {};\nconst one: { [key: number]: number } = {};\nfor (let i = 1; i <= 20; i++) {\n  empty[i] = 0;\n  one[i] = 1;\n}\n\nconst saveState = (state: State) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"routineState\", serializedState);\n  } catch {\n    // ignore errors\n  }\n};\n\nconst loadState = () => {\n  // console.log(\"Loading state from local storage\");\n  try {\n    const serializedState = localStorage.getItem(\"routineState\");\n    if (serializedState !== null) {\n      const state = JSON.parse(serializedState);\n      // console.log(state);\n      routineId = Math.max(...state.routines.ids);\n      activityPathId = Math.max(...state.activityPaths.ids);\n      damageId = Math.max(...state.damages.ids);\n      effectId = Math.max(...state.effects.ids);\n      return state;\n    }\n    // console.log(\"Not loaded\");\n    return undefined;\n  } catch (err) {\n    // ignore errors\n    console.log(err);\n    return undefined;\n  }\n};\n\n// try to load initial state\nconst savedState = loadState();\n\nconst initialState: State = savedState\n  ? savedState\n  : {\n      selectedRoutine: 0,\n      selectedActivityPath: undefined,\n      parentRoutine: 0,\n      parentActivity: undefined,\n      routines: routinesAdapter.getInitialState(),\n      activityPaths: activityPathAdapter.getInitialState(),\n      damages: damageAdapter.getInitialState(),\n      effects: effectAdapter.getInitialState(),\n      importRoutine: importStates.MessageSeen,\n    };\n\nconst defaultActivity = {\n  name: \"\",\n  type: activityTypes.STRIKE,\n  condition: conditions.ALWAYS,\n  rollType: rollTypes.NORMAL,\n  profTrend: profTrends.TRAINED,\n  statTrend: statTrends.AS10,\n  itemTrend: itemTrends.NONE,\n  bonusAdjustments: empty,\n  MAP: MAPs.N1,\n  targetType: defenses.AC,\n  damages: [],\n  effects: [],\n  apIds: [],\n};\nconst defaultStrikeParent = {\n  profTrend: profTrends.MARTIALWEAPON,\n  statTrend: statTrends.AS18a,\n  itemTrend: itemTrends.WEAPON,\n  damages: [0, 1],\n  effects: [0],\n};\nconst defaultSaveParent = {\n  type: activityTypes.SAVE,\n  profTrend: profTrends.CASTERSPELL,\n  statTrend: statTrends.AS18a,\n  targetType: defenses.REF,\n  damages: [2],\n  effects: [],\n};\nconst defaultDamage = {\n  damageCondition: dCond.STRIKE,\n  damageType: damageTypes.B,\n  material: materials.NONE,\n  persistent: false,\n  multiplier: 1,\n  damageWhen: [whenConditions.Always],\n\n  dieTrend: dieTrends.NONE,\n  dieAdjustments: empty,\n  diceSize: 6,\n  fatal: false,\n  fatalDie: 10,\n  damageTrend: [],\n  damageAdjustments: empty,\n};\nconst defaultEffect = {\n  effectCondition: conditions.ALWAYS,\n  effectType: effectTypes.FLATFOOT,\n  effectValue: 1,\n  startLevel: 1,\n  endLevel: 20,\n  damageWhen: [whenConditions.Always],\n};\n\nexport const routinesSlice = createSlice({\n  name: \"routines\",\n  initialState,\n  reducers: {\n    setRoutine: (state, action) => {\n      state.selectedRoutine = action.payload;\n      state.selectedActivityPath = undefined;\n      state.parentActivity = undefined;\n      state.parentRoutine = undefined;\n      // also save data\n      saveState(state);\n    },\n    setActivityPath: (state, action) => {\n      if (state.selectedActivityPath === action.payload) {\n        state.selectedActivityPath = undefined;\n      } else {\n        state.selectedActivityPath = action.payload;\n      }\n      state.parentActivity = undefined;\n      state.parentRoutine = undefined;\n    },\n\n    routineAdded: (state, action) => {\n      routinesAdapter.addOne(state.routines, action);\n    },\n    routineUpdated: (state, action: PayloadAction<Update<Routine>>) => {\n      routinesAdapter.updateOne(state.routines, action);\n    },\n    activityPathAdded: (state, action) => {\n      activityPathAdapter.addOne(state.activityPaths, action);\n    },\n    activityPathUpdated: (state, action) => {\n      activityPathAdapter.updateOne(state.activityPaths, action);\n    },\n    damageAdded: (state, action) => {\n      damageAdapter.addOne(state.damages, action);\n    },\n    damageUpdated: (state, action) => {\n      damageAdapter.updateOne(state.damages, action);\n    },\n    effectAdded: (state, action) => {\n      effectAdapter.addOne(state.effects, action);\n    },\n    effectUpdated: (state, action) => {\n      effectAdapter.updateOne(state.effects, action);\n    },\n\n    routineCreated: {\n      reducer: (\n        state,\n        action: PayloadAction<{ id: number; copy: boolean }>\n      ) => {\n        const { id, copy } = action.payload;\n        state.parentRoutine = undefined;\n        if (copy && state.selectedRoutine !== undefined) {\n          const routine = state.routines.entities[state.selectedRoutine]!;\n          const name = routine.name + \" Copy\";\n          const apIds = copyActivityPaths(state, routine.apIds, undefined, id);\n          routinesAdapter.addOne(state.routines, {\n            ...routine,\n            id,\n            name,\n            apIds,\n          });\n        } else {\n          routinesAdapter.addOne(state.routines, {\n            id,\n            name: \"\",\n            display: true,\n            apIds: [],\n            levelDiff: 0,\n            description: \"\",\n            startLevel: 1,\n            endLevel: 20,\n          });\n          state.parentRoutine = id;\n        }\n        state.selectedRoutine = id;\n        state.selectedActivityPath = undefined;\n        state.parentActivity = undefined;\n      },\n      prepare: ({ copy = false }) => {\n        const id = ++routineId;\n        return { payload: { id, copy } };\n      },\n    },\n    routineRemoved: (state, action) => {\n      // recursively remove all children\n      const routineId = action.payload;\n      let childrenIds = state.routines.entities[routineId]!.apIds;\n      removeActivityPaths(state, childrenIds);\n\n      routinesAdapter.removeOne(state.routines, routineId);\n      if (routineId === state.selectedRoutine) {\n        if (state.routines.ids.length === 0) {\n          state.selectedRoutine = undefined;\n        } else {\n          state.selectedRoutine =\n            state.routines.entities[state.routines.ids[0]]!.id;\n        }\n        state.selectedActivityPath = undefined;\n        state.parentActivity = undefined;\n        state.parentRoutine = undefined;\n      }\n    },\n    setNewActivityParent: (\n      state,\n      action: PayloadAction<{\n        parentId?: number;\n        routineId?: number;\n      }>\n    ) => {\n      state.parentRoutine = action.payload.routineId;\n      state.parentActivity = action.payload.parentId;\n      state.selectedActivityPath = undefined;\n    },\n    emptyActivityPathCreated: {\n      reducer: (\n        state,\n        action: PayloadAction<{\n          id: number;\n          routineId: number;\n          activityType?: ActivityType;\n        }>\n      ) => {\n        const { id, routineId, activityType } = action.payload;\n        let ap = {\n          ...defaultActivity,\n          profTrend: profTrends.UNTRAINED,\n          id,\n          routineId,\n        } as ActivityPath;\n        let name = \"\";\n        let description = \"\";\n        if (activityType !== undefined) {\n          if (activityType === activityTypes.STRIKE) {\n            let damages = copyDamages(state, defaultStrikeParent.damages);\n            let effects = copyEffects(state, defaultStrikeParent.effects);\n            name = \"Martial - Strike - d8 Sword\";\n            ap = {\n              ...defaultActivity,\n              ...defaultStrikeParent,\n              id,\n              routineId,\n              name,\n              damages,\n              effects,\n            };\n            name = \"Martial - 1 Strike - d8 Sword\";\n          }\n          if (activityType === activityTypes.SAVE) {\n            let damages = copyDamages(state, defaultSaveParent.damages);\n            let effects = copyEffects(state, defaultSaveParent.effects);\n            name = \"Caster - Fireball\";\n            ap = {\n              ...defaultActivity,\n              ...defaultSaveParent,\n              id,\n              routineId,\n              name,\n              damages,\n              effects,\n            };\n          }\n        } else {\n        }\n\n        state.routines.entities[routineId]!.apIds.push(id);\n        if (state.routines.entities[routineId]!.name === \"\") {\n          state.routines.entities[routineId]!.name = name;\n        }\n        if (state.routines.entities[routineId]!.description === \"\") {\n          state.routines.entities[routineId]!.description = description;\n        }\n        activityPathAdapter.addOne(state.activityPaths, ap);\n        state.selectedActivityPath = id;\n        state.parentActivity = undefined;\n        state.parentRoutine = undefined;\n      },\n      prepare: ({\n        routineId,\n        activityType,\n      }: {\n        routineId: number;\n        activityType?: ActivityType;\n      }) => {\n        const id = ++activityPathId;\n        return {\n          payload: {\n            id,\n            routineId,\n            activityType,\n          },\n        };\n      },\n    },\n    activityPathCreated: (\n      state,\n      action: PayloadAction<{\n        strikeInfo?: StrikeInfo;\n        skillInfo?: SkillInfo;\n        cantripInfo?: CantripInfo;\n        spellInfo?: SpellInfo;\n        impulseInfo?: ImpulseInfo;\n      }>\n    ) => {\n      const { parentActivity: parentId, parentRoutine: routineId } = state;\n\n      const { strikeInfo, skillInfo, cantripInfo, spellInfo, impulseInfo } = action.payload;\n      let id: number = 0;\n      let name = \"\";\n      let description = \"\";\n\n      if (strikeInfo !== undefined) {\n        id = createStrikeActivity(state, parentId, routineId, strikeInfo, 0);\n        [name, description] = getStrikeRoutineName(strikeInfo);\n      }\n      if (skillInfo !== undefined) {\n        [name, description] = getSkillRoutineName(skillInfo);\n        id = createSkillActivity(state, parentId, routineId, skillInfo);\n      }\n      if (cantripInfo !== undefined) {\n        [name, description] = getCantripRoutineName(cantripInfo);\n        id = createCantripActivity(state, parentId, routineId, cantripInfo);\n      }\n      if (spellInfo !== undefined) {\n        [name, description] = getSpellRoutineName(spellInfo);\n        id = createSpellActivity(state, parentId, routineId, spellInfo);\n      }\n      if (impulseInfo !== undefined) {\n        [name, description] = getImpulseRoutineName(impulseInfo);\n        id = createImpulseActivity(state, parentId, routineId, impulseInfo);\n      }\n\n      if (routineId !== undefined) {\n        state.routines.entities[routineId]!.apIds.push(id);\n        if (state.routines.entities[routineId]!.name === \"\") {\n          state.routines.entities[routineId]!.name = name;\n        }\n        if (state.routines.entities[routineId]!.description === \"\") {\n          state.routines.entities[routineId]!.description = description;\n        }\n      }\n      if (parentId !== undefined) {\n        state.activityPaths.entities[parentId]!.apIds.push(id);\n      }\n\n      state.selectedActivityPath = id;\n      state.parentActivity = undefined;\n      state.parentRoutine = undefined;\n    },\n    activityPathContinued: {\n      reducer: (\n        state,\n        action: PayloadAction<{\n          id: number;\n          parentId: number;\n        }>\n      ) => {\n        const { id, parentId } = action.payload;\n        state.activityPaths.entities[parentId]!.apIds.push(id);\n        const parentAP = state.activityPaths.entities[parentId]!;\n        // copy parent damages and effects\n        let newDamages = copyDamages(state, parentAP.damages);\n        let newEffects = copyEffects(state, parentAP.effects);\n\n        activityPathAdapter.addOne(state.activityPaths, {\n          ...parentAP,\n          id,\n          parentId,\n          routineId: undefined,\n          MAP: nextMAPs[parentAP.MAP],\n          damages: newDamages,\n          effects: newEffects,\n          apIds: [],\n        });\n        state.selectedActivityPath = id;\n      },\n      prepare: ({ parentId }: { parentId: number }) => {\n        const id = ++activityPathId;\n        return {\n          payload: {\n            id,\n            parentId,\n          },\n        };\n      },\n    },\n    activityPathRemoved: (state, action) => {\n      const { id, parentId, routineId } = action.payload;\n\n      // recursively remove all children\n      let childrenIds = [id];\n      removeActivityPaths(state, childrenIds);\n\n      if (parentId !== undefined) {\n        state.activityPaths.entities[parentId]!.apIds =\n          state.activityPaths.entities[parentId]!.apIds.filter(\n            (apId) => apId !== id\n          );\n      }\n      if (routineId !== undefined) {\n        state.routines.entities[routineId]!.apIds = state.routines.entities[\n          routineId\n        ]!.apIds.filter((apId) => apId !== id);\n      }\n      state.selectedActivityPath = undefined;\n    },\n\n    damageCreated: {\n      reducer: (\n        state,\n        action: PayloadAction<{\n          id: number;\n          parentId: number;\n        }>\n      ) => {\n        const { id, parentId } = action.payload;\n        state.activityPaths.entities[parentId]!.damages.push(id);\n        damageAdapter.addOne(state.damages, { id, ...defaultDamage });\n      },\n      prepare: ({ parentId }) => {\n        const id = ++damageId;\n        return {\n          payload: {\n            id,\n            parentId,\n          },\n        };\n      },\n    },\n    damageRemoved: (\n      state,\n      action: PayloadAction<{\n        id: number;\n        parentId: number;\n      }>\n    ) => {\n      const { id, parentId } = action.payload;\n      state.activityPaths.entities[parentId]!.damages =\n        state.activityPaths.entities[parentId]!.damages.filter(\n          (did) => did !== id\n        );\n      damageAdapter.removeOne(state.damages, id);\n    },\n    effectCreated: {\n      reducer: (\n        state,\n        action: PayloadAction<{\n          id: number;\n          parentId: number;\n        }>\n      ) => {\n        const { id, parentId } = action.payload;\n        state.activityPaths.entities[parentId]!.effects.push(id);\n        effectAdapter.addOne(state.effects, {\n          ...defaultEffect,\n          id,\n        });\n      },\n      prepare: ({ parentId }) => {\n        const id = ++effectId;\n        return {\n          payload: {\n            id,\n            parentId,\n          },\n        };\n      },\n    },\n    effectRemoved: (state, action) => {\n      const { id, parentId } = action.payload;\n      state.activityPaths.entities[parentId]!.effects =\n        state.activityPaths.entities[parentId]!.effects.filter(\n          (eid) => eid !== id\n        );\n      effectAdapter.removeOne(state.effects, id);\n    },\n    importRoutine: (state, action) => {\n      try {\n        state.importRoutine = importStates.Importing;\n        const routineObject = JSON.parse(action.payload);\n        if (isRoutineObject(routineObject)) {\n          state.selectedRoutine = insertRoutine(state, routineObject);\n          state.selectedActivityPath = undefined;\n          state.parentActivity = undefined;\n          state.parentRoutine = undefined;\n          state.importRoutine = importStates.Successful;\n        } else {\n          state.importRoutine = importStates.Failure;\n        }\n      } catch (error) {\n        console.log(error);\n        console.log(\"Parsing failed\");\n        state.importRoutine = importStates.Failure;\n      }\n    },\n  },\n});\n\nexport const {\n  setRoutine,\n  setActivityPath,\n  setNewActivityParent,\n\n  routineAdded,\n  routineUpdated,\n  routineCreated,\n  routineRemoved,\n\n  activityPathAdded,\n  activityPathUpdated,\n  emptyActivityPathCreated,\n  activityPathCreated,\n  activityPathContinued,\n  activityPathRemoved,\n\n  damageAdded,\n  damageUpdated,\n  damageCreated,\n  damageRemoved,\n\n  effectAdded,\n  effectUpdated,\n  effectCreated,\n  effectRemoved,\n\n  importRoutine,\n} = routinesSlice.actions;\n\nexport default routinesSlice.reducer;\n\nexport const {\n  selectById: selectRoutineById,\n  selectIds: selectRoutineIds,\n  selectEntities: selectRoutineEntities,\n  selectAll: selectAllRoutines,\n  selectTotal: selectTotalRoutines,\n} = routinesAdapter.getSelectors((state: RootState) => state.routines.routines);\n\nexport const {\n  selectById: selectactivityPathById,\n  selectIds: selectactivityPathIds,\n  selectEntities: selectactivityPathEntities,\n  selectAll: selectAllactivityPaths,\n  selectTotal: selectTotalactivityPaths,\n} = activityPathAdapter.getSelectors(\n  (state: RootState) => state.routines.activityPaths\n);\n\nexport const {\n  selectById: selectdamageById,\n  selectIds: selectdamageIds,\n  selectEntities: selectdamageEntities,\n  selectAll: selectAlldamages,\n  selectTotal: selectTotaldamages,\n} = damageAdapter.getSelectors((state: RootState) => state.routines.damages);\n\nexport const {\n  selectById: selecteffectById,\n  selectIds: selecteffectIds,\n  selectEntities: selecteffectEntities,\n  selectAll: selectAlleffects,\n  selectTotal: selectTotaleffects,\n} = effectAdapter.getSelectors((state: RootState) => state.routines.effects);\n\nexport const selectSelectedRoutine = (state: RootState) =>\n  state.routines.selectedRoutine;\nexport const selectSelectedActivityPath = (state: RootState) =>\n  state.routines.selectedActivityPath;\nexport const selectParentActivityId = (state: RootState) =>\n  state.routines.parentActivity;\nexport const selectCreateNewActivity = (state: RootState) =>\n  state.routines.selectedActivityPath === undefined &&\n  (state.routines.parentRoutine !== undefined ||\n    state.routines.parentActivity !== undefined);\nexport const selectSelectedRoutineObject = (state: RootState) => {\n  if (state.routines.selectedRoutine !== undefined) {\n    const routine =\n      state.routines.routines.entities[state.routines.selectedRoutine]!;\n    const routineObject = {\n      ...routine,\n      apIds: getActivityPaths(state.routines, routine.apIds),\n    };\n    return routineObject;\n  }\n  return undefined;\n};\nexport const selectRoutineDescriptions = (state: RootState) => {\n  return Object.values(state.routines.routines.entities)\n    .filter((routine) => routine?.display)\n    .map((routine) => routine?.name + \": \" + routine?.description);\n};\n\nexport const selectImportState = (state: RootState) => {\n  return state.routines.importRoutine;\n};\n\nconst removeActivityPaths = (state: WritableDraft<State>, ids: number[]) => {\n  let index = 0;\n  while (index < ids.length) {\n    let ap = state.activityPaths.entities[ids[index]]!;\n    ids.push(...ap!.apIds);\n    damageAdapter.removeMany(state.damages, ap.damages);\n    effectAdapter.removeMany(state.effects, ap.effects);\n    activityPathAdapter.removeOne(state.activityPaths, ap.id);\n    index += 1;\n  }\n};\n\nconst createStrikeActivity = (\n  state: WritableDraft<State>,\n  parentId: number | undefined,\n  routineId: number | undefined,\n  strikeInfo: StrikeInfo,\n  strikeNumber: number,\n  previousHits: number = 0,\n  condition: Condition = conditions.ALWAYS\n) => {\n  let useWeapon2 =\n    strikeInfo.twf && strikeInfo.isStrikeSecondaryWeapon[strikeNumber];\n  if (strikeInfo.twf && strikeInfo.activity === \"Double Slice\") {\n    if (strikeNumber === 0) useWeapon2 = false;\n    else useWeapon2 = true;\n  }\n\n  const id = ++activityPathId;\n  let apIds: number[] = [];\n  if (strikeNumber < strikeInfo.numStrikes - 1) {\n    if (strikeInfo.activity === \"Double Slice\") {\n      // if the first attack of double slice do no damage, but make 3 child activities for crit, hit, and miss\n      const onCrit = createStrikeActivity(\n        state,\n        id,\n        undefined,\n        strikeInfo,\n        strikeNumber + 1,\n        previousHits + 1,\n        conditions.CRIT\n      );\n      const onHit = createStrikeActivity(\n        state,\n        id,\n        undefined,\n        strikeInfo,\n        strikeNumber + 1,\n        previousHits + 1,\n        conditions.SUCC\n      );\n      const onMiss = createStrikeActivity(\n        state,\n        id,\n        undefined,\n        strikeInfo,\n        strikeNumber + 1,\n        previousHits,\n        conditions.FAIL_WORSE\n      );\n      apIds.push(onCrit, onHit, onMiss);\n    }\n    // need to combine damages for double slice with on miss, onHit, onCrit\n    else if (\n      strikeInfo.cClass === \"Ranger\" &&\n      strikeInfo.classOption === \"Precision Edge\"\n    ) {\n      const onHit = createStrikeActivity(\n        state,\n        id,\n        undefined,\n        strikeInfo,\n        strikeNumber + 1,\n        previousHits + 1,\n        conditions.AT_LEAST_SUCC\n      );\n      const onMiss = createStrikeActivity(\n        state,\n        id,\n        undefined,\n        strikeInfo,\n        strikeNumber + 1,\n        previousHits,\n        conditions.FAIL_WORSE\n      );\n      apIds.push(onHit, onMiss);\n    } else {\n      apIds.push(\n        createStrikeActivity(state, id, undefined, strikeInfo, strikeNumber + 1)\n      );\n    }\n  }\n  const name = getStrikeName(strikeInfo, useWeapon2);\n\n  let damages: number[] = [];\n  if (strikeInfo.activity === \"Double Slice\") {\n    if (strikeNumber < strikeInfo.numStrikes - 1) {\n      damages = [];\n    } else {\n      damages = createStrikeDamages(\n        state,\n        strikeInfo,\n        strikeNumber,\n        useWeapon2,\n        previousHits,\n        true,\n        condition\n        // which double slice activity is this? crit/hit/miss\n      );\n    }\n  } else {\n    damages = createStrikeDamages(\n      state,\n      strikeInfo,\n      strikeNumber,\n      useWeapon2,\n      previousHits\n    );\n  }\n  let effects = createStrikeEffects(\n    state,\n    strikeInfo,\n    strikeNumber,\n    useWeapon2\n  );\n  let MAP: MAP = classWeaponMAP(strikeInfo, useWeapon2);\n  const effectiveStrikeNumber =\n    strikeInfo.numPrevStrikes +\n    (strikeInfo.activity === \"Double Slice\" ? 0 : strikeNumber);\n  if (effectiveStrikeNumber === 1) {\n    MAP = nextMAPs[MAP];\n  } else if (effectiveStrikeNumber >= 2) {\n    MAP = nextMAPs[nextMAPs[MAP]];\n  }\n\n  let itemTrend: ItemTrend = itemTrends.WEAPON;\n  if (\n    strikeInfo.classOption === \"Bomb Strike\" ||\n    strikeInfo.classOption === \"Bomb w/ feats\"\n  ) {\n    itemTrend = itemTrends.BOMB;\n  }\n  if (\n    strikeInfo.classOption === \"Perpetual Bomb\" ||\n    strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\n  ) {\n    itemTrend = itemTrends.BOMB;\n  }\n  activityPathAdapter.addOne(state.activityPaths, {\n    ...defaultActivity,\n    id,\n    parentId,\n    routineId,\n    condition,\n    name,\n    type: activityTypes.STRIKE,\n    profTrend: classWeaponProf(strikeInfo.cClass, strikeInfo.classOption),\n    statTrend: strikeInfo.attackScore,\n    itemTrend,\n    bonusAdjustments: classAdjustments(strikeInfo, strikeNumber),\n    MAP,\n\n    damages,\n    effects,\n    apIds,\n  });\n  return id;\n};\nconst createStrikeDamages = (\n  state: WritableDraft<State>,\n  strikeInfo: StrikeInfo,\n  strikeNumber: number,\n  useWeapon2: boolean = false,\n  previousHits: number = 0,\n  addDoubleSliceDamage: boolean = false,\n  doubleSliceCondition: Condition = conditions.FAIL_WORSE\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n  const newDamages: number[] = [];\n\n  if (addDoubleSliceDamage) {\n    let weapon = strikeInfo.weapon1;\n    // use the first weapon for this damage always\n    if (doubleSliceCondition === conditions.CRIT) {\n      // add all damage as if crit... always\n      let id = ++damageId;\n      let dieTrend: DieTrend = dieTrends.WEAPON;\n      if (\n        strikeInfo.classOption === \"Bomb Strike\" ||\n        strikeInfo.classOption === \"Bomb w/ feats\"\n      ) {\n        dieTrend = dieTrends.BOMB;\n      }\n      if (\n        strikeInfo.classOption === \"Perpetual Bomb\" ||\n        strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\n      ) {\n        dieTrend = dieTrends.BOMB;\n      }\n      const weaponDamage: Damage = {\n        ...defaultDamage,\n        damageCondition: dCond.ALWAYS,\n        multiplier: 2,\n        id,\n        dieTrend,\n        dieAdjustments: activityWeaponDiceAdjustments(strikeInfo),\n        diceSize: hasFatal(strikeInfo) ? weapon.fatalSize : weapon.dieSize,\n        fatal: hasFatal(strikeInfo),\n        fatalDie: weapon.fatalSize,\n        damageTrend: classWeaponDamageTrends(strikeInfo, strikeNumber - 1),\n        damageAdjustments: classDamageAdjustments(strikeInfo),\n      };\n      damageAdapter.addOne(state.damages, weaponDamage);\n      newDamages.push(id);\n\n      if (\n        !(\n          strikeInfo.cClass === \"Alchemist\" &&\n          strikeInfo.classOption !== \"Normal\"\n        )\n      ) {\n        id = ++damageId;\n        const runeDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.ALWAYS,\n          multiplier: 2,\n          id,\n          dieTrend: weapon.runes,\n          diceSize: diceSizes[6],\n          damageType: damageTypes.FIRE,\n        };\n        damageAdapter.addOne(state.damages, runeDamage);\n        newDamages.push(id);\n      }\n\n      if (hasClassPrecisionDamage(strikeInfo, previousHits)) {\n        let { dieTrend, diceSize, damageWhen, damageTrend } =\n          classPrecisionDamage(strikeInfo, previousHits);\n        id = ++damageId;\n        const classDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.ALWAYS,\n          multiplier: 2,\n          id,\n          dieTrend,\n          diceSize,\n          damageType: damageTypes.PRECISION,\n          damageWhen,\n          damageTrend,\n        };\n        damageAdapter.addOne(state.damages, classDamage);\n        newDamages.push(id);\n      }\n\n      if (hasDeadly(strikeInfo)) {\n        let damageAdjustments = empty;\n        if (!hasFatal(strikeInfo) && hasPickCritSpec(strikeInfo))\n          damageAdjustments = critSpecDamage(strikeInfo);\n        id = ++damageId;\n        const critDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.ALWAYS,\n          id,\n          dieTrend: dieTrends.DEADLY,\n          diceSize: weapon.deadlySize,\n          damageAdjustments,\n        };\n        damageAdapter.addOne(state.damages, critDamage);\n        newDamages.push(id);\n      }\n      if (hasFatal(strikeInfo)) {\n        let damageAdjustments = empty;\n        if (hasPickCritSpec(strikeInfo))\n          damageAdjustments = critSpecDamage(strikeInfo);\n        id = ++damageId;\n        const critDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.ALWAYS,\n          id,\n          dieAdjustments: one,\n          diceSize: weapon.fatalSize,\n          damageAdjustments,\n        };\n        damageAdapter.addOne(state.damages, critDamage);\n        newDamages.push(id);\n      }\n      if (\n        !hasDeadly(strikeInfo) &&\n        !hasFatal(strikeInfo) &&\n        hasPickCritSpec(strikeInfo)\n      ) {\n        let damageAdjustments = critSpecDamage(strikeInfo);\n        id = ++damageId;\n        const critDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.ALWAYS,\n          id,\n          diceSize: weapon.fatalSize,\n          damageAdjustments,\n        };\n        damageAdapter.addOne(state.damages, critDamage);\n        newDamages.push(id);\n      }\n      if (hasKnifeCritSpec(strikeInfo)) {\n        let damageAdjustments = critSpecDamage(strikeInfo);\n        id = ++damageId;\n        const critDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.ALWAYS,\n          id,\n          dieAdjustments: critSpecDice(strikeInfo),\n          diceSize: diceSizes[6],\n          damageAdjustments,\n          persistent: true,\n        };\n        damageAdapter.addOne(state.damages, critDamage);\n        newDamages.push(id);\n      }\n    } else if (doubleSliceCondition === conditions.SUCC) {\n      // add hit damage always, add precision damage only on miss so we don't add it twice with the second attack\n      let id = ++damageId;\n      let dieTrend: DieTrend = dieTrends.WEAPON;\n      if (\n        strikeInfo.classOption === \"Bomb Strike\" ||\n        strikeInfo.classOption === \"Bomb w/ feats\"\n      ) {\n        dieTrend = dieTrends.BOMB;\n      }\n      if (\n        strikeInfo.classOption === \"Perpetual Bomb\" ||\n        strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\n      ) {\n        dieTrend = dieTrends.BOMB;\n      }\n      const weaponDamage: Damage = {\n        ...defaultDamage,\n        damageCondition: dCond.ALWAYS,\n        id,\n        dieTrend,\n        dieAdjustments: activityWeaponDiceAdjustments(strikeInfo),\n        diceSize: weapon.dieSize,\n        fatal: false,\n        fatalDie: weapon.fatalSize,\n        damageTrend: classWeaponDamageTrends(strikeInfo, strikeNumber - 1),\n        damageAdjustments: classDamageAdjustments(strikeInfo),\n      };\n      damageAdapter.addOne(state.damages, weaponDamage);\n      newDamages.push(id);\n\n      if (\n        !(\n          strikeInfo.cClass === \"Alchemist\" &&\n          strikeInfo.classOption !== \"Normal\"\n        )\n      ) {\n        id = ++damageId;\n        const runeDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.ALWAYS,\n          id,\n          dieTrend: weapon.runes,\n          diceSize: diceSizes[6],\n          damageType: damageTypes.FIRE,\n        };\n        damageAdapter.addOne(state.damages, runeDamage);\n        newDamages.push(id);\n      }\n\n      if (hasClassPrecisionDamage(strikeInfo, previousHits)) {\n        let { dieTrend, diceSize, damageWhen, damageTrend } =\n          classPrecisionDamage(strikeInfo, previousHits);\n        id = ++damageId;\n        const classDamage: Damage = {\n          ...defaultDamage,\n          damageCondition: dCond.FAIL_WORSE,\n          id,\n          dieTrend,\n          diceSize,\n          damageType: damageTypes.PRECISION,\n          damageWhen,\n          damageTrend,\n        };\n        damageAdapter.addOne(state.damages, classDamage);\n        newDamages.push(id);\n      }\n    }\n  }\n\n  let id = ++damageId;\n  let dieTrend: DieTrend = dieTrends.WEAPON;\n  if (\n    strikeInfo.classOption === \"Bomb Strike\" ||\n    strikeInfo.classOption === \"Bomb w/ feats\"\n  ) {\n    dieTrend = dieTrends.BOMB;\n  }\n  if (\n    strikeInfo.classOption === \"Perpetual Bomb\" ||\n    strikeInfo.classOption === \"Perpetual Bomb w/ feats\"\n  ) {\n    dieTrend = dieTrends.BOMB;\n  }\n  const weaponDamage: Damage = {\n    ...defaultDamage,\n    id,\n    dieTrend,\n    dieAdjustments: activityWeaponDiceAdjustments(strikeInfo),\n    diceSize: weapon.dieSize,\n    fatal: hasFatal(strikeInfo, useWeapon2),\n    fatalDie: weapon.fatalSize,\n    damageTrend: classWeaponDamageTrends(strikeInfo, strikeNumber, useWeapon2),\n    damageAdjustments: classDamageAdjustments(strikeInfo, useWeapon2),\n  };\n  damageAdapter.addOne(state.damages, weaponDamage);\n  newDamages.push(id);\n\n  if (\n    !(strikeInfo.cClass === \"Alchemist\" && strikeInfo.classOption !== \"Normal\")\n  ) {\n    id = ++damageId;\n    const runeDamage: Damage = {\n      ...defaultDamage,\n      id,\n      dieTrend: weapon.runes,\n      diceSize: diceSizes[6],\n      damageType: damageTypes.FIRE,\n    };\n    damageAdapter.addOne(state.damages, runeDamage);\n    newDamages.push(id);\n  }\n\n  if (\n    !(addDoubleSliceDamage && doubleSliceCondition === conditions.CRIT) &&\n    hasClassPrecisionDamage(strikeInfo, previousHits)\n  ) {\n    let { dieTrend, diceSize, damageWhen, damageTrend } = classPrecisionDamage(\n      strikeInfo,\n      previousHits\n    );\n    id = ++damageId;\n    const classDamage: Damage = {\n      ...defaultDamage,\n      id,\n      dieTrend,\n      diceSize,\n      damageTrend,\n      damageType: damageTypes.PRECISION,\n      damageWhen,\n    };\n    damageAdapter.addOne(state.damages, classDamage);\n    newDamages.push(id);\n  }\n\n  if (hasActivityDamageDice(strikeInfo)) {\n    id = ++damageId;\n    const activityDamage: Damage = {\n      ...defaultDamage,\n      id,\n      ...activityDamageDice(strikeInfo),\n    };\n    damageAdapter.addOne(state.damages, activityDamage);\n    newDamages.push(id);\n  }\n  if (hasActivityCritDamage(strikeInfo)) {\n    id = ++damageId;\n    const activityDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.CRIT,\n      ...activityCritDamage(strikeInfo),\n    };\n    damageAdapter.addOne(state.damages, activityDamage);\n    newDamages.push(id);\n  }\n  if (hasSplashDamage(strikeInfo)) {\n    id = ++damageId;\n    const splashDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.AT_LEAST_FAIL,\n      ...getSplashDamage(strikeInfo),\n    };\n    damageAdapter.addOne(state.damages, splashDamage);\n    newDamages.push(id);\n  }\n\n  if (hasDeadly(strikeInfo, useWeapon2)) {\n    let damageAdjustments = empty;\n    if (\n      !hasFatal(strikeInfo, useWeapon2) &&\n      hasPickCritSpec(strikeInfo, useWeapon2)\n    )\n      damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\n    id = ++damageId;\n    const critDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.CRIT,\n      dieTrend: dieTrends.DEADLY,\n      diceSize: weapon.deadlySize,\n      damageAdjustments,\n    };\n    damageAdapter.addOne(state.damages, critDamage);\n    newDamages.push(id);\n  }\n  if (hasFatal(strikeInfo, useWeapon2)) {\n    let damageAdjustments = empty;\n    if (hasPickCritSpec(strikeInfo, useWeapon2))\n      damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\n    id = ++damageId;\n    const critDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.CRIT,\n      dieAdjustments: one,\n      diceSize: weapon.fatalSize,\n      damageAdjustments,\n    };\n    damageAdapter.addOne(state.damages, critDamage);\n    newDamages.push(id);\n  }\n  if (\n    !hasDeadly(strikeInfo, useWeapon2) &&\n    !hasFatal(strikeInfo, useWeapon2) &&\n    hasPickCritSpec(strikeInfo, useWeapon2)\n  ) {\n    let damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\n    id = ++damageId;\n    const critDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.CRIT,\n      diceSize: weapon.fatalSize,\n      damageAdjustments,\n    };\n    damageAdapter.addOne(state.damages, critDamage);\n    newDamages.push(id);\n  }\n  if (hasKnifeCritSpec(strikeInfo, useWeapon2)) {\n    let damageAdjustments = critSpecDamage(strikeInfo, useWeapon2);\n    id = ++damageId;\n    const critDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.CRIT,\n      dieAdjustments: critSpecDice(strikeInfo, useWeapon2),\n      diceSize: diceSizes[6],\n      damageType: damageTypes.BLEED,\n      damageAdjustments,\n      persistent: true,\n    };\n    damageAdapter.addOne(state.damages, critDamage);\n    newDamages.push(id);\n  }\n\n  return newDamages;\n};\nconst createStrikeEffects = (\n  state: WritableDraft<State>,\n  strikeInfo: StrikeInfo,\n  strikeNumber: number,\n  useWeapon2: boolean = false\n) => {\n  let weapon = useWeapon2 ? strikeInfo.weapon2 : strikeInfo.weapon1;\n\n  const newEffects: number[] = [];\n  let id;\n\n  if (hasCritSpecEffect(strikeInfo, useWeapon2)) {\n    let effectType: EffectType = effectStateTypes.FLATFOOT;\n    if (hasSwordCritSpec(strikeInfo, useWeapon2))\n      effectType = effectStateTypes.FLATFOOT;\n    if (hasHammerCritSpec(strikeInfo, useWeapon2))\n      effectType = effectStateTypes.PRONE;\n    if (hasSpearCritSpec(strikeInfo, useWeapon2))\n      effectType = effectValueTypes.CLUMSY;\n\n    id = ++effectId;\n    const critSpecEffect: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.CRIT,\n      effectType,\n      effectValue: 1,\n      startLevel: weapon.critSpecLevel,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, critSpecEffect);\n  }\n  if (hasBackswing(strikeInfo, useWeapon2)) {\n    id = ++effectId;\n    const backswingEffect: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.FAIL_WORSE,\n      effectType: effectValueTypes.BONUSC1,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, backswingEffect);\n  }\n\n  return newEffects;\n};\n\nconst createSkillActivity = (\n  state: WritableDraft<State>,\n  parentId: number | undefined,\n  routineId: number | undefined,\n  skillInfo: SkillInfo\n) => {\n  const id = ++activityPathId;\n\n  let damages = createSkillDamages(state, skillInfo);\n  let effects = createSkillEffects(state, skillInfo);\n\n  activityPathAdapter.addOne(state.activityPaths, {\n    ...defaultActivity,\n    id,\n    parentId,\n    routineId,\n    name: skillInfo.skillActivity,\n    type: activityTypes.SKILL,\n    profTrend: skillInfo.proficiency,\n    statTrend: skillInfo.abilityScore,\n    itemTrend: skillInfo.itemBonus,\n    targetType: getSkillTarget(skillInfo),\n\n    damages,\n    effects,\n  });\n  return id;\n};\n\nconst createSkillDamages = (\n  state: WritableDraft<State>,\n  skillInfo: SkillInfo\n) => {\n  const newDamages: number[] = [];\n\n  if (hasSkillDamage(skillInfo)) {\n    let id = ++damageId;\n    const skillDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.CRIT,\n      dieAdjustments: one,\n      diceSize: diceSizes[6],\n    };\n    newDamages.push(id);\n    damageAdapter.addOne(state.damages, skillDamage);\n  }\n\n  return newDamages;\n};\nconst createSkillEffects = (\n  state: WritableDraft<State>,\n  skillInfo: SkillInfo\n) => {\n  const newEffects: number[] = [];\n\n  for (let { effectCondition, effectType, effectValue } of getSkillEffects(\n    skillInfo\n  )) {\n    let id = ++effectId;\n    const skillEffect: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition,\n      effectType,\n      effectValue,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, skillEffect);\n  }\n\n  return newEffects;\n};\nconst createCantripActivity = (\n  state: WritableDraft<State>,\n  parentId: number | undefined,\n  routineId: number | undefined,\n  cantripInfo: CantripInfo\n) => {\n  const id = ++activityPathId;\n\n  let damages = createCantripDamages(state, cantripInfo);\n\n  activityPathAdapter.addOne(state.activityPaths, {\n    ...defaultActivity,\n    id,\n    parentId,\n    routineId,\n    name: cantripInfo.cantrip,\n    profTrend: cantripInfo.proficiency,\n    statTrend: cantripInfo.abilityScore,\n    ...getCantripTarget(cantripInfo),\n\n    damages,\n  });\n  return id;\n};\n\nconst createCantripDamages = (\n  state: WritableDraft<State>,\n  cantripInfo: CantripInfo\n) => {\n  const newDamages: number[] = [];\n\n  let id = ++damageId;\n  const cantripDamage: Damage = {\n    ...defaultDamage,\n    id,\n    dieTrend: dieTrends.SPELLLEVEL1,\n    damageTrend: [cantripInfo.abilityScore],\n    ...getCantripDamage(cantripInfo),\n  };\n  newDamages.push(id);\n  damageAdapter.addOne(state.damages, cantripDamage);\n\n  if (\n    cantripInfo.cantrip === \"Produce Flame\" ||\n    cantripInfo.cantrip === \"Gouging Claw\"\n  ) {\n    let id = ++damageId;\n    const persDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.CRIT,\n      diceSize: diceSizes[4],\n      dieTrend: dieTrends.SPELLLEVEL1,\n      persistent: true,\n    };\n    newDamages.push(id);\n    damageAdapter.addOne(state.damages, persDamage);\n  }\n  return newDamages;\n};\n\nconst createSpellActivity = (\n  state: WritableDraft<State>,\n  parentId: number | undefined,\n  routineId: number | undefined,\n  spellInfo: SpellInfo\n) => {\n  const id = ++activityPathId;\n\n  let damages = createSpellDamages(state, spellInfo);\n  let effects = createSpellEffects(state, spellInfo);\n\n  activityPathAdapter.addOne(state.activityPaths, {\n    ...defaultActivity,\n    id,\n    parentId,\n    routineId,\n    name: spellInfo.spell,\n    type: activityTypes.SAVE,\n    profTrend: spellInfo.proficiency,\n    statTrend: spellInfo.abilityScore,\n    ...getSpellTarget(spellInfo),\n\n    damages,\n    effects,\n  });\n  return id;\n};\n\nconst createSpellDamages = (\n  state: WritableDraft<State>,\n  spellInfo: SpellInfo\n) => {\n  const newDamages: number[] = [];\n\n  if (spellInfo.spell === \"Fireball\") {\n    let id = ++damageId;\n    const spellDamage: Damage = {\n      ...defaultDamage,\n      id,\n      damageCondition: dCond.BASIC,\n      dieTrend: dieTrends.SPELLLEVEL2,\n    };\n    newDamages.push(id);\n    damageAdapter.addOne(state.damages, spellDamage);\n  }\n  return newDamages;\n};\n\nconst createSpellEffects = (\n  state: WritableDraft<State>,\n  spellInfo: SpellInfo\n) => {\n  const newEffects: number[] = [];\n\n  if (spellInfo.spell === \"Fear\") {\n    let id = ++effectId;\n    const crfa: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.CRIF,\n      effectType: effectTypes.FRIGHTENED,\n      effectValue: 3,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, crfa);\n\n    id = ++effectId;\n    const fail: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.FAIL,\n      effectType: effectTypes.FRIGHTENED,\n      effectValue: 2,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, fail);\n\n    id = ++effectId;\n    const succ: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.SUCC,\n      effectType: effectTypes.FRIGHTENED,\n      effectValue: 1,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, succ);\n  } else if (spellInfo.spell === \"Heroism\") {\n    let id = ++effectId;\n    const e3: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.ALWAYS,\n      effectType: effectTypes.BONUSSA,\n      effectValue: 1,\n      startLevel: 5,\n      endLevel: 10,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, e3);\n\n    id = ++effectId;\n    const e6: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.ALWAYS,\n      effectType: effectTypes.BONUSSA,\n      effectValue: 1,\n      startLevel: 11,\n      endLevel: 16,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, e6);\n\n    id = ++effectId;\n    const e9: Effect = {\n      ...defaultEffect,\n      id,\n      effectCondition: conditions.ALWAYS,\n      effectType: effectTypes.BONUSSA,\n      effectValue: 1,\n      startLevel: 17,\n      endLevel: 20,\n    };\n    newEffects.push(id);\n    effectAdapter.addOne(state.effects, e9);\n  }\n\n  return newEffects;\n  // for (let { effectCondition, effectType, effectValue } of getSkillEffects(\n  //   skillInfo\n  // )) {\n  //   let id = ++effectId;\n  //   const skillEffect: Effect = {\n  //     ...defaultEffect,\n  //     id,\n  //     effectCondition,\n  //     effectType,\n  //     effectValue,\n  //   };\n  //   newEffects.push(id);\n  //   effectAdapter.addOne(state.effects, skillEffect);\n  // }\n};\n\nconst createImpulseActivity = (\n  state: WritableDraft<State>,\n  parentId: number | undefined,\n  routineId: number | undefined,\n  impulseInfo: ImpulseInfo\n) => {\n  const id = ++activityPathId;\n\n  let damages = createImpulseDamages(state, impulseInfo);\n\n  activityPathAdapter.addOne(state.activityPaths, {\n    ...defaultActivity,\n    id,\n    parentId,\n    routineId,\n    name: impulseInfo.impulse,\n    profTrend: impulseInfo.proficiency,\n    statTrend: impulseInfo.abilityScore,\n    itemTrend: itemTrends.Gate_Attenuator,\n    MAP: impulseInfo.weaponInfo.traits[\"agile\"] ? MAPs.A1 : MAPs.N1,\n    ...getImpulseTarget(impulseInfo),\n\n    damages,\n  });\n  return id;\n};\n\nconst createImpulseDamages = (\n  state: WritableDraft<State>,\n  impulseInfo: ImpulseInfo\n) => {\n  const newDamages: number[] = [];\n\n  let id = ++damageId;\n  const impulseDamage: Damage = {\n    ...defaultDamage,\n    id,\n    ...getImpulseDamage(impulseInfo),\n  };\n  newDamages.push(id);\n  damageAdapter.addOne(state.damages, impulseDamage);\n\n  return newDamages;\n};\n\n\nconst copyActivityPaths = (\n  state: WritableDraft<State>,\n  apIds: number[],\n  parentId?: number,\n  routineId?: number\n) => {\n  let newApIds = [];\n  for (let apId of apIds) {\n    const id = ++activityPathId;\n    const ap = state.activityPaths.entities[apId]!;\n    const apIds = copyActivityPaths(state, ap.apIds, id);\n    const damages = copyDamages(state, ap.damages);\n    const effects = copyEffects(state, ap.effects);\n\n    activityPathAdapter.addOne(state.activityPaths, {\n      ...ap,\n      id,\n      parentId,\n      routineId,\n      damages,\n      effects,\n      apIds,\n    });\n    newApIds.push(id);\n  }\n  return newApIds;\n};\nconst copyDamages = (state: WritableDraft<State>, damages: number[]) => {\n  const newDamages = [];\n  for (let did of damages) {\n    let damage = state.damages.entities[did]!;\n    // create a new damage entity and add it's id to newDamages\n    const id = ++damageId;\n    damageAdapter.addOne(state.damages, { ...damage, id });\n    newDamages.push(id);\n  }\n  return newDamages;\n};\nconst copyEffects = (state: WritableDraft<State>, effects: number[]) => {\n  const newEffects = [];\n  for (let eid of effects) {\n    let effect = state.effects.entities[eid]!;\n    // create a new effect entity and add it's id to newEffects\n    const id = ++effectId;\n    effectAdapter.addOne(state.effects, { ...effect, id });\n    newEffects.push(id);\n  }\n  return newEffects;\n};\n\nconst getActivityPaths = (state: WritableDraft<State>, apIds: number[]) => {\n  let newAps: ActivityPathObject[] = [];\n  for (let apId of apIds) {\n    const ap = state.activityPaths.entities[apId]!;\n    const aps = getActivityPaths(state, ap.apIds);\n    const damages = getDamages(state, ap.damages);\n    const effects = getEffects(state, ap.effects);\n    newAps.push({ ...ap, apIds: aps, damages, effects });\n  }\n  return newAps;\n};\nconst getDamages = (state: WritableDraft<State>, damages: number[]) => {\n  let newDamages = [];\n  for (let did of damages) {\n    const damage = state.damages.entities[did]!;\n    newDamages.push({ ...damage });\n  }\n  return newDamages;\n};\nconst getEffects = (state: WritableDraft<State>, effects: number[]) => {\n  let newEffects = [];\n  for (let eid of effects) {\n    const effect = state.effects.entities[eid]!;\n    newEffects.push({ ...effect });\n  }\n  return newEffects;\n};\n\nconst insertRoutine = (state: WritableDraft<State>, routine: RoutineObject) => {\n  const id = ++routineId;\n\n  const apIds = insertActivityPaths(state, routine.apIds, undefined, id);\n\n  routinesAdapter.addOne(state.routines, { ...routine, id, apIds });\n  return id;\n};\nconst insertActivityPaths = (\n  state: WritableDraft<State>,\n  aps: ActivityPathObject[],\n  parentId?: number,\n  routineId?: number\n) => {\n  let newApIds = [];\n  for (let ap of aps) {\n    const id = ++activityPathId;\n    const apIds = insertActivityPaths(state, ap.apIds, id);\n    const damages = insertDamages(state, ap.damages);\n    const effects = insertEffects(state, ap.effects);\n\n    if (ap.name === undefined) ap.name = \"\";\n    activityPathAdapter.addOne(state.activityPaths, {\n      ...ap,\n      id,\n      parentId,\n      routineId,\n      damages,\n      effects,\n      apIds,\n    });\n    newApIds.push(id);\n  }\n  return newApIds;\n};\nconst insertDamages = (state: WritableDraft<State>, damages: Damage[]) => {\n  const newDamages = [];\n  for (let damage of damages) {\n    // create a new damage entity and add it's id to newDamages\n    const id = ++damageId;\n    damageAdapter.addOne(state.damages, { ...defaultDamage, ...damage, id });\n    newDamages.push(id);\n  }\n  return newDamages;\n};\nconst insertEffects = (state: WritableDraft<State>, effects: Effect[]) => {\n  const newEffects = [];\n  for (let effect of effects) {\n    // create a new effect entity and add it's id to newEffects\n    const id = ++effectId;\n    effectAdapter.addOne(state.effects, { ...defaultEffect, ...effect, id });\n    newEffects.push(id);\n  }\n  return newEffects;\n};\n","export const convolve = (vec1: number[], vec2: number[]) => {\n  if (vec1.length === 0 || vec2.length === 0) {\n    throw new Error(\"Vectors can not be empty!\");\n  }\n  const volume = vec1;\n  const kernel = vec2;\n  let displacement = 0;\n  const convVec: number[] = [];\n\n  for (let i = 0; i < volume.length; i++) {\n    for (let j = 0; j < kernel.length; j++) {\n      if (displacement + j !== convVec.length) {\n        convVec[displacement + j] =\n          convVec[displacement + j] + volume[i] * kernel[j];\n      } else {\n        convVec.push(volume[i] * kernel[j]);\n      }\n    }\n    displacement++;\n  }\n\n  return convVec;\n};\n\nexport const multiplyDist = (\n  dam: number,\n  dist: number[],\n  multiplier: number\n) => {\n  if (multiplier === 0) return { staticDamage: 0, damageDist: [1] };\n  if (multiplier === 1) return { staticDamage: dam, damageDist: [...dist] };\n\n  const newDist = [0];\n  let index = 0;\n  const newDam = Math.floor(dam * multiplier);\n\n  let i = 0;\n  let oldValue = newDam;\n  for (let chance of dist) {\n    let newValue = Math.floor((dam + i) * multiplier);\n    if (newValue === oldValue) {\n      newDist[index] += chance;\n    } else {\n      if (newValue > oldValue + 1) {\n        for (let diff = 0; diff < newValue - (oldValue + 1); diff++) {\n          index++;\n          newDist[index] = 0;\n        }\n      }\n      index++;\n      newDist[index] = chance;\n    }\n    oldValue = newValue;\n    i++;\n  }\n\n  return { staticDamage: newDam, damageDist: newDist };\n};\n\ntype Dist = {\n  distribution: { staticDamage: number; damageDist: number[] };\n  chance: number;\n};\n/**\n * Combine multiple distributions with their chances into one distribution starting from 0\n * @param  {...[{staticDamage, distribution}, chance]} dists\n * @returns {[number]} new distribution\n */\nexport const consolidateDists = (...dists: Dist[]) => {\n  let maxDamage = 0;\n  for (let dist of dists) {\n    maxDamage = Math.max(\n      maxDamage,\n      dist.distribution.staticDamage + dist.distribution.damageDist.length\n    );\n  }\n  let damageDist = [];\n  for (let i = 0; i < maxDamage; i++) {\n    damageDist.push(0);\n    for (let dist of dists) {\n      if (dist.distribution.staticDamage <= i) {\n        let index = i - dist.distribution.staticDamage;\n        if (index < dist.distribution.damageDist.length)\n          damageDist[i] += dist.distribution.damageDist[index] * dist.chance;\n      }\n    }\n  }\n  return damageDist;\n};\n\n/**\n * apply a minimum to a distribution, like for damage penalties or resistances\n * @param {number} staticDamage\n * @param {[number]} damageDist\n * @param {number} min\n * @returns { distribution: {staticDamage: number, damageDist: [number]}}\n */\nexport const applyMin = (\n  staticDamage: number,\n  damageDist: number[],\n  min: number\n) => {\n  while (staticDamage < min) {\n    if (damageDist.length >= 2) {\n      damageDist[1] += damageDist[0];\n      damageDist.shift();\n    }\n    staticDamage++;\n  }\n  return { staticDamage, damageDist };\n};\n\nexport const applyMax = (\n  staticDamage: number,\n  damageDist: number[],\n  max: number\n) => {\n  let newDamageDist: number[];\n  if (staticDamage >= max) {\n    staticDamage = max;\n    newDamageDist = [1];\n  } else if (staticDamage + damageDist.length - 1 > max) {\n    // cut off the distribution at max and add the remaining chance there\n    newDamageDist = damageDist.slice(0, max - staticDamage + 1);\n    const remainingChance = 1 - newDamageDist.reduce((pv, cv) => pv + cv);\n    newDamageDist[max - staticDamage] += remainingChance;\n  } else {\n    newDamageDist = damageDist;\n  }\n  return { staticDamage, damageDist: newDamageDist };\n};\n","import {\n  damageTrendValues,\n  dieTrendValues,\n  defaultACs,\n  defaultSaves,\n  profTrendValues,\n  statTrendValues,\n  itemTrendValues,\n  MAPvalues,\n  standardDC,\n} from \"../Model/defaults\";\nimport {\n  activityTypes,\n  DamageType,\n  dCond,\n  defenses,\n  Material,\n  materials,\n  rollTypes,\n  TargetState,\n  whenConditions,\n} from \"../Model/types\";\nimport { ActivityPath, Damage } from \"../Routines/RoutineSlice/RoutineTypes\";\nimport { Target } from \"../Display/targetSlice\";\nimport { Weakness } from \"../Display/weaknessSlice\";\nimport { applyMin, convolve, multiplyDist } from \"./Distribution\";\n\nfunction getCritSuccessPercent(bonus: number, DC: number, keen = false) {\n  const dif = bonus - DC;\n  let chance;\n  if (dif < -20) {\n    chance = 0;\n  } else if (dif === -20) {\n    chance = 5;\n  } else if (dif < -9) {\n    chance = keen ? 10 : 5;\n  } else if (dif < 8) {\n    chance = (11 + dif) * 5;\n  } else {\n    chance = 95;\n  }\n\n  return chance;\n}\n\nfunction getSuccessPercent(bonus: number, DC: number, keen = false) {\n  const dif = bonus - DC;\n  let chance;\n  if (dif < -29) {\n    chance = 0;\n  } else if (dif < -20) {\n    chance = 5;\n  } else if (dif === -20) {\n    chance = 0;\n  } else if (dif < -9) {\n    chance = (keen ? 19 : 20 + dif) * 5;\n  } else if (dif < -1) {\n    chance = 50;\n  } else if (dif < 9) {\n    chance = (8 - dif) * 5;\n  } else {\n    chance = 5;\n  }\n\n  return chance;\n}\n\nfunction getFailurePercent(bonus: number, DC: number, keen = false) {\n  const dif = bonus - DC;\n  let chance;\n  if (dif < -29) {\n    chance = 5;\n  } else if (dif < -20) {\n    chance = (29 + dif) * 5;\n  } else if (dif < -10) {\n    chance = 45;\n  } else if (dif < -1) {\n    chance = (-2 - dif) * 5;\n  } else if (dif < 9) {\n    chance = 5;\n  } else {\n    chance = 0;\n  }\n\n  return chance;\n}\n\nfunction getCritFailurePercent(bonus: number, DC: number, keen = false) {\n  const dif = bonus - DC;\n  let chance;\n  if (dif < -29) {\n    chance = 95;\n  } else if (dif < -10) {\n    chance = (-10 - dif) * 5;\n  } else if (dif < -1) {\n    chance = 5;\n  } else {\n    chance = 0;\n  }\n\n  return chance;\n}\n\n// staticDamage?: number;\n// damageDist?: number[];\n\ntype PartialContext = {\n  [key in DamageType]?: {\n    material: Material;\n    staticDamage: number;\n    damageDist: number[];\n  };\n};\nexport interface DamageContext {\n  staticDamage: number;\n  damageDist: number[];\n}\ntype BaseContext = {\n  normal: PartialContext;\n  persistent: PartialContext;\n};\ntype FinalContext = {\n  normal: DamageContext;\n  persistent: PartialContext;\n};\nconst damageQualities = { normal: \"normal\", persistent: \"persistent\" } as const;\ntype DamageQuality = keyof typeof damageQualities;\n\n// combine the probability distributions of the given damages into context\n// for persistent damage just take highest\nconst addDamage = (\n  baseContext: BaseContext,\n  type: DamageType,\n  material: Material,\n  persistent: boolean,\n  staticDamage: number,\n  damageDist: number[],\n  multiplier: number\n) => {\n  let context: PartialContext;\n\n  if (persistent) {\n    context = baseContext.persistent;\n  } else {\n    context = baseContext.normal;\n  }\n  ({ staticDamage, damageDist } = multiplyDist(\n    staticDamage,\n    damageDist,\n    multiplier\n  ));\n  if (!(type in context)) {\n    context[type] = { material, staticDamage, damageDist };\n  } else {\n    if (persistent) {\n      let oldAveDamage = context[type]!.staticDamage;\n      for (let i = 0; i < context[type]!.damageDist.length; i++) {\n        oldAveDamage += i * context[type]!.damageDist[i];\n      }\n      let newAveDamage = staticDamage;\n      for (let i = 0; i < damageDist.length; i++) {\n        newAveDamage += i * damageDist[i];\n      }\n      if (newAveDamage > oldAveDamage) {\n        context[type] = { material, staticDamage, damageDist };\n      }\n    } else {\n      context[type]!.staticDamage += staticDamage;\n      context[type]!.damageDist = convolve(\n        context[type]!.damageDist,\n        damageDist\n      );\n      if (material !== materials.NONE) context[type]!.material = material;\n    }\n  }\n};\n\n/**\n * Calculate the chance of each result and the appropriate damage\n * distributions for a given activity at level vs target with targetState.\n * Adds defenseBonus or resistanceBonus to target if given.\n * Add persistent damage to normal damage if this activity is a leaf.\n * Level is undefined for single level graphs, get appropriate levels from target.\n *\n * @param {ActivityPath} activity\n * @param {Damage[]} damages\n * @param {Target} target\n * @param {TargetState} targetState\n * @param {Weakness[]} weaknesses\n * @param {number} defenseBonus\n * @param {number} resistanceBonus\n * @param {boolean} isLeaf\n * @param {number | undefined} level\n * @returns {[damageTrees, chances]} ;\n */\nfunction calculateExpectedDamage(\n  activity: ActivityPath,\n  damages: Damage[],\n  target: Target,\n  targetState: TargetState,\n  weaknesses: Weakness[],\n  defenseBonus: number,\n  resistanceBonus: number,\n  isLeaf: boolean,\n  level?: number\n) {\n  /**\n   * Get the check bonus and DC\n   * Calculate the chance of each outcome\n   * Go through each damage and evaluate it, put damage types together\n   * Go through each damage type and apply weakness/resistance\n   * Return damage trees and chances\n   */\n  let bonus = 0;\n  let DC = 10;\n  let targetValue: number;\n  let targetLevel: number;\n  if (level === undefined) {\n    level = target.routineLevel;\n    targetLevel = target.targetLevel;\n\n    switch (activity.targetType) {\n      case defenses.AC:\n        targetValue = target.overrideAC;\n        break;\n      case defenses.FORT:\n        targetValue = target.overrideFort;\n        break;\n      case defenses.REF:\n        targetValue = target.overrideRef;\n        break;\n      case defenses.WILL:\n        targetValue = target.overrideWill;\n        break;\n      case defenses.PER:\n        targetValue = target.overridePer;\n        break;\n\n      default:\n        targetValue = target.overrideAC;\n        break;\n    }\n  } else {\n    targetLevel = level + target.levelDiff;\n    let targetDefault;\n    switch (activity.targetType) {\n      case defenses.AC:\n        targetDefault = defaultACs[target.ACTrend];\n        break;\n      case defenses.FORT:\n        targetDefault = defaultSaves[target.FortTrend];\n        break;\n      case defenses.REF:\n        targetDefault = defaultSaves[target.RefTrend];\n        break;\n      case defenses.WILL:\n        targetDefault = defaultSaves[target.WillTrend];\n        break;\n      case defenses.PER:\n        targetDefault = defaultSaves[target.PerTrend];\n        break;\n\n      default:\n        targetDefault = defaultACs[target.ACTrend];\n        break;\n    }\n\n    targetValue = targetDefault[targetLevel];\n  }\n\n  let targetPenalty = targetState.Frightened;\n  if (\n    activity.targetType === defenses.AC ||\n    activity.targetType === defenses.REF\n  )\n    targetPenalty = Math.max(targetPenalty, targetState.Clumsy);\n  switch (activity.type) {\n    case activityTypes.STRIKE:\n    case activityTypes.SPELLATTACK:\n    case activityTypes.SKILL:\n      bonus = profTrendValues[activity.profTrend][level];\n      bonus += statTrendValues[activity.statTrend][level];\n      bonus += itemTrendValues[activity.itemTrend][level];\n      bonus += activity.bonusAdjustments[level];\n      bonus += MAPvalues[activity.MAP];\n\n      bonus +=\n        targetState[\"Cicumstance Bonus to next attack\"] +\n        targetState[\"Status Bonus to all attacks\"];\n      targetState[\"Cicumstance Bonus to next attack\"] = 0;\n\n      DC = targetValue + defenseBonus - targetPenalty;\n      if (activity.targetType === defenses.AC) {\n        if (targetState.Flatfooted) DC -= 2;\n      } else {\n        if (activity.targetType === defenses.selfDC) {\n          DC = standardDC[level];\n        } else if (activity.targetType === defenses.targetDC) {\n          DC = standardDC[targetLevel];\n        } else {\n          DC += 10;\n        }\n      }\n      break;\n\n    case activityTypes.SAVE:\n      bonus = targetValue + defenseBonus - targetPenalty;\n      DC = 10 + profTrendValues[activity.profTrend][level];\n      DC += statTrendValues[activity.statTrend][level];\n      DC += itemTrendValues[activity.itemTrend][level];\n      DC += activity.bonusAdjustments[level];\n      if (activity.targetType === defenses.AC) {\n        bonus -= 10;\n      } else if (activity.targetType === defenses.selfDC) {\n        bonus = standardDC[level] - 10;\n      } else if (activity.targetType === defenses.targetDC) {\n        bonus = standardDC[targetLevel] - 10;\n      }\n      break;\n\n    default:\n      console.log(`Activity type ${activity.type} not implemented`);\n  }\n\n  let critPercent = getCritSuccessPercent(bonus, DC);\n  let succPercent = getSuccessPercent(bonus, DC);\n  let failPercent = getFailurePercent(bonus, DC);\n  let crfaPercent = getCritFailurePercent(bonus, DC);\n  if (activity.rollType === rollTypes.ADVANTAGE) {\n    let notcrit = 100 - critPercent;\n    critPercent = 100 - (notcrit * notcrit) / 100;\n    let nothit = notcrit - succPercent;\n    succPercent = 100 - (nothit * nothit) / 100 - critPercent;\n    let notfail = nothit - failPercent;\n    failPercent = 100 - (notfail * notfail) / 100 - succPercent - critPercent;\n    crfaPercent = (crfaPercent * crfaPercent) / 100;\n  } else if (activity.rollType === rollTypes.DISADVANTAGE) {\n    let notcrfa = 100 - crfaPercent;\n    crfaPercent = 100 - (notcrfa * notcrfa) / 100;\n    let notfail = notcrfa - failPercent;\n    failPercent = 100 - (notfail * notfail) / 100 - crfaPercent;\n    let notsucc = notfail - succPercent;\n    succPercent = 100 - (notsucc * notsucc) / 100 - failPercent - crfaPercent;\n    critPercent = (critPercent * critPercent) / 100;\n  }\n  const chances = [\n    critPercent / 100,\n    succPercent / 100,\n    failPercent / 100,\n    crfaPercent / 100,\n  ];\n  const critDamagesByType: BaseContext = {\n    normal: {},\n    persistent: { ...targetState.persistentDamages },\n  };\n  const succDamagesByType: BaseContext = {\n    normal: {},\n    persistent: { ...targetState.persistentDamages },\n  };\n  const failDamagesByType: BaseContext = {\n    normal: {},\n    persistent: { ...targetState.persistentDamages },\n  };\n  const crfaDamagesByType: BaseContext = {\n    normal: {},\n    persistent: { ...targetState.persistentDamages },\n  };\n  const critDamages: FinalContext = {\n    normal: { staticDamage: 0, damageDist: [1] },\n    persistent: critDamagesByType.persistent,\n    // persistent: { staticDamage: 0, damageDist: [1] },\n  };\n  const succDamages: FinalContext = {\n    normal: { staticDamage: 0, damageDist: [1] },\n    persistent: succDamagesByType.persistent,\n  };\n  const failDamages: FinalContext = {\n    normal: { staticDamage: 0, damageDist: [1] },\n    persistent: failDamagesByType.persistent,\n  };\n  const crfaDamages: FinalContext = {\n    normal: { staticDamage: 0, damageDist: [1] },\n    persistent: crfaDamagesByType.persistent,\n  };\n\n  const damageTreesByType: BaseContext[] = [\n    critDamagesByType,\n    succDamagesByType,\n    failDamagesByType,\n    crfaDamagesByType,\n  ];\n  const damageTrees: FinalContext[] = [\n    critDamages,\n    succDamages,\n    failDamages,\n    crfaDamages,\n  ];\n\n  // Start going through each damage and evaluate it, put damage types together\n  damages.forEach((damage) => {\n    let {\n      damageCondition,\n      diceSize,\n      fatal,\n      fatalDie,\n\n      damageTrend,\n      damageType,\n      material,\n      persistent,\n      multiplier,\n      damageWhen,\n    } = damage;\n    let shouldAddThisDamage = false;\n    for (let state of damageWhen) {\n      if (state === whenConditions.Always) {\n        shouldAddThisDamage = true;\n        break;\n      }\n      let val = targetState[state];\n      if (val) {\n        shouldAddThisDamage = true;\n        break;\n      }\n    }\n    // if (typeof val === \"boolean\") {\n    //   if (val) {\n    //     shouldAddThisDamage = true;\n    //     break;\n    //   }\n    // } else {\n    //   if (val > 0) {\n    //     shouldAddThisDamage = true;\n    //     break;\n    //   }\n    // }\n\n    if (!shouldAddThisDamage) return;\n\n    let diceNum = dieTrendValues[damage.dieTrend][level as number];\n    diceNum += damage.dieAdjustments[level as number];\n    if (diceNum < 0) diceNum = 0;\n    let staticDamage = 0;\n    for (let i = 0; i < damageTrend.length; i++) {\n      staticDamage += damageTrendValues[damageTrend[i]][level as number];\n    }\n    staticDamage += damage.damageAdjustments[level as number];\n    let damageDist = [1];\n    let fatalDist = [1];\n    let diceArray = [];\n    for (let i = 0; i < diceSize; i++) {\n      diceArray.push(1 / diceSize);\n    }\n    for (let i = 0; i < diceNum; i++) {\n      damageDist = convolve(damageDist, diceArray);\n    }\n    if (fatal) {\n      let diceArray = [];\n      for (let i = 0; i < fatalDie; i++) {\n        diceArray.push(1 / fatalDie);\n      }\n      for (let i = 0; i < diceNum; i++) {\n        fatalDist = convolve(fatalDist, diceArray);\n      }\n    }\n    staticDamage += diceNum;\n\n    // Add damage to damage trees appropriately\n    switch (damageCondition) {\n      case dCond.STRIKE:\n        addDamage(\n          succDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          critDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          fatal ? fatalDist : damageDist,\n          multiplier * 2\n        );\n        break;\n\n      case dCond.BASIC:\n        addDamage(\n          succDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 0.5\n        );\n        addDamage(\n          failDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          crfaDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 2\n        );\n        break;\n\n      case dCond.CRIF:\n        addDamage(\n          crfaDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      case dCond.FAIL:\n        addDamage(\n          failDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      case dCond.SUCC:\n        addDamage(\n          succDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      case dCond.CRIT:\n        addDamage(\n          critDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      case dCond.AT_LEAST_SUCC:\n        addDamage(\n          succDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          critDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      case dCond.AT_LEAST_FAIL:\n        addDamage(\n          failDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          succDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          critDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      case dCond.FAIL_WORSE:\n        addDamage(\n          crfaDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          failDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      case dCond.SUCC_WORSE:\n        addDamage(\n          crfaDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          failDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          succDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n\n        break;\n\n      case dCond.ALWAYS:\n        addDamage(\n          crfaDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          failDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          succDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        addDamage(\n          critDamagesByType,\n          damageType,\n          material,\n          persistent,\n          staticDamage,\n          damageDist,\n          multiplier * 1\n        );\n        break;\n\n      default:\n        console.log(`Damage condition ${damageCondition} not implemented yet.`);\n    }\n  });\n  // end going through each damage and evaluate it, put damage types together\n\n  // Start going through each damage type and apply weakness/resistance\n  for (let damageTreeIndex = 0; damageTreeIndex < 4; damageTreeIndex++) {\n    let damageTree = damageTreesByType[damageTreeIndex];\n    let finalTree = damageTrees[damageTreeIndex];\n    let damageQuality: DamageQuality = \"normal\";\n    // for (damageQuality in damageQualities) {\n    // only consolidate noramal damage\n    let totalStaticDamage = 0;\n    let totalDamageDist = [1];\n    let type: DamageType;\n    for (type in damageTree[damageQuality]) {\n      let { material, staticDamage, damageDist } =\n        damageTree[damageQuality][type]!;\n\n      // ignore if there's 0 damage\n      if (damageDist.length === 1 && staticDamage <= 0) continue;\n\n      // make min damage 1 before resistances\n      ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 1));\n\n      // find max weakness and resistance, weaknesses are negative numbers\n      let maxW = 0;\n      let maxR = 0;\n      for (let weakness of weaknesses) {\n        if (weakness.type === type || weakness.type === material) {\n          if (weakness.value + resistanceBonus < 0) {\n            maxW = Math.min(maxW, weakness.value + resistanceBonus);\n          } else if (weakness.value + resistanceBonus > 0) {\n            maxR = Math.max(maxR, weakness.value + resistanceBonus);\n          }\n        }\n      }\n      staticDamage = staticDamage - (maxR + maxW);\n\n      // make min damage 0 after resistances\n      ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 0));\n\n      totalStaticDamage += staticDamage;\n      totalDamageDist = convolve(totalDamageDist, damageDist);\n    }\n    finalTree[damageQuality].staticDamage = totalStaticDamage;\n    finalTree[damageQuality].damageDist = totalDamageDist;\n\n    if (isLeaf) {\n      // need to apply weakness/resistance to persistent damage\n      // then add persistent damage to normal damage\n      let damageQuality: DamageQuality = \"persistent\";\n\n      let totalStaticDamage = 0;\n      let totalDamageDist = [1];\n      let type: DamageType;\n      for (type in damageTree[damageQuality]) {\n        let { material, staticDamage, damageDist } =\n          damageTree[damageQuality][type]!;\n\n        // ignore if there's 0 damage\n        if (damageDist.length === 1 && staticDamage <= 0) continue;\n\n        // make min damage 1 before resistances\n        ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 1));\n\n        // find max weakness and resistance, weaknesses are negative numbers\n        let maxW = 0;\n        let maxR = 0;\n        for (let weakness of weaknesses) {\n          if (weakness.type === type || weakness.type === material) {\n            if (weakness.value + resistanceBonus < 0) {\n              maxW = Math.min(maxW, weakness.value + resistanceBonus);\n            } else if (weakness.value + resistanceBonus > 0) {\n              maxR = Math.max(maxR, weakness.value + resistanceBonus);\n            }\n          }\n        }\n        staticDamage = staticDamage - (maxR + maxW);\n\n        // make min damage 0 after resistances\n        ({ staticDamage, damageDist } = applyMin(staticDamage, damageDist, 0));\n\n        totalStaticDamage += staticDamage;\n        totalDamageDist = convolve(totalDamageDist, damageDist);\n      }\n      let { staticDamage, damageDist } = multiplyDist(\n        totalStaticDamage,\n        totalDamageDist,\n        target.persistentMultiplier\n      );\n      finalTree[\"normal\"].staticDamage += staticDamage;\n      finalTree[\"normal\"].damageDist = convolve(\n        finalTree[\"normal\"].damageDist,\n        damageDist\n      );\n    }\n  }\n  // End going through each damage type and apply weakness/resistance\n\n  return { damageTrees, chances };\n}\nexport { calculateExpectedDamage };\n","import { convolve, consolidateDists, applyMax } from \"./Distribution\";\nimport { calculateExpectedDamage } from \"./Calculation\";\nimport {\n  Condition,\n  conditions,\n  effectStateTypes,\n  effectTypes,\n  effectValueTypes,\n  TargetState,\n  whenConditions,\n} from \"../Model/types\";\nimport {\n  ActivityPath,\n  Damage,\n  Effect,\n  Routine,\n} from \"../Routines/RoutineSlice/RoutineTypes\";\nimport { Dictionary } from \"@reduxjs/toolkit\";\nimport { Target } from \"../Display/targetSlice\";\nimport { Weakness } from \"../Display/weaknessSlice\";\nimport { defaultHP } from \"../Model/defaults\";\n\n/**\n * Checks given degreeOfSuccess is in the condition\n * like Success is in Success or better\n * @param {*} condition\n * @param {*} degreeOfSuccess\n * @returns\n */\nfunction validateCondition(condition: Condition, degreeOfSuccess: number) {\n  let indicies: number[] = [];\n  // console.log(`cond is: ${ap.condition}`);\n  switch (condition) {\n    case conditions.ALWAYS:\n      indicies = [0, 1, 2, 3];\n      break;\n\n    case conditions.AT_LEAST_FAIL:\n      indicies = [0, 1, 2];\n      break;\n\n    case conditions.AT_LEAST_SUCC:\n      indicies = [0, 1];\n      break;\n\n    case conditions.CRIF:\n      indicies = [3];\n      break;\n\n    case conditions.CRIT:\n      indicies = [0];\n      break;\n\n    case conditions.FAIL:\n      indicies = [2];\n      break;\n\n    case conditions.FAIL_WORSE:\n      indicies = [2, 3];\n      break;\n\n    case conditions.SUCC:\n      indicies = [1];\n      break;\n\n    case conditions.SUCC_WORSE:\n      indicies = [1, 2, 3];\n      break;\n\n    default:\n  }\n  return indicies.includes(degreeOfSuccess);\n}\n\nclass ActivityPathEvaluator {\n  activityPaths: Dictionary<ActivityPath>;\n  target: Target;\n  damages: Dictionary<Damage>;\n  effects: Dictionary<Effect>;\n  weaknesses: Dictionary<Weakness>;\n  selectedRoutine?: number;\n  constructor(\n    activityPaths: Dictionary<ActivityPath>,\n    targets: Dictionary<Target>,\n    damages: Dictionary<Damage>,\n    effects: Dictionary<Effect>,\n    weaknesses: Dictionary<Weakness>,\n    selectedRoutine?: number\n  ) {\n    this.activityPaths = activityPaths;\n    this.target = targets[0]!;\n    this.damages = damages;\n    this.effects = effects;\n    this.weaknesses = weaknesses;\n    this.selectedRoutine = selectedRoutine;\n  }\n\n  canEvaluate(level: number, routine: Routine) {\n    const levelDiff = this.target.levelDiff;\n    // console.log(`level ${level}, levelDiff ${levelDiff}`);\n    if (level < routine.startLevel || level > routine.endLevel) return false;\n    if (level + levelDiff < -1 || level + levelDiff > 24) return false;\n    return true;\n  }\n  canEvaluateSingleLevel(routine: Routine) {\n    const level = this.target.routineLevel;\n    // console.log(`level ${level}, levelDiff ${levelDiff}`);\n    if (level < routine.startLevel || level > routine.endLevel) return false;\n    return true;\n  }\n\n  evalRoutine(\n    routine: Routine,\n    ACBonus: number,\n    resBonus: number,\n    level?: number\n  ) {\n    let maxDamage: number;\n    if (level === undefined) {\n      maxDamage = this.target.currentHP;\n    } else {\n      maxDamage = Math.round(\n        defaultHP[this.target.HPTrend][level] * (this.target.percentHP / 100)\n      );\n    }\n    const initialTargetState = {\n      persistentDamages: {},\n    } as TargetState;\n    for (let effectState of Object.values(effectStateTypes)) {\n      initialTargetState[effectState] = false;\n    }\n    for (let effectValue of Object.values(effectValueTypes)) {\n      initialTargetState[effectValue] = 0;\n    }\n    initialTargetState.Flatfooted = this.target.flatfooted;\n\n    const dataArray = [];\n    const cumulative = [];\n\n    let expD = 0;\n    // let expP = 0;\n    let routineDDist = [1];\n    // let routinePDDist = [1];\n    for (let i = 0; i < routine.apIds.length; i++) {\n      let activityPath = this.activityPaths[routine.apIds[i]]!;\n      let damageDist = this.evalPath(\n        activityPath,\n        initialTargetState,\n        ACBonus,\n        resBonus,\n        level\n      );\n      routineDDist = convolve(routineDDist, damageDist);\n    }\n    // make sure damage not more than HP\n    // static damage is 0, so can ignore it\n    const { damageDist } = applyMax(0, routineDDist, maxDamage);\n    routineDDist = damageDist;\n\n    let currentSum = 1;\n    for (let i = 0; i < routineDDist.length; i++) {\n      dataArray.push(i);\n      cumulative.push(currentSum);\n      currentSum -= routineDDist[i];\n\n      expD += routineDDist[i] * i;\n    }\n\n    return {\n      expD,\n      dataArray,\n      routineDDist,\n      cumulative,\n    };\n  }\n\n  evalPath(\n    activityPath: ActivityPath,\n    targetState: TargetState,\n    defenseBonus: number,\n    resistanceBonus: number,\n    level?: number\n  ) {\n    // evaluate this and all following APs\n    let currentTarget = this.target;\n    let currentDamages = activityPath.damages.map(\n      (damageId) => this.damages[damageId]!\n    );\n    //currentDamages.push(activityPath);\n    let currentEffects = activityPath.effects.map(\n      (effectId) => this.effects[effectId]!\n    );\n    let currentWeaknesses = currentTarget.weaknesses.map(\n      (weaknessId) => this.weaknesses[weaknessId]!\n    );\n\n    // calculate the expected damage for this activity\n    let { damageTrees, chances } = calculateExpectedDamage(\n      activityPath,\n      currentDamages,\n      currentTarget,\n      targetState,\n      currentWeaknesses,\n      defenseBonus,\n      resistanceBonus,\n      activityPath.apIds.length === 0,\n      level\n    );\n    // console.log(\"damage trees: \", damageTrees);\n\n    const targetStates = [targetState, targetState, targetState, targetState];\n    // go through each degree of success\n    for (let i = 0; i < 4; i++) {\n      // go though each valid effect and update targetStates\n      currentEffects.forEach((effect) => {\n        let {\n          effectCondition,\n          effectType,\n          effectValue,\n          startLevel,\n          endLevel,\n          damageWhen,\n        } = effect;\n        if (level !== undefined) {\n          if (level < startLevel || level > endLevel) return;\n        } else {\n          if (\n            this.target.routineLevel < startLevel ||\n            this.target.routineLevel > endLevel\n          )\n            return;\n        }\n        let shouldAddThisEffect = false;\n        for (let state of damageWhen) {\n          if (state === whenConditions.Always) {\n            shouldAddThisEffect = true;\n            break;\n          }\n          let val = targetStates[i][state];\n          if (val && val > 0) {\n            shouldAddThisEffect = true;\n            break;\n          }\n        }\n        if (!shouldAddThisEffect) return;\n\n        if (validateCondition(effectCondition, i)) {\n          switch (effectType) {\n            case effectTypes.RESTRAINED:\n              if (targetStates[i].Restrained !== true)\n                targetStates[i] = {\n                  ...targetStates[i],\n                  Flatfooted: true,\n                  Grappled: true,\n                  Restrained: true,\n                };\n              break;\n\n            case effectTypes.GRAPPLED:\n              if (targetStates[i].Grappled !== true)\n                targetStates[i] = {\n                  ...targetStates[i],\n                  Flatfooted: true,\n                  Grappled: true,\n                };\n              break;\n\n            case effectTypes.PRONE:\n              if (targetStates[i].Prone !== true)\n                targetStates[i] = {\n                  ...targetStates[i],\n                  Flatfooted: true,\n                  Prone: true,\n                };\n              break;\n\n            case effectTypes.FLATFOOT:\n              if (targetStates[i].Flatfooted !== true)\n                targetStates[i] = { ...targetStates[i], Flatfooted: true };\n              break;\n\n            case effectTypes.FRIGHTENED:\n              if (effectValue && targetStates[i].Frightened < effectValue)\n                targetStates[i] = {\n                  ...targetStates[i],\n                  Frightened: effectValue,\n                };\n              break;\n\n            case effectTypes.CLUMSY:\n              if (effectValue && targetStates[i].Clumsy < effectValue)\n                targetStates[i] = {\n                  ...targetStates[i],\n                  Clumsy: effectValue,\n                };\n              break;\n\n            case effectTypes.BONUSC1:\n              if (\n                effectValue &&\n                targetStates[i][\"Cicumstance Bonus to next attack\"] <\n                  effectValue\n              )\n                targetStates[i] = {\n                  ...targetStates[i],\n                  \"Cicumstance Bonus to next attack\": effectValue,\n                };\n\n              break;\n\n            case effectTypes.BONUSSA:\n              if (\n                effectValue &&\n                targetStates[i][\"Status Bonus to all attacks\"] < effectValue\n              ) {\n                targetStates[i] = {\n                  ...targetStates[i],\n                  \"Status Bonus to all attacks\": effectValue,\n                };\n              }\n              break;\n\n            default:\n              console.log(`Effect type ${effectType} not implemented`);\n          }\n        }\n      });\n      // add persistent damage to target state if necessary\n      if (\n        damageTrees[i].persistent &&\n        JSON.stringify(damageTrees[i].persistent) !==\n          JSON.stringify(targetStates[i].persistentDamages)\n      ) {\n        targetStates[i] = {\n          ...targetStates[i],\n          persistentDamages: damageTrees[i].persistent,\n        };\n      }\n    }\n\n    // go through each activity path, depending on its condition add its damage distributions to this activities appropriately\n    activityPath.apIds.forEach((apId) => {\n      let ap = this.activityPaths[apId]!;\n\n      const evaluations = new Map();\n      // go through each degree of success\n      for (let i = 0; i < 4; i++) {\n        // evaluate if necessary and add distribution to damageTrees, or take max for persistent damage\n        if (validateCondition(ap.condition, i)) {\n          if (evaluations.has(targetStates[i])) {\n            // already evaluated\n            // console.log(\"skip target state: \", targetStates[i]);\n          } else {\n            let pathDist = this.evalPath(\n              ap,\n              targetStates[i],\n              defenseBonus,\n              resistanceBonus,\n              level\n            );\n            // console.log(\"add target state: \", targetStates[i]);\n            evaluations.set(targetStates[i], pathDist);\n          }\n          damageTrees[i].normal.damageDist = convolve(\n            damageTrees[i].normal.damageDist,\n            evaluations.get(targetStates[i])\n          );\n        }\n      }\n    });\n\n    let damageDist = consolidateDists(\n      { distribution: damageTrees[0].normal, chance: chances[0] },\n      { distribution: damageTrees[1].normal, chance: chances[1] },\n      { distribution: damageTrees[2].normal, chance: chances[2] },\n      { distribution: damageTrees[3].normal, chance: chances[3] }\n    );\n\n    return damageDist;\n  }\n}\n\nexport { ActivityPathEvaluator };\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../App/store\";\n\nexport const sharingSlice = createSlice({\n  name: \"sharing\",\n  initialState: {\n    graphUrl: \"\",\n    singleLevelGraphUrl: \"\",\n    imgLink: \"\",\n  },\n  reducers: {\n    graphSaved: (state, action) => {\n      state.graphUrl = action.payload;\n    },\n    singleLevelGraphSaved: (state, action) => {\n      state.singleLevelGraphUrl = action.payload;\n    },\n    saveImgLink: (state, action) => {\n      state.imgLink = action.payload;\n    },\n  },\n});\n\nexport const { graphSaved, singleLevelGraphSaved, saveImgLink } =\n  sharingSlice.actions;\n\nexport default sharingSlice.reducer;\n\nexport const selectGraphUrl = (state: RootState, byLevel: boolean) => {\n  return byLevel ? state.sharing.graphUrl : state.sharing.singleLevelGraphUrl;\n};\n","import React from \"react\";\n\nimport {\n  selectactivityPathEntities,\n  selectSelectedRoutine,\n} from \"../Routines/RoutineSlice/routineSlice\";\nimport { Routine } from \"../Routines/RoutineSlice/RoutineTypes\";\nimport { selectdamageEntities } from \"../Routines/RoutineSlice/routineSlice\";\nimport { selectRoutineEntities } from \"../Routines/RoutineSlice/routineSlice\";\nimport { selecttargetEntities } from \"./targetSlice\";\nimport { selectweaknessEntities } from \"./weaknessSlice\";\nimport { graphTypes } from \"../Model/types\";\nimport { selecteffectEntities } from \"../Routines/RoutineSlice/routineSlice\";\n\nimport { ActivityPathEvaluator } from \"../Calculation/EvaluateActivityPath\";\n\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport { Dictionary } from \"@reduxjs/toolkit\";\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\nimport { graphSaved, singleLevelGraphSaved } from \"./sharingSlice\";\nconst Plot = createPlotlyComponent(Plotly);\n\nconst useGenerateGraphs = (graphType: string) => {\n  const routines = useAppSelector(selectRoutineEntities);\n  const activityPaths = useAppSelector(selectactivityPathEntities);\n  const targets = useAppSelector(selecttargetEntities);\n  const damages = useAppSelector(selectdamageEntities);\n  const effects = useAppSelector(selecteffectEntities);\n  const weaknesses = useAppSelector(selectweaknessEntities);\n  const selectedRoutine = useAppSelector(selectSelectedRoutine);\n\n  const dispatch = useAppDispatch();\n\n  const saveGraph = (_figure: any, graphDiv: Plotly.Root) => {\n    Plotly.toImage(graphDiv, {\n      format: \"png\",\n      height: 1000,\n      width: 1000,\n    }).then((url) => {\n      dispatch(graphSaved(url));\n    });\n  };\n  const saveSingleLevelGraph = (_figure: any, graphDiv: Plotly.Root) => {\n    Plotly.toImage(graphDiv, {\n      format: \"png\",\n      height: 1000,\n      width: 1000,\n    }).then((url) => {\n      dispatch(singleLevelGraphSaved(url));\n    });\n  };\n\n  const evaluator = new ActivityPathEvaluator(\n    activityPaths,\n    targets,\n    damages,\n    effects,\n    weaknesses,\n    selectedRoutine\n  );\n\n  const currentTarget = targets[0]!;\n  let title = \"@\" + currentTarget.routineLevel;\n  let byLevelTile = currentTarget.name;\n\n  title += \" Vs\";\n  if (currentTarget.flatfooted) title += \" flatfooted\";\n  title += \" AC: \" + currentTarget.overrideAC; //+ defaultACs[currentTarget.ACTrend][displayLevel];\n  title += \" F: \" + currentTarget.overrideFort; //+ defaultSaves[currentTarget.FortTrend][displayLevel];\n  title += \" R: \" + currentTarget.overrideRef; //+ defaultSaves[currentTarget.RefTrend][displayLevel];\n  title += \" W: \" + currentTarget.overrideWill; //+ defaultSaves[currentTarget.WillTrend][displayLevel];\n  title += \" P: \" + currentTarget.overridePer; //+ defaultSaves[currentTarget.PerTrend][displayLevel];\n\n  let datasets: Plotly.Data[] = [];\n  let expectedDamages;\n\n  switch (graphType) {\n    case graphTypes.DISTRIBUTION:\n      ({ expectedDamages, datasets } = evaluateDistribution(\n        routines,\n        evaluator\n      ));\n      break;\n    case graphTypes.PMDEFENSE:\n      ({ expectedDamages, datasets } = evaluatePM(routines, evaluator, true));\n      break;\n    case graphTypes.PMRES:\n    default:\n      ({ expectedDamages, datasets } = evaluatePM(routines, evaluator, false));\n      break;\n  }\n  let { datasets: byLeveldatasets } = evaluateByLevel(routines, evaluator);\n\n  let xtitle;\n  let ytitle;\n  if (graphType === graphTypes.DISTRIBUTION) {\n    xtitle = \"damage\";\n    ytitle = \"chance\";\n  } else if (graphType === graphTypes.PMDEFENSE) {\n    xtitle = \"+/- AC/Save Bonus\";\n    ytitle = \"Expected Damage\";\n  } else if (graphType === graphTypes.PMRES) {\n    xtitle = \"+/- Resistance/Weakness\";\n    ytitle = \"Expected Damage\";\n  }\n\n  let damageChart = (\n    <Plot\n      className=\"plot\"\n      data={datasets}\n      layout={{\n        title: title,\n        autosize: true,\n        xaxis: { title: xtitle },\n        yaxis: { title: ytitle },\n        legend: {\n          x: 0,\n          y: -0.2,\n          xanchor: \"left\",\n          yanchor: \"top\",\n        },\n        margin: {\n          l: 40,\n          r: 40,\n        },\n      }}\n      useResizeHandler={true}\n      style={{ width: \"100%\", height: \"100%\" }}\n      onInitialized={saveSingleLevelGraph}\n      onUpdate={saveSingleLevelGraph}\n    />\n  );\n\n  let byLevelDamageChart = (\n    <Plot\n      className=\"plot\"\n      data={byLeveldatasets}\n      layout={{\n        title: byLevelTile,\n        autosize: true,\n        xaxis: { title: \"Level\" },\n        yaxis: { title: \"Expected Damage\" },\n        legend: {\n          x: 0,\n          y: -0.2,\n          xanchor: \"left\",\n          yanchor: \"top\",\n        },\n        margin: {\n          l: 40,\n          r: 40,\n        },\n      }}\n      useResizeHandler={true}\n      style={{ width: \"100%\", height: \"100%\" }}\n      onInitialized={saveGraph}\n      onUpdate={saveGraph}\n    />\n  );\n  return {\n    expectedDamages,\n    damageChart,\n    byLevelDamageChart,\n  };\n};\n\nconst evaluateByLevel = (\n  routines: Dictionary<Routine>,\n  evaluator: ActivityPathEvaluator\n) => {\n  let datasets = [];\n\n  // Evaluate the selected routine first so we can display other routines as a % of that\n  const selectedRoutineDamage: { [key: number]: number } = {};\n  if (\n    evaluator.target.percentSelectedRoutine &&\n    evaluator.selectedRoutine !== undefined\n  ) {\n    let routine = routines[evaluator.selectedRoutine]!;\n    for (let level = 1; level <= 20; level++) {\n      if (!evaluator.canEvaluate(level, routine)) continue;\n      let { expD } = evaluator.evalRoutine(routine, 0, 0, level);\n      selectedRoutineDamage[level] = expD;\n    }\n  }\n\n  for (let id in routines) {\n    let routine = routines[id]!;\n    if (!routine.display) continue;\n\n    const levelArray = [];\n    const expDbyLevel = [];\n    for (let level = 1; level <= 20; level++) {\n      if (!evaluator.canEvaluate(level, routine)) continue;\n\n      let { expD } = evaluator.evalRoutine(routine, 0, 0, level);\n      if (evaluator.target.percentSelectedRoutine) {\n        if (level in selectedRoutineDamage) {\n          levelArray.push(level);\n          expDbyLevel.push(expD / selectedRoutineDamage[level]);\n        }\n      } else {\n        levelArray.push(level);\n        expDbyLevel.push(expD);\n      }\n    }\n    datasets.push({\n      type: \"scatter\",\n      name: routine.name,\n      x: levelArray,\n      y: expDbyLevel,\n      yaxis: \"y\",\n    } as const);\n  }\n\n  return { datasets };\n};\n\nconst evaluatePM = (\n  routines: Dictionary<Routine>,\n  evaluator: ActivityPathEvaluator,\n  defense = true\n) => {\n  let datasets = [];\n  let expectedDamages = [];\n\n  for (let id in routines) {\n    let routine = routines[id]!;\n    if (!routine.display) continue;\n    if (!evaluator.canEvaluateSingleLevel(routine)) continue;\n\n    const bonusArray = [];\n    const expDbyBonus = [];\n\n    for (let bonus = -5; bonus <= 5; bonus++) {\n      bonusArray.push(bonus);\n      let { expD } = evaluator.evalRoutine(\n        routine,\n        defense ? bonus : 0,\n        defense ? 0 : bonus\n      );\n\n      if (bonus === 0) {\n        expectedDamages.push(\n          <div key={routine.id}>\n            {routine.name}\n            {\": \"}\n            {expD.toFixed(2)}\n          </div>\n        );\n      }\n\n      expDbyBonus.push(expD);\n    }\n\n    datasets.push({\n      type: \"scatter\",\n      name: routine.name,\n      x: bonusArray,\n      y: expDbyBonus,\n      yaxis: \"y\",\n    } as const);\n  }\n  return { expectedDamages, datasets };\n};\n\nconst evaluateDistribution = (\n  routines: Dictionary<Routine>,\n  evaluator: ActivityPathEvaluator\n) => {\n  let datasets = [];\n  let expectedDamages = [];\n\n  for (let id in routines) {\n    let routine = routines[id]!;\n    if (!routine.display) continue;\n    if (!evaluator.canEvaluateSingleLevel(routine)) continue;\n    let { expD, dataArray, routineDDist, cumulative } = evaluator.evalRoutine(\n      routine,\n      0,\n      0\n    );\n    expectedDamages.push(\n      <div key={routine.id}>\n        {routine.name}\n        {\": \"}\n        {expD.toFixed(2)}\n      </div>\n    );\n    datasets.push({\n      type: \"scatter\",\n      name: routine.name,\n      x: dataArray,\n      y: cumulative,\n      yaxis: \"y\",\n    } as const);\n    datasets.push({\n      type: \"bar\",\n      name: expD.toFixed(2),\n      x: dataArray,\n      y: routineDDist,\n    } as const);\n  }\n  return { expectedDamages, datasets };\n};\n\nexport default useGenerateGraphs;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\nimport { selecttargetById, targetUpdated } from \"./targetSlice\";\nimport { RootState } from \"../App/store\";\nimport { weaknessOptions } from \"../Model/options\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Grid,\n  TextField,\n  Slider,\n  Typography,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport {\n  selectweaknessById,\n  Weakness,\n  weaknessCreated,\n  weaknessRemoved,\n  weaknessUpdated,\n} from \"./weaknessSlice\";\nimport { damageTypes } from \"../Model/types\";\n\nconst SingleLevelInput = () => {\n  const id = 0;\n  const {\n    routineLevel,\n    targetLevel,\n    overrideAC,\n    overrideFort,\n    overrideRef,\n    overrideWill,\n    overridePer,\n    overrideHP,\n    currentHP,\n\n    weaknesses,\n  } = useAppSelector((state: RootState) => selecttargetById(state, id)!);\n\n  const [AC, setAC] = useState(overrideAC.toString());\n  const [Fort, setFort] = useState(overrideFort.toString());\n  const [Ref, setRef] = useState(overrideRef.toString());\n  const [Will, setWill] = useState(overrideWill.toString());\n  const [Per, setPer] = useState(overridePer.toString());\n  const [HP, setHP] = useState(overrideHP.toString());\n\n  useEffect(() => {\n    setAC(overrideAC.toString());\n    setFort(overrideFort.toString());\n    setRef(overrideRef.toString());\n    setWill(overrideWill.toString());\n    setPer(overridePer.toString());\n    setHP(overrideHP.toString());\n  }, [\n    overrideAC,\n    overrideFort,\n    overrideRef,\n    overrideWill,\n    overridePer,\n    overrideHP,\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        spacing={{ xs: 1, sm: 2 }}\n        sx={{ my: 1, p: 1 }}\n        alignItems=\"center\"\n      >\n        <Grid item xs={6} container justifyContent=\"center\">\n          <Typography id=\"routine-level\">Level: {routineLevel}</Typography>\n\n          <Box sx={{ px: 2, width: 1 }}>\n            <Slider\n              aria-labelledby=\"routine-level\"\n              valueLabelDisplay=\"auto\"\n              value={routineLevel}\n              step={1}\n              min={1}\n              max={20}\n              marks\n              onChange={(_, nv) => {\n                let newTargetLevel = Number(nv) + (targetLevel - routineLevel);\n                newTargetLevel = Math.min(24, Math.max(-1, newTargetLevel));\n                dispatch(\n                  targetUpdated({\n                    id,\n                    changes: {\n                      routineLevel: nv,\n                      targetLevel: newTargetLevel,\n                    },\n                  })\n                );\n              }}\n            />\n          </Box>\n        </Grid>\n\n        <Grid item xs={6} container justifyContent=\"center\">\n          <Typography id=\"target-level\">Target Level: {targetLevel}</Typography>\n          <Box sx={{ px: 2, width: 1 }}>\n            <Slider\n              aria-labelledby=\"target-level\"\n              valueLabelDisplay=\"auto\"\n              value={targetLevel}\n              step={1}\n              min={-1}\n              max={24}\n              marks\n              onChange={(e, nv) => {\n                dispatch(\n                  targetUpdated({\n                    id,\n                    changes: {\n                      targetLevel: nv,\n                    },\n                  })\n                );\n              }}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid container spacing={{ xs: 1, sm: 2 }} justifyContent=\"center\">\n        <Grid item xs={4} sm={2}>\n          <TextField\n            fullWidth\n            label=\"AC\"\n            value={AC}\n            onChange={(e) => {\n              setAC(e.target.value);\n              e.target.focus();\n            }}\n            onBlur={() => {\n              let newVal = parseInt(AC);\n              setAC(newVal.toString());\n              dispatch(\n                targetUpdated({\n                  id,\n                  changes: {\n                    overrideAC: newVal,\n                  },\n                })\n              );\n            }}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: \"number\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <TextField\n            fullWidth\n            label=\"Fort\"\n            value={Fort}\n            onChange={(e) => {\n              setFort(e.target.value);\n              e.target.focus();\n            }}\n            onBlur={() => {\n              let newVal = parseInt(Fort);\n              setFort(newVal.toString());\n              dispatch(\n                targetUpdated({\n                  id,\n                  changes: {\n                    overrideFort: newVal,\n                  },\n                })\n              );\n            }}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: \"number\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <TextField\n            fullWidth\n            label=\"Ref\"\n            value={Ref}\n            onChange={(e) => {\n              setRef(e.target.value);\n              e.target.focus();\n            }}\n            onBlur={() => {\n              let newVal = parseInt(Ref);\n              setRef(newVal.toString());\n              dispatch(\n                targetUpdated({\n                  id,\n                  changes: {\n                    overrideRef: newVal,\n                  },\n                })\n              );\n            }}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: \"number\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <TextField\n            fullWidth\n            label=\"Will\"\n            value={Will}\n            onChange={(e) => {\n              setWill(e.target.value);\n              e.target.focus();\n            }}\n            onBlur={() => {\n              let newVal = parseInt(Will);\n              setWill(newVal.toString());\n              dispatch(\n                targetUpdated({\n                  id,\n                  changes: {\n                    overrideWill: newVal,\n                  },\n                })\n              );\n            }}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: \"number\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <TextField\n            fullWidth\n            label=\"Perception\"\n            value={Per}\n            onChange={(e) => {\n              setPer(e.target.value);\n              e.target.focus();\n            }}\n            onBlur={() => {\n              let newVal = parseInt(Per);\n              setPer(newVal.toString());\n              dispatch(\n                targetUpdated({\n                  id,\n                  changes: {\n                    overridePer: newVal,\n                  },\n                })\n              );\n            }}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: \"number\",\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ my: 1, p: 1 }}>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            label=\"Max Hit Points\"\n            value={HP}\n            onChange={(e) => {\n              setHP(e.target.value);\n              e.target.focus();\n            }}\n            onBlur={() => {\n              let newVal = parseInt(HP);\n              setHP(newVal.toString());\n              dispatch(\n                targetUpdated({\n                  id,\n                  changes: {\n                    overrideHP: newVal,\n                  },\n                })\n              );\n            }}\n            inputProps={{\n              step: 1,\n              min: 1,\n              max: 1000,\n              type: \"number\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"center\">\n          <Typography id=\"current-HP\">\n            HP: {currentHP}/{overrideHP}\n          </Typography>\n\n          <Box sx={{ px: 2, width: 1 }}>\n            <Slider\n              aria-labelledby=\"current-HP\"\n              valueLabelDisplay=\"auto\"\n              value={currentHP}\n              min={0}\n              max={overrideHP}\n              step={1}\n              onChange={(_, nv) => {\n                let newCurrentHP = Number(nv);\n                dispatch(\n                  targetUpdated({\n                    id,\n                    changes: {\n                      currentHP: newCurrentHP,\n                    },\n                  })\n                );\n              }}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ my: 1, p: 1 }}>\n        <Grid item container alignItems=\"center\" xs=\"auto\">\n          <Typography>Resistance/Weakness: </Typography>\n        </Grid>\n        {weaknesses.map((weaknessId) => (\n          <WeaknessInput parentId={id} id={weaknessId} key={weaknessId} />\n        ))}\n        <AddWeakness parentId={id} />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport { SingleLevelInput };\n\nconst WeaknessInput = ({ id, parentId }: { id: number; parentId: number }) => {\n  // needs to have parent id to remove weakness\n  const { type, value } = useAppSelector((state: RootState) =>\n    selectweaknessById(state, id)\n  )!;\n  const [tempVal, setTempVal] = useState(value.toString());\n  const dispatch = useAppDispatch();\n\n  const updateOrRemoveWeakness = (e: SelectChangeEvent) => {\n    if (e?.target?.value === damageTypes.NONE) {\n      // remove this weakness\n      dispatch(weaknessRemoved({ id, parentId }));\n    } else {\n      dispatch(\n        weaknessUpdated({\n          id,\n          changes: { type: e.target.value as Weakness[\"type\"] },\n        })\n      );\n    }\n  };\n\n  return (\n    <Grid item>\n      <WeaknessSelect value={type} onChange={updateOrRemoveWeakness} />\n      <Tooltip title=\"Positive numbers are resistances. Negative numbers are weaknesses.\">\n        <TextField\n          size=\"small\"\n          label=\"Value\"\n          value={tempVal}\n          sx={{ width: \"9ch\" }}\n          onChange={(e) => {\n            setTempVal(e.target.value);\n            e.target.focus();\n          }}\n          onBlur={() => {\n            let newVal = parseInt(tempVal);\n            if (Number.isNaN(newVal)) newVal = 0;\n            setTempVal(newVal.toString());\n            dispatch(weaknessUpdated({ id, changes: { value: newVal } }));\n          }}\n          inputProps={{\n            step: 1,\n            min: -100,\n            max: 100,\n            type: \"number\",\n          }}\n        />\n      </Tooltip>\n    </Grid>\n  );\n};\n\nconst AddWeakness = ({ parentId }: { parentId: number }) => {\n  const dispatch = useAppDispatch();\n  let [tempVal, setTempVal] = useState(\"0\");\n\n  // add a Weakness to TargetInfo id\n  const addWeakness = (e: SelectChangeEvent) => {\n    if (e.target.value !== damageTypes.NONE) {\n      // need to create a new weakness\n      let value = Number(tempVal);\n      if (Number.isNaN(value)) value = 0;\n      dispatch(\n        weaknessCreated({\n          type: e.target.value,\n          value: value,\n          parentId: parentId,\n        })\n      );\n    }\n  };\n\n  return (\n    <Grid item>\n      <WeaknessSelect value={damageTypes.NONE} onChange={addWeakness} />\n      <Tooltip title=\"Positive numbers are resistances. Negative numbers are weaknesses.\">\n        <TextField\n          size=\"small\"\n          label=\"Value\"\n          value={tempVal}\n          sx={{ width: \"9ch\" }}\n          onChange={(e) => {\n            setTempVal(e.target.value);\n          }}\n          inputProps={{\n            step: 1,\n            min: -100,\n            max: 100,\n            type: \"number\",\n          }}\n        />\n      </Tooltip>\n    </Grid>\n  );\n};\n\nconst WeaknessSelect = ({\n  value,\n  onChange,\n}: {\n  value: Weakness[\"type\"];\n  onChange: (e: SelectChangeEvent) => void;\n}) => {\n  return (\n    <FormControl size=\"small\">\n      <InputLabel>Type</InputLabel>\n      <Select label=\"Type\" value={value} onChange={(e) => onChange(e)}>\n        {weaknessOptions}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\nimport { selecttargetById, targetUpdated } from \"./targetSlice\";\n// import { damageTypes } from \"../Model/types\";\n// import {\n//   selectweaknessById,\n//   Weakness,\n//   weaknessCreated,\n//   weaknessRemoved,\n//   weaknessUpdated,\n// } from \"./weaknessSlice\";\n// import { EntityId } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../App/store\";\nimport { Grid, TextField, FormControlLabel, Switch } from \"@mui/material\";\n\nconst JointInput = () => {\n  const id = 0;\n  const {\n    persistentMultiplier,\n    flatfooted,\n    percentSelectedRoutine,\n    // weaknesses,\n  } = useAppSelector((state: RootState) => selecttargetById(state, id)!);\n  const [perMul, setPerMul] = useState(persistentMultiplier.toString());\n  const dispatch = useAppDispatch();\n\n  return (\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\n      <Grid item xs={6} sm={3} md={6} lg={3}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={flatfooted}\n              onChange={(e) =>\n                dispatch(\n                  targetUpdated({\n                    id,\n                    changes: { flatfooted: e.target.checked },\n                  })\n                )\n              }\n            />\n          }\n          label=\"Flatfooted\"\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={3} md={6} lg={3}>\n        <TextField\n          fullWidth\n          label=\"Persistent Damage Multiplier\"\n          value={perMul}\n          onChange={(e) => {\n            setPerMul(e.target.value);\n            e.target.focus();\n          }}\n          onBlur={() => {\n            let newVal = parseFloat(perMul);\n            if (Number.isNaN(newVal)) newVal = 0;\n            setPerMul(newVal.toString());\n            dispatch(\n              targetUpdated({\n                id,\n                changes: {\n                  persistentMultiplier: newVal,\n                },\n              })\n            );\n          }}\n          inputProps={{\n            step: 0.1,\n            min: 0,\n            max: 10,\n            type: \"number\",\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={12} sm={6} md={12} lg={6}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={percentSelectedRoutine}\n              onChange={(e) =>\n                dispatch(\n                  targetUpdated({\n                    id,\n                    changes: { percentSelectedRoutine: e.target.checked },\n                  })\n                )\n              }\n            />\n          }\n          label=\"% of Selected Routine\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport { JointInput };\n","import { Button, useMediaQuery } from \"@mui/material\";\nimport React from \"react\";\n\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport { saveImgLink, selectGraphUrl } from \"../Display/sharingSlice\";\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\nimport { selectRoutineDescriptions } from \"../Routines/RoutineSlice/routineSlice\";\nimport { RootState } from \"../App/store\";\nimport ReactGA from \"react-ga4\";\nReactGA.initialize(\"G-JR2YK097BG\");\n\nconst url = \"https://api.imgur.com/3/image\";\nconst auth = \"Client-ID 9f68ffe6050491a\";\n\nexport const Upload = ({ byLevel = true }: { byLevel?: boolean }) => {\n  const graphUrl = useAppSelector((state: RootState) =>\n    selectGraphUrl(state, byLevel)\n  ).split(\";base64,\")[1];\n  const routineDescriptions = useAppSelector(selectRoutineDescriptions);\n  const dispatch = useAppDispatch();\n\n  const isBigEnough = useMediaQuery((theme: any) => {\n    return theme.breakpoints.up(\"sm\");\n  });\n\n  const title = \"Graph from https://bahalbach.github.io/PF2Calculator/\";\n  let description = \"\";\n  // \"Graph made with https://bahalbach.github.io/PF2Calculator/ \";\n  for (let rd of routineDescriptions) {\n    description += rd + \" \\r\\n\";\n  }\n  description +=\n    \"\\n Graph made with https://bahalbach.github.io/PF2Calculator/ \";\n  const fd = new FormData();\n  fd.append(\"image\", graphUrl);\n  fd.append(\"title\", title);\n  fd.append(\"description\", description);\n  const requestOptions: RequestInit = {\n    method: \"POST\",\n    headers: { Authorization: auth },\n    body: fd,\n  };\n\n  const uploadImage = () => {\n    // console.log(description);\n    // console.log(routineDescriptions);\n    ReactGA.event(\"share\");\n\n    const tab = window.open(\"about:blank\");\n    fetch(url, requestOptions)\n      .then((response) => {\n        // console.log(response);\n        // if (response.ok) {\n        //   alert(\"Image uploaded to album\");\n        // }\n        return response.json();\n      })\n      .then((json) => {\n        console.log(`description is ${json.data.description}`);\n        dispatch(saveImgLink(json.data.link));\n        if (tab !== null) {\n          tab.location = json.data.link;\n          tab.focus();\n        }\n        // window.open(url, \"_blank\").focus();\n      })\n      .catch((error) => {\n        console.error(error);\n        alert(\"Upload failed: \" + error);\n        tab?.close();\n      });\n  };\n  return (\n    <Button\n      onClick={uploadImage}\n      variant=\"contained\"\n      color=\"secondary\"\n      endIcon={<ShareIcon />}\n    >\n      {isBigEnough ? \"Share with IMGUR\" : \"Share\"}\n    </Button>\n  );\n};\n","import React, { useState } from \"react\";\n// import { graphTypeOptions, levelOptions } from \"../Model/options\";\nimport { graphTypes } from \"../Model/types\";\nimport { ByLevelInput } from \"./ByLevelInput\";\n\nimport {\n  Collapse,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Select,\n  Switch,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\n\nimport useGenerateGraphs from \"./useGenerateGraphs\";\nimport { makeOptions } from \"../Model/options\";\nimport { Box } from \"@mui/system\";\nimport { SingleLevelInput } from \"./SingleLevelInput\";\nimport { JointInput } from \"./JointInput\";\nimport { Upload } from \"../Sharing/Upload\";\n\nconst Display = () => {\n  // evaluates routines and displays appropriate graphs\n  const [showByLevel, setShowByLevel] = useState<boolean>(true);\n  const [showSingleLevel, setShowSingleLevel] = useState<boolean>(false);\n  // const [addPersistent, setAddPersistent] = useState(false);\n  const [graphType, setGraphType] = useState<string>(graphTypes.DISTRIBUTION);\n  // const [displayLevel, setDisplayLevel] = useState(1);\n  const {\n    expectedDamages,\n    // expectedPersistentDamages,\n    damageChart,\n    // persistentDamageChart,\n    byLevelDamageChart,\n    // byLevelPerDamageChart,\n  } = useGenerateGraphs(graphType);\n  // const [perMulti, setPerMulti] = useState(2);\n  const isBigEnough = useMediaQuery((theme: any) => {\n    return theme.breakpoints.up(\"sm\");\n  });\n\n  let height = 500 + expectedDamages.length * 19;\n  let singleLevelHeight = height;\n  if (graphType === graphTypes.DISTRIBUTION) {\n    singleLevelHeight += expectedDamages.length * 19;\n  }\n\n  return (\n    <React.Fragment>\n      <Paper sx={{ p: 1, my: 2 }}>\n        <Grid container>\n          <Grid item xs>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showByLevel}\n                  onChange={() => setShowByLevel(!showByLevel)}\n                />\n              }\n              label={isBigEnough ? \"Display By Level Graph\" : \"By Level Graph\"}\n              // sx={{ background: \"lightgrey\", width: 1 }}\n            />\n          </Grid>\n          <Grid item>\n            <Upload byLevel={true} />\n          </Grid>\n        </Grid>\n        <Collapse in={showByLevel}>\n          <ByLevelInput />\n          <JointInput />\n          <Box sx={{ height }}>{byLevelDamageChart}</Box>\n        </Collapse>\n      </Paper>\n\n      <Paper sx={{ p: 1, my: 2 }}>\n        <Grid container>\n          <Grid item xs>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showSingleLevel}\n                  onChange={() => setShowSingleLevel(!showSingleLevel)}\n                />\n              }\n              label={\n                isBigEnough\n                  ? \"Display Single Level Graph\"\n                  : \"Single Level Graph\"\n              }\n            />\n          </Grid>\n          <Grid item>\n            <Upload byLevel={false} />\n          </Grid>\n        </Grid>\n        <Collapse in={showSingleLevel}>\n          <SingleLevelInput />\n          {/* <JointInput /> */}\n          <Typography>Expected damage: </Typography>\n          {expectedDamages}\n          <Select\n            value={graphType}\n            onChange={(e) => setGraphType(e.target.value)}\n          >\n            {makeOptions(graphTypes)}\n          </Select>\n\n          <Box sx={{ height: singleLevelHeight }}>{damageChart}</Box>\n        </Collapse>\n      </Paper>\n    </React.Fragment>\n  );\n};\n\nexport default Display;\n","import React from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\n\n// import SendIcon from \"@mui/icons-material/Send\";\nimport AutoFixHighIcon from \"@mui/icons-material/AutoFixHigh\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\nimport {\n  IconButton,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { RootState } from \"../App/store\";\nimport {\n  selectactivityPathById,\n  setActivityPath,\n  selectSelectedActivityPath,\n  selectParentActivityId,\n  activityPathRemoved,\n} from \"./RoutineSlice/routineSlice\";\nimport { activityTypes } from \"../Model/types\";\nimport { MAPvalues } from \"../Model/defaults\";\n\nexport const ActivityPathStub = ({\n  id,\n  level,\n  displayChildren = true,\n}: {\n  id: number;\n  level: number;\n  displayChildren?: boolean;\n}) => {\n  const { parentId, routineId, name, condition, type, MAP, apIds } =\n    useAppSelector((state: RootState) => selectactivityPathById(state, id)!);\n  const selectedActivityPath = useAppSelector(selectSelectedActivityPath);\n  const parentActivityId = useAppSelector(selectParentActivityId);\n\n  const dispatch = useAppDispatch();\n\n  let icon = <GavelIcon />;\n  switch (type) {\n    case activityTypes.SAVE:\n      icon = <AutoFixHighIcon />;\n      break;\n    default:\n      break;\n  }\n  const showMAP = type !== activityTypes.SAVE && MAPvalues[MAP] !== 0;\n\n  return (\n    <React.Fragment>\n      <ListItem\n        disablePadding\n        secondaryAction={\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() =>\n              dispatch(activityPathRemoved({ id, parentId, routineId }))\n            }\n          >\n            <DeleteIcon />\n          </IconButton>\n        }\n      >\n        <ListItemButton\n          selected={selectedActivityPath === id || parentActivityId === id}\n          sx={{ pl: 4 * level + 2 }}\n          onClick={() => dispatch(setActivityPath(id))}\n        >\n          {/* {displayCondition ? \"Conditions\" : \"\"} */}\n          <ListItemIcon>{icon}</ListItemIcon>\n          <ListItemText\n            primary={name + \" \" + (showMAP ? MAPvalues[MAP] : \"\")}\n            secondary={level > 0 ? condition : \"\"}\n          />\n        </ListItemButton>\n      </ListItem>\n      {displayChildren\n        ? apIds.map((apId) => (\n            <ActivityPathStub key={apId} id={apId} level={level + 1} />\n          ))\n        : \"\"}\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\n\ntype Props = {\n  title: string;\n  label: string;\n  value: any;\n  onChange: (e: SelectChangeEvent) => void;\n  children: JSX.Element[];\n  fullWidth?: boolean;\n};\n\nconst TooltipSelect = ({\n  title,\n  label,\n  value,\n  onChange,\n  children,\n  fullWidth = false,\n}: Props) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Tooltip\n      title={title}\n      open={open}\n      onFocus={() => {\n        console.log(\"focus1\");\n        setOpen(false);\n      }}\n    >\n      <FormControl\n        fullWidth={fullWidth}\n        size=\"small\"\n        onMouseEnter={() => setOpen(true)}\n        onMouseLeave={() => setOpen(false)}\n        onFocus={() => setOpen(false)}\n        sx={{ minWidth: 100 }}\n      >\n        <InputLabel>{label}</InputLabel>\n        <Select label={label} value={value} onChange={onChange}>\n          {children}\n        </Select>\n      </FormControl>\n    </Tooltip>\n  );\n};\n\nexport { TooltipSelect };\n","import React, { useEffect, useState } from \"react\";\nimport { TextField, Grid, IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\n\nimport { Dispatch } from \"redux\";\nimport { levelOptions } from \"../../Model/options\";\nimport { Adjustment } from \"../RoutineSlice/RoutineTypes\";\nimport { TooltipSelect } from \"../../TooltipSelect\";\n\ntype Adjustments = {\n  [level: number]: number;\n};\ntype Entry = [number, string];\n\nexport const generateEntries = (adjustments: Adjustments) => {\n  let currentValue = 0;\n  const entries: Entry[] = [];\n  for (let level = 1; level <= 20; level++) {\n    if (currentValue !== adjustments[level]) {\n      entries.push([level, (adjustments[level] - currentValue).toString()]);\n      currentValue = adjustments[level];\n    }\n  }\n  return entries;\n};\n\nconst generateAdjustments = (entries: Entry[]) => {\n  const adjustments: Adjustments = {};\n  let currentValue = 0;\n  let total = 0;\n  let currentIndex = 0;\n  // console.log(entries);\n  for (let level = 1; level <= 20; level++) {\n    if (entries[currentIndex] && entries[currentIndex][0] === level) {\n      // console.log(\"here\");\n      currentValue = parseInt(entries[currentIndex][1]);\n      if (!currentValue) currentValue = 0;\n      currentIndex++;\n      total += currentValue;\n    }\n    adjustments[level] = total;\n  }\n  return adjustments;\n};\n\nexport const adjustmentsFromLevelChange = (\n  entries: Entry[],\n  index: number,\n  newLevel: number\n) => {\n  entries[index] = [newLevel, entries[index][1]];\n  entries.sort((a, b) => a[0] - b[0]);\n  return generateAdjustments(entries);\n};\n\nexport const adjustmentsFromValueChange = (\n  entries: Entry[],\n  index: number,\n  newValue: string\n) => {\n  entries[index] = [entries[index][0], newValue];\n  return generateAdjustments(entries);\n};\n\nexport const adjustmentsFromNewEntry = (entries: Entry[]) => {\n  let lastValue: Entry =\n    entries.length > 0 ? entries[entries.length - 1] : [0, \"0\"];\n  entries.push([lastValue[0] + 1, (0).toString()]);\n  return generateAdjustments(entries);\n};\n\nexport const LevelList = (\n  name: string,\n  dispatch: Dispatch<any>,\n  action: ActionCreatorWithPayload<any, string>,\n  id: number,\n  adjustments: Adjustment\n) => {\n  const baseEntries = generateEntries(adjustments);\n  let [entries, setEntries] = useState(baseEntries);\n  let be = JSON.stringify(baseEntries);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setEntries(baseEntries), [be]);\n  let levelList = [];\n\n  for (let i = 0; i < entries.length; i++) {\n    levelList.push(\n      <Grid item key={i}>\n        <TooltipSelect\n          title=\"The level where this bonus is added, all later levels will have this bonus added. Please only add 1 bonus per level. Bonuses of 0 are removed.\"\n          label=\"Level\"\n          value={entries[i][0]}\n          onChange={(e) =>\n            dispatch(\n              action({\n                id,\n                changes: {\n                  [name]: adjustmentsFromLevelChange(\n                    entries,\n                    i,\n                    Number(e.target.value)\n                  ),\n                },\n              })\n            )\n          }\n        >\n          {levelOptions}\n        </TooltipSelect>\n\n        <TextField\n          size=\"small\"\n          label=\"Bonus\"\n          sx={{ width: \"9ch\" }}\n          value={entries[i][1]}\n          onChange={(e) => {\n            let newEntries = entries.slice();\n            newEntries[i] = [newEntries[i][0], e.target.value];\n            setEntries(newEntries);\n            e.target.focus();\n          }}\n          onBlur={() => {\n            let newEntries = entries.slice();\n            for (let ni = 0; ni < entries.length; ni++) {\n              newEntries[ni] = [\n                newEntries[ni][0],\n                parseInt(newEntries[ni][1]).toString(),\n              ];\n            }\n            setEntries(newEntries);\n            dispatch(\n              action({\n                id,\n                changes: {\n                  [name]: generateAdjustments(entries),\n                },\n              })\n            );\n          }}\n          inputProps={{\n            step: 1,\n            min: -100,\n            max: 100,\n            type: \"number\",\n          }}\n        />\n        {/* <input\n          type=\"number\"\n          value={entries[i][1]}\n          onChange={(e) => {\n            let newEntries = entries.slice();\n            newEntries[i][1] = e.target.value;\n            setEntries(newEntries);\n            e.target.focus();\n          }}\n          onBlur={(e) =>\n            dispatch(\n              action({\n                id,\n                changes: {\n                  [name]: generateAdjustments(entries),\n                },\n              })\n            )\n          }\n        /> */}\n      </Grid>\n    );\n  }\n  levelList.push(\n    <Grid item key=\"addButton\">\n      <Tooltip title=\"Add a bonus at a specified level.\">\n        <IconButton\n          color=\"primary\"\n          aria-label=\"Add button\"\n          onClick={() =>\n            dispatch(\n              action({\n                id,\n                changes: {\n                  [name]: adjustmentsFromNewEntry(entries),\n                },\n              })\n            )\n          }\n        >\n          <AddIcon />\n        </IconButton>\n      </Tooltip>\n    </Grid>\n  );\n  return levelList;\n};\n","import React, { useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../../App/hooks\";\nimport { LevelList } from \"./LevelList\";\nimport {\n  damageRemoved,\n  damageUpdated,\n  selectdamageById,\n} from \"../RoutineSlice/routineSlice\";\nimport {\n  damageConditionOptions,\n  damageTrendOptions,\n  damageTypeOptions,\n  diceSizeOptions,\n  dieTrendOptions,\n  makeOptions,\n  materialOptions,\n  multiplierOptions,\n} from \"../../Model/options\";\nimport {\n  DamageCond,\n  DamageTrend,\n  damageTrends,\n  DamageType,\n  DieTrend,\n  whenConditions,\n} from \"../../Model/types\";\nimport { RootState } from \"../../App/store\";\nimport {\n  Button,\n  Checkbox,\n  Collapse,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputLabel,\n  ListItemButton,\n  Select,\n  Slider,\n  Switch,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport Divider from \"@mui/material/Divider\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\nimport { TooltipSelect } from \"../../TooltipSelect\";\nimport { Adjustment } from \"../RoutineSlice/RoutineTypes\";\nimport { damageTrendValues, dieTrendValues } from \"../../Model/defaults\";\n\n// const useStyles = makeStyles({\n//   transition: theme.transitions.create([\"background\", \"background-color\"], {\n//     duration: theme.transitions.duration.complex,\n//   }),\n//   \"&:hover\": {\n//     backgroundColor: \"#BBB\",\n//   },\n// });\nexport const Damage = ({ parentId, id }: { parentId: number; id: number }) => {\n  const {\n    damageCondition,\n    damageType,\n    material,\n    persistent,\n    multiplier,\n    damageWhen,\n\n    dieTrend,\n    dieAdjustments,\n    diceSize,\n    fatal,\n    fatalDie,\n    damageTrend,\n    damageAdjustments,\n  } = useAppSelector((state: RootState) => selectdamageById(state, id)!);\n  const dispatch = useAppDispatch();\n\n  const [showContent, setShowContent] = useState(false);\n\n  const dieLevelList = LevelList(\n    \"dieAdjustments\",\n    dispatch,\n    damageUpdated,\n    id,\n    dieAdjustments\n  );\n\n  const damageLevelList = LevelList(\n    \"damageAdjustments\",\n    dispatch,\n    damageUpdated,\n    id,\n    damageAdjustments\n  );\n\n  const damageTrendList = damageTrend.map((dt, index) => {\n    return (\n      <Grid item key={index}>\n        <TooltipSelect\n          title=\"Adds bonus damage that applies the appropriate amount of damage at appropriate levels. For 'Weapon' and 'Precise Strike' the bonus is the number of dice.\"\n          label=\"Damage Trend\"\n          value={dt}\n          onChange={(e) => {\n            let newdt = damageTrend.slice();\n            if (e.target.value === damageTrends.NONE) {\n              newdt.splice(index, 1);\n            } else {\n              newdt[index] = e.target.value as DamageTrend;\n            }\n            dispatch(\n              damageUpdated({\n                id,\n                changes: { damageTrend: newdt },\n              })\n            );\n          }}\n        >\n          {damageTrendOptions}\n        </TooltipSelect>\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <DamageDisplay\n        damageInfo={{\n          damageCondition,\n          dieTrend,\n          dieAdjustments,\n          diceSize,\n          fatal,\n          fatalDie,\n          damageTrend,\n          damageAdjustments,\n          persistent,\n          damageType,\n          multiplier,\n        }}\n        onClick={() => setShowContent(!showContent)}\n        id={id}\n        parentId={parentId}\n      />\n      <Collapse in={showContent}>\n        <Box\n          sx={{\n            mt: 1,\n            p: 1,\n            mb: 1,\n            \"&:hover\": { bgcolor: \"rgb(50,50,50,.05)\" },\n          }}\n        >\n          {/* <Divider textAlign=\"left\" sx={{ mt: 0, mb: 1 }}></Divider> */}\n          <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ mb: 1 }}>\n            {/* <Grid item xs=\"auto\">\n              <Typography>Apply damage </Typography>\n            </Grid> */}\n\n            <Grid item xs>\n              <TooltipSelect\n                fullWidth={true}\n                title=\"When this damage instance applies. For example: for extra damage on a critical hit, like with deadly or fatal weapons, use 'On Crit'. Don't forget to change when using a save instead of an attack.\"\n                value={damageCondition}\n                label=\"Condition\"\n                onChange={(e) =>\n                  dispatch(\n                    damageUpdated({\n                      id,\n                      changes: { damageCondition: e.target.value },\n                    })\n                  )\n                }\n              >\n                {damageConditionOptions}\n              </TooltipSelect>\n            </Grid>\n            <Grid item xs>\n              <FormControl size=\"small\" fullWidth>\n                <InputLabel id=\"damage-when-input\">When Target</InputLabel>\n                <Select\n                  labelId=\"damage-when-input\"\n                  id=\"damage-when\"\n                  multiple\n                  value={damageWhen}\n                  label=\"When Target\"\n                  renderValue={(selected) => selected.join(\" or \")}\n                  onChange={(e) =>\n                    dispatch(\n                      damageUpdated({\n                        id,\n                        changes: { damageWhen: e.target.value },\n                      })\n                    )\n                  }\n                >\n                  {makeOptions(whenConditions)}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\n            <Grid item>\n              <TooltipSelect\n                title=\"How much the damage is multiplied by. For example: if you want to average the damage of two different attacks, add both and set the multiplier to .5\"\n                value={multiplier}\n                label=\"Multiplier\"\n                onChange={(e) =>\n                  dispatch(\n                    damageUpdated({\n                      id,\n                      changes: { multiplier: Number(e.target.value) },\n                    })\n                  )\n                }\n              >\n                {multiplierOptions}\n              </TooltipSelect>\n            </Grid>\n            <Grid item>\n              <FormControl size=\"small\">\n                <InputLabel id=\"damage-type-input\">Type</InputLabel>\n                <Select\n                  labelId=\"damage-type-input\"\n                  id=\"damage-type\"\n                  value={damageType}\n                  label=\"Type\"\n                  onChange={(e) =>\n                    dispatch(\n                      damageUpdated({\n                        id,\n                        changes: { damageType: e.target.value },\n                      })\n                    )\n                  }\n                >\n                  {damageTypeOptions}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <FormControl size=\"small\">\n                <InputLabel id=\"damage-material-input\">Material</InputLabel>\n                <Select\n                  labelId=\"damage-material-input\"\n                  id=\"damage-material\"\n                  value={material}\n                  label=\"Material\"\n                  onChange={(e) =>\n                    dispatch(\n                      damageUpdated({\n                        id,\n                        changes: { material: e.target.value },\n                      })\n                    )\n                  }\n                >\n                  {materialOptions}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"If this damage is persistent. Persistent damage is multiplied by the 'Persistent Damage Multiplier' above the By Level graph.\">\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={persistent}\n                      onChange={(e) =>\n                        dispatch(\n                          damageUpdated({\n                            id,\n                            changes: { persistent: e.target.checked },\n                          })\n                        )\n                      }\n                    />\n                  }\n                  label=\"Persistent\"\n                />\n              </Tooltip>\n            </Grid>\n          </Grid>\n          <Divider textAlign=\"left\" sx={{ mt: 1, mb: 1 }}>\n            Dice\n          </Divider>\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\n            <Grid item>\n              <TooltipSelect\n                title=\"When dice are added to the damage. At each level in (), 1 die of the selected size is added to the damage\"\n                value={dieTrend}\n                label=\"Damage Dice\"\n                onChange={(e) =>\n                  dispatch(\n                    damageUpdated({\n                      id,\n                      changes: { dieTrend: e.target.value },\n                    })\n                  )\n                }\n              >\n                {dieTrendOptions}\n              </TooltipSelect>\n            </Grid>\n            {dieLevelList}\n            <Grid item>\n              <FormControl size=\"small\">\n                <InputLabel id=\"dice-size-input\">Die Size</InputLabel>\n                <Select\n                  labelId=\"dice-size-input\"\n                  id=\"dice-size\"\n                  value={diceSize}\n                  label=\"Die Size\"\n                  onChange={(e) =>\n                    dispatch(\n                      damageUpdated({\n                        id,\n                        changes: { diceSize: Number(e.target.value) },\n                      })\n                    )\n                  }\n                >\n                  {diceSizeOptions}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"For Fatal. If this damage uses a different die size on a crit. For Fatal you still need to add another die with the 'On Crit' Condition.\">\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={fatal}\n                      onChange={(e) =>\n                        dispatch(\n                          damageUpdated({\n                            id,\n                            changes: { fatal: e.target.checked },\n                          })\n                        )\n                      }\n                    />\n                  }\n                  label=\"On Crit Die\"\n                />\n              </Tooltip>\n            </Grid>\n            {fatal ? (\n              <Grid item>\n                <FormControl size=\"small\">\n                  <InputLabel id=\"fatal-size-input\">Die Size</InputLabel>\n                  <Select\n                    labelId=\"fatal-size-input\"\n                    id=\"fatal-size\"\n                    value={fatalDie}\n                    label=\"Die Size\"\n                    onChange={(e) =>\n                      dispatch(\n                        damageUpdated({\n                          id,\n                          changes: { fatalDie: Number(e.target.value) },\n                        })\n                      )\n                    }\n                  >\n                    {diceSizeOptions}\n                  </Select>\n                </FormControl>\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Divider textAlign=\"left\" sx={{ mt: 1, mb: 1 }}>\n            Static Damage\n          </Divider>\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\n            {damageTrendList}\n            <Grid item>\n              <Tooltip title=\"Adds bonus damage that applies the appropriate amount of damage at appropriate levels. For 'Weapon' and 'Precise Strike' the bonus is the number of dice.\">\n                <Button\n                  onClick={() => {\n                    let newdt = damageTrend.slice();\n                    newdt.push(damageTrends.NONE);\n                    dispatch(\n                      damageUpdated({\n                        id,\n                        changes: {\n                          damageTrend: newdt,\n                        },\n                      })\n                    );\n                  }}\n                >\n                  Add damage scaling\n                </Button>\n              </Tooltip>\n            </Grid>\n            {damageLevelList}\n          </Grid>\n          {/* <Divider textAlign=\"left\" sx={{ mt: 1, mb: 1 }}></Divider> */}\n        </Box>\n      </Collapse>\n    </React.Fragment>\n  );\n};\n\ninterface PropsType {\n  damageInfo: {\n    damageCondition: DamageCond;\n    dieTrend: DieTrend;\n    dieAdjustments: Adjustment;\n    diceSize: number;\n    fatal: boolean;\n    fatalDie: number;\n    damageTrend: DamageTrend[];\n    damageAdjustments: Adjustment;\n    persistent: boolean;\n    damageType: DamageType;\n    multiplier: number;\n  };\n  onClick: any;\n  id: number;\n  parentId: number;\n}\nconst DamageDisplay = ({\n  damageInfo: {\n    damageCondition,\n    dieTrend,\n    dieAdjustments,\n    diceSize,\n    fatal,\n    fatalDie,\n    damageTrend,\n    damageAdjustments,\n    persistent,\n    damageType,\n    multiplier,\n  },\n  onClick,\n  id,\n  parentId,\n}: PropsType) => {\n  const [level, setLevel] = useState(20);\n  const dispatch = useAppDispatch();\n  let diceNumber = dieTrendValues[dieTrend][level] + dieAdjustments[level];\n  let staticDamage = damageAdjustments[level];\n  for (let dt of damageTrend) {\n    staticDamage += damageTrendValues[dt][level];\n  }\n  let averageDamage = staticDamage + ((diceSize + 1) / 2) * diceNumber;\n  let fatalString =\n    \" (\" + diceNumber.toString() + \"d\" + fatalDie.toString() + \" on Crit)\";\n\n  let damageString =\n    damageCondition +\n    \": \" +\n    diceNumber.toString() +\n    \"d\" +\n    diceSize.toString() +\n    (fatal ? fatalString : \"\") +\n    (staticDamage ? \" + \" + staticDamage.toString() : \"\") +\n    \" (avg: \" +\n    averageDamage.toString() +\n    \") \" +\n    (persistent ? \"persistent \" : \"\") +\n    damageType +\n    (multiplier !== 1 ? \" x\" + multiplier : \"\");\n\n  return (\n    <Grid container alignItems=\"center\" columnSpacing={{ xs: 2 }}>\n      <Grid item xs=\"auto\">\n        <IconButton\n          color=\"primary\"\n          size=\"small\"\n          onClick={(e) => {\n            dispatch(damageRemoved({ id, parentId }));\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Grid>\n      <Grid item xs=\"auto\" sx={{ ml: -2 }}>\n        <ListItemButton onClick={onClick}>\n          <Typography variant=\"h6\">{\"Damage \"}</Typography>\n        </ListItemButton>\n      </Grid>\n      <Grid item sx={{ ml: -2, mt: 1, width: 100 }}>\n        <Slider\n          size=\"small\"\n          value={level}\n          min={1}\n          max={20}\n          marks\n          // @ts-ignore\n          onChange={(_, nv) => setLevel(nv)}\n          valueLabelDisplay=\"auto\"\n          // getAriaValueText={(v) => `${v}`}\n        />\n      </Grid>\n      <Grid item>\n        <Typography component=\"span\">\n          {damageString + \" at level \" + level.toString()}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../../App/hooks\";\n\nimport {\n  Collapse,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  ListItemButton,\n  Select,\n  Slider,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\n\nimport {\n  conditionOptions,\n  effectTypeOptions,\n  makeOptions,\n} from \"../../Model/options\";\nimport { RootState } from \"../../App/store\";\nimport {\n  effectRemoved,\n  effectUpdated,\n  selecteffectById,\n} from \"../RoutineSlice/routineSlice\";\nimport { effectValueTypes, whenConditions } from \"../../Model/types\";\nimport { TooltipSelect } from \"../../TooltipSelect\";\n\nexport const Effect = ({ parentId, id }: { parentId: number; id: number }) => {\n  const {\n    effectCondition,\n    effectType,\n    effectValue,\n    startLevel,\n    endLevel,\n    damageWhen,\n  } = useAppSelector((state: RootState) => selecteffectById(state, id)!);\n  const dispatch = useAppDispatch();\n  let [value, setValue] = useState(effectValue ? effectValue.toString() : \"0\");\n  // @ts-ignore\n  const showValue = Object.values(effectValueTypes).includes(effectType);\n  let [validLevels, setValidLevels] = useState([startLevel, endLevel]);\n  useEffect(\n    () => setValidLevels([startLevel, endLevel]),\n    [startLevel, endLevel]\n  );\n  const [showContent, setShowContent] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid container columnSpacing={{ xs: 2 }} alignItems=\"center\">\n        <Grid item xs=\"auto\">\n          <IconButton\n            aria-label=\"delete\"\n            color=\"primary\"\n            onClick={(e) => {\n              dispatch(effectRemoved({ id, parentId }));\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs=\"auto\" sx={{ ml: -2 }}>\n          <ListItemButton onClick={() => setShowContent(!showContent)}>\n            <Typography variant=\"h6\">Effect</Typography>\n          </ListItemButton>\n        </Grid>\n        <Grid item>\n          <Typography>\n            {effectCondition} {\": \"}\n            {effectType} {showValue ? effectValue : \"\"}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Collapse in={showContent}>\n        <Box\n          sx={{\n            p: 1,\n            mb: 1,\n            \"&:hover\": { bgcolor: \"rgb(50,50,50,.05)\" },\n          }}\n        >\n          <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ mb: 1 }}>\n            <Grid item xs>\n              <TooltipSelect\n                fullWidth={true}\n                title=\"When this effect applies, depending on the result of this activities roll. For example the spell 'fear' should have 'On Success' 'Frightened' '1', 'On Failure' 'Frightened' '2' etc.\"\n                value={effectCondition}\n                label=\"Condition\"\n                onChange={(e) =>\n                  dispatch(\n                    effectUpdated({\n                      id,\n                      changes: { effectCondition: e.target.value },\n                    })\n                  )\n                }\n              >\n                {conditionOptions}\n              </TooltipSelect>\n            </Grid>\n            <Grid item xs>\n              <FormControl size=\"small\" fullWidth>\n                <InputLabel id=\"damage-when-input\">When Target</InputLabel>\n                <Select\n                  labelId=\"damage-when-input\"\n                  id=\"damage-when\"\n                  multiple\n                  value={damageWhen}\n                  label=\"When Target\"\n                  renderValue={(selected) => selected.join(\" or \")}\n                  onChange={(e) =>\n                    dispatch(\n                      effectUpdated({\n                        id,\n                        changes: { damageWhen: e.target.value },\n                      })\n                    )\n                  }\n                >\n                  {makeOptions(whenConditions)}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Grid container spacing={{ xs: 1, sm: 2 }}>\n            <Grid item>\n              <TooltipSelect\n                title=\"The effect that is applied to the target when 'Condition' is met.\"\n                value={effectType}\n                label=\"Effect\"\n                onChange={(e) =>\n                  dispatch(\n                    effectUpdated({\n                      id,\n                      changes: { effectType: e.target.value },\n                    })\n                  )\n                }\n              >\n                {effectTypeOptions}\n              </TooltipSelect>\n            </Grid>\n\n            {showValue ? (\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  label=\"Value\"\n                  sx={{ width: \"9ch\" }}\n                  value={value}\n                  onChange={(e) => {\n                    setValue(e.target.value);\n                    e.target.focus();\n                  }}\n                  onBlur={() => {\n                    let newVal = parseInt(value);\n                    if (Number.isNaN(newVal)) newVal = 0;\n                    setValue(newVal.toString());\n                    dispatch(\n                      effectUpdated({\n                        id,\n                        changes: {\n                          effectValue: newVal,\n                        },\n                      })\n                    );\n                  }}\n                  inputProps={{\n                    step: 1,\n                    min: 0,\n                    max: 10,\n                    type: \"number\",\n                  }}\n                />\n              </Grid>\n            ) : (\n              \"\"\n            )}\n\n            <Grid item sx={{ px: 2 }}>\n              <Typography align=\"center\">\n                Valid Levels: {startLevel} to {endLevel}\n              </Typography>\n              <Slider\n                size=\"small\"\n                getAriaLabel={() => \"Valid levels\"}\n                value={validLevels}\n                min={1}\n                max={20}\n                marks\n                // @ts-ignore\n                onChange={(e, nv: number[]) => setValidLevels(nv)}\n                onBlur={() =>\n                  dispatch(\n                    effectUpdated({\n                      id,\n                      changes: {\n                        startLevel: validLevels[0],\n                        endLevel: validLevels[1],\n                      },\n                    })\n                  )\n                }\n                valueLabelDisplay=\"auto\"\n                getAriaValueText={(v) => `${v}`}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </Collapse>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../../App/hooks\";\n\nimport { LevelList } from \"./LevelList\";\nimport {\n  activityPathContinued,\n  damageCreated,\n  setNewActivityParent,\n} from \"../RoutineSlice/routineSlice\";\nimport {\n  activityTypeOptions,\n  profTrendOptions,\n  conditionOptions,\n  defenseOptions,\n  MAPOptions,\n  rollOptions,\n  statTrendOptions,\n  itemBTrendOptions,\n} from \"../../Model/options\";\nimport {\n  activityPathRemoved,\n  activityPathUpdated,\n  selectactivityPathById,\n} from \"../RoutineSlice/routineSlice\";\nimport {\n  activityTypes,\n  ItemTrend,\n  MAP,\n  ProfTrend,\n  StatTrend,\n} from \"../../Model/types\";\nimport { Damage } from \"./Damage\";\nimport { Effect } from \"./Effect\";\nimport { effectCreated } from \"../RoutineSlice/routineSlice\";\nimport { RootState } from \"../../App/store\";\nimport {\n  Button,\n  Collapse,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  List,\n  ListItemButton,\n  ListSubheader,\n  Paper,\n  Select,\n  Slider,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { ActivityPathStub } from \"../ActivityPathStub\";\nimport { TooltipSelect } from \"../../TooltipSelect\";\nimport {\n  itemTrendValues,\n  MAPvalues,\n  profTrendValues,\n  statTrendValues,\n} from \"../../Model/defaults\";\nimport { Adjustment } from \"../RoutineSlice/RoutineTypes\";\nimport { Box } from \"@mui/system\";\nimport ReactGA from \"react-ga4\";\nReactGA.initialize(\"G-JR2YK097BG\");\n\nexport const ActivityPath = ({\n  id,\n  level = 0,\n  open = false,\n}: {\n  id: number;\n  level?: number;\n  open?: boolean;\n}) => {\n  const {\n    parentId,\n    routineId,\n    condition,\n\n    name,\n\n    type,\n    MAP,\n\n    damages,\n    effects,\n    apIds,\n  } = useAppSelector((state: RootState) => selectactivityPathById(state, id)!);\n\n  const dispatch = useAppDispatch();\n\n  let [tempName, setTempName] = useState(name);\n  useEffect(() => setTempName(name), [name]);\n\n  const [showContent, setShowContent] = useState(open);\n\n  const showMAP = type !== activityTypes.SAVE && MAPvalues[MAP] !== 0;\n\n  return (\n    <React.Fragment>\n      <Paper sx={{ my: 2, p: 1, ml: level * 2 }}>\n        <Grid container columnSpacing={{ xs: 1, sm: 2 }} alignItems=\"center\">\n          <Grid item xs=\"auto\">\n            <IconButton\n              color=\"primary\"\n              size=\"small\"\n              onClick={(e) => {\n                dispatch(activityPathRemoved({ id, parentId, routineId }));\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Grid>\n          <Grid item xs=\"auto\">\n            <ListItemButton onClick={() => setShowContent(!showContent)}>\n              <Typography variant=\"h6\">Activity</Typography>\n            </ListItemButton>\n          </Grid>\n          <Grid item>\n            <Typography>\n              {parentId !== undefined ? condition + \": \" : \"\"}\n              {name}\n              {/* {type} */}\n              {showMAP ? \" \" + MAPvalues[MAP] : \"\"}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Collapse in={showContent} mountOnEnter>\n          <Grid container spacing={2} sx={{ mt: 1, px: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                label=\"Activity Name\"\n                placeholder=\"Fighter - Strike - d6 agile\"\n                value={tempName}\n                onChange={(e) => {\n                  setTempName(e.target.value);\n                }}\n                onBlur={() =>\n                  dispatch(\n                    activityPathUpdated({ id: id, changes: { name: tempName } })\n                  )\n                }\n              />\n            </Grid>\n\n            {parentId !== undefined ? (\n              <Grid item xs={12} sm={6}>\n                <TooltipSelect\n                  title='Depending on the roll of the parent activity, should this activity happen. For example: to add another strike only when you hit with the previous one, have the second strike be a child of the first with the condition \"Success or Better\"'\n                  value={condition}\n                  label=\"Condition\"\n                  onChange={(e) =>\n                    dispatch(\n                      activityPathUpdated({\n                        id,\n                        changes: { condition: e.target.value },\n                      })\n                    )\n                  }\n                >\n                  {conditionOptions}\n                </TooltipSelect>\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Roll id={id} />\n          {/* <List subheader={<ListSubheader>Damages</ListSubheader>}> */}\n\n          {damages.map((damageId) => (\n            <Damage parentId={id} id={damageId} key={damageId} />\n          ))}\n          {/* </List> */}\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => dispatch(damageCreated({ parentId: id }))}\n          >\n            Add Damage\n          </Button>\n\n          {effects.map((effectId) => (\n            <Effect parentId={id} id={effectId} key={effectId} />\n          ))}\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => dispatch(effectCreated({ parentId: id }))}\n          >\n            Add Effect\n          </Button>\n\n          <List subheader={<ListSubheader>Child Activities</ListSubheader>}>\n            {apIds.map((apId) => (\n              <ActivityPathStub\n                key={apId}\n                id={apId}\n                level={0}\n                displayChildren={false}\n              />\n            ))}\n          </List>\n\n          <Grid container spacing={{ xs: 1 }} sx={{ my: 2, p: 1 }}>\n            <Grid item container xs={6} justifyContent=\"center\">\n              <Button\n                variant=\"contained\"\n                onClick={() => {\n                  window.location.href = \"#routine-activity-list\";\n                  ReactGA.event(\"select_content\", {\n                    content_type: \"new-activity\",\n                    item_id: \"continue-activity\",\n                  });\n                  dispatch(\n                    activityPathContinued({\n                      parentId: id,\n                    })\n                  );\n                }}\n              >\n                Continue Attack\n              </Button>\n            </Grid>\n            <Grid item container xs={6} justifyContent=\"center\">\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  window.location.href = \"#routine-activity-list\";\n                  dispatch(setNewActivityParent({ parentId: id }));\n                }}\n              >\n                New Child Activity\n              </Button>\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Paper>\n      {apIds.map((apId) => (\n        <ActivityPath key={apId} id={apId} level={level + 1} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst Roll = ({ id }: { id: number }) => {\n  const {\n    rollType,\n    type,\n    profTrend,\n    statTrend,\n    itemTrend,\n    bonusAdjustments,\n    MAP,\n    targetType,\n  } = useAppSelector((state: RootState) => selectactivityPathById(state, id)!);\n\n  const dispatch = useAppDispatch();\n\n  const [showContent, setShowContent] = useState(false);\n\n  let isSave = type === activityTypes.SAVE;\n\n  const bonusLevelList = LevelList(\n    \"bonusAdjustments\",\n    dispatch,\n    activityPathUpdated,\n    id,\n    bonusAdjustments\n  );\n\n  return (\n    <React.Fragment>\n      <RollBonusDisplay\n        rollInfo={{\n          isSave,\n          profTrend,\n          statTrend,\n          itemTrend,\n          MAP,\n          bonusAdjustments,\n        }}\n        onClick={() => setShowContent(!showContent)}\n      />\n      <Collapse in={showContent}>\n        <Box\n          sx={{\n            p: 1,\n            mb: 1,\n            \"&:hover\": { bgcolor: \"rgb(50,50,50,.05)\" },\n          }}\n        >\n          <Grid container spacing={{ xs: 1, sm: 2 }} sx={{}}>\n            <Grid item>\n              <TooltipSelect\n                title=\"Advantage is rolling twice and taking the higher roll, disadvantage is taking the lower\"\n                label=\"Roll Type\"\n                value={rollType}\n                onChange={(e) => {\n                  dispatch(\n                    activityPathUpdated({\n                      id,\n                      changes: { rollType: e.target.value },\n                    })\n                  );\n                }}\n              >\n                {rollOptions}\n              </TooltipSelect>\n            </Grid>\n            <Grid item>\n              <FormControl size=\"small\">\n                <InputLabel id=\"activity-type-input\">Activity Type</InputLabel>\n                <Select\n                  labelId=\"activity-type-input\"\n                  label=\"Activity Type\"\n                  value={type}\n                  onChange={(e) => {\n                    dispatch(\n                      activityPathUpdated({\n                        id,\n                        changes: { type: e.target.value },\n                      })\n                    );\n                  }}\n                >\n                  {activityTypeOptions}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <TooltipSelect\n                title=\"An increase in proficiency (+2) is applied at each level in ()\"\n                label=\"Proficiency\"\n                value={profTrend}\n                onChange={(e) => {\n                  dispatch(\n                    activityPathUpdated({\n                      id,\n                      changes: { profTrend: e.target.value },\n                    })\n                  );\n                }}\n              >\n                {profTrendOptions}\n              </TooltipSelect>\n            </Grid>\n            <Grid item>\n              <TooltipSelect\n                title=\"Bonuses from the listed ability score are applied at the appropriate levels. An ability score starts at the first value and is increased at levels 5, 10, 15, and 20 or until it reaches the second value listed. 'apex' means a bonus from an apex item is added to that score at the level in ()\"\n                label=\"Ability Score\"\n                value={statTrend}\n                onChange={(e) => {\n                  dispatch(\n                    activityPathUpdated({\n                      id,\n                      changes: { statTrend: e.target.value },\n                    })\n                  );\n                }}\n              >\n                {statTrendOptions}\n              </TooltipSelect>\n            </Grid>\n            <Grid item>\n              <TooltipSelect\n                title=\"Item bonuses are applied at the levels in ().\"\n                label=\"Item Bonus\"\n                value={itemTrend}\n                onChange={(e) => {\n                  dispatch(\n                    activityPathUpdated({\n                      id,\n                      changes: { itemTrend: e.target.value },\n                    })\n                  );\n                }}\n              >\n                {itemBTrendOptions}\n              </TooltipSelect>\n            </Grid>\n            {bonusLevelList}\n            {!isSave ? (\n              <Grid item>\n                <TooltipSelect\n                  title=\"The multiple attack penalty that is applied to this attack.\"\n                  label=\"MAP\"\n                  value={MAP}\n                  onChange={(e) => {\n                    dispatch(\n                      activityPathUpdated({\n                        id,\n                        changes: { MAP: e.target.value },\n                      })\n                    );\n                  }}\n                >\n                  {MAPOptions}\n                </TooltipSelect>\n              </Grid>\n            ) : (\n              \"\"\n            )}\n            <Grid item>\n              <TooltipSelect\n                title=\"What defense is targeted\"\n                label=\"Target Defense\"\n                value={targetType}\n                onChange={(e) => {\n                  dispatch(\n                    activityPathUpdated({\n                      id,\n                      changes: { targetType: e.target.value },\n                    })\n                  );\n                }}\n              >\n                {defenseOptions}\n              </TooltipSelect>\n            </Grid>\n          </Grid>\n        </Box>\n      </Collapse>\n    </React.Fragment>\n  );\n};\n\ninterface PropsType {\n  rollInfo: {\n    isSave: boolean;\n    MAP: MAP;\n    profTrend: ProfTrend;\n    statTrend: StatTrend;\n    itemTrend: ItemTrend;\n    bonusAdjustments: Adjustment;\n  };\n  onClick: any;\n}\nconst RollBonusDisplay = ({\n  rollInfo: { isSave, MAP, profTrend, statTrend, itemTrend, bonusAdjustments },\n  onClick,\n}: PropsType) => {\n  const [level, setLevel] = useState(20);\n  // const {isSave, MAP, profTrend, statTrend, itemTrend, bonusAdjustments} = rollInfo;\n  let totalBonus = 0;\n\n  // const updateLevel = (newLevel: number) => {\n  //   setLevel(newLevel);\n  totalBonus = isSave ? 10 : MAPvalues[MAP];\n  totalBonus += profTrendValues[profTrend][level];\n  totalBonus += statTrendValues[statTrend][level];\n  totalBonus += itemTrendValues[itemTrend][level];\n  totalBonus += bonusAdjustments[level];\n\n  // updateLevel(1);\n\n  return (\n    <Grid container columnSpacing={{ xs: 2 }} alignItems=\"center\">\n      <Grid item xs=\"auto\">\n        <ListItemButton onClick={onClick}>\n          <Typography variant=\"h6\">{\"Roll \"}</Typography>\n        </ListItemButton>\n      </Grid>\n      <Grid item sx={{ ml: -2, mt: 1, width: 100 }}>\n        <Slider\n          size=\"small\"\n          value={level}\n          min={1}\n          max={20}\n          marks\n          // @ts-ignore\n          onChange={(_, nv) => setLevel(nv)}\n          valueLabelDisplay=\"auto\"\n          // getAriaValueText={(v) => `${v}`}\n        />\n      </Grid>\n      <Grid item>\n        <Typography>\n          {(isSave ? \"DC \" : \" +\") +\n            totalBonus.toString() +\n            \" at level \" +\n            level.toString()}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\nimport {\n  emptyActivityPathCreated,\n  routineUpdated,\n  selectCreateNewActivity,\n  selectRoutineById,\n  selectSelectedActivityPath,\n  setNewActivityParent,\n} from \"./RoutineSlice/routineSlice\";\nimport { ActivityPathStub } from \"./ActivityPathStub\";\nimport { RootState } from \"../App/store\";\nimport {\n  Button,\n  Grid,\n  List,\n  ListSubheader,\n  Paper,\n  Slider,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { activityTypes } from \"../Model/types\";\nimport { Box } from \"@mui/system\";\nimport { ActivityPath } from \"./Activity/ActivityPath\";\nimport ReactGA from \"react-ga4\";\nReactGA.initialize(\"G-JR2YK097BG\");\n\nfunction SelectedRoutine({ routineId }: { routineId: number }) {\n  // const selectedRoutine = useSelector(selectSelectedRoutine);\n  const { name, startLevel, endLevel, description, apIds } = useAppSelector(\n    (state: RootState) => selectRoutineById(state, routineId)!\n  );\n  const selectedActivityPath = useAppSelector(selectSelectedActivityPath);\n  const createNewActivity = useAppSelector(selectCreateNewActivity);\n\n  const dispatch = useAppDispatch();\n\n  let [tempName, setTempName] = useState(name);\n  const [tempDescription, setTempDescription] = useState(description);\n  let [validLevels, setValidLevels] = useState([startLevel, endLevel]);\n  useEffect(() => setTempName(name), [name]);\n  useEffect(() => setTempDescription(description), [description]);\n  useEffect(\n    () => setValidLevels([startLevel, endLevel]),\n    [startLevel, endLevel]\n  );\n\n  const displayAllRoutines =\n    selectedActivityPath === undefined && !createNewActivity;\n\n  return (\n    <React.Fragment>\n      <Paper sx={{ my: 2, p: 1 }}>\n        <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ p: 1 }}>\n          <Grid item xs={12} sm={8} md={12} lg={8}>\n            <TextField\n              fullWidth\n              label=\"Routine Name\"\n              placeholder=\"Fighter d8 2 strikes\"\n              value={tempName}\n              onChange={(e) => {\n                setTempName(e.target.value);\n              }}\n              onBlur={() =>\n                dispatch(\n                  routineUpdated({ id: routineId, changes: { name: tempName } })\n                )\n              }\n            />\n          </Grid>\n          <Grid item xs={12} sm={4} md={12} lg={4}>\n            <Typography align=\"center\">\n              Valid Levels: {startLevel} to {endLevel}\n            </Typography>\n            <Box sx={{ px: 2 }}>\n              <Slider\n                getAriaLabel={() => \"Valid levels\"}\n                value={validLevels}\n                min={1}\n                max={20}\n                marks\n                // @ts-ignore\n                onChange={(e, nv: number[]) => setValidLevels(nv)}\n                onBlur={() =>\n                  dispatch(\n                    routineUpdated({\n                      id: routineId,\n                      changes: {\n                        startLevel: validLevels[0],\n                        endLevel: validLevels[1],\n                      },\n                    })\n                  )\n                }\n                valueLabelDisplay=\"auto\"\n                getAriaValueText={(v) => `${v}`}\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              label=\"Routine Description\"\n              placeholder=\"A Fighter making two strikes with a longsword. Critical Specialization at 5. 1d6 runes at 8 and 15.\"\n              value={tempDescription}\n              onChange={(e) => {\n                setTempDescription(e.target.value);\n              }}\n              onBlur={() =>\n                dispatch(\n                  routineUpdated({\n                    id: routineId,\n                    changes: { description: tempDescription },\n                  })\n                )\n              }\n            />\n          </Grid>\n        </Grid>\n        {/* <Paper sx={{ my: 2, p: 1 }}> */}\n        <List\n          id=\"routine-activity-list\"\n          subheader={<ListSubheader>Activities</ListSubheader>}\n        >\n          {apIds.map((apId) => (\n            <ActivityPathStub key={apId} id={apId} level={0} />\n          ))}\n        </List>\n        {/* </Paper> */}\n        <Grid container spacing={{ xs: 1 }} sx={{ my: 2, p: 1 }}>\n          <Grid\n            item\n            container\n            xs={6}\n            sm={3}\n            md={6}\n            lg={3}\n            justifyContent=\"center\"\n          >\n            <Button\n              size=\"small\"\n              fullWidth\n              variant=\"contained\"\n              onClick={() => dispatch(setNewActivityParent({ routineId }))}\n            >\n              Create New Activity\n            </Button>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={6}\n            sm={3}\n            md={6}\n            lg={3}\n            justifyContent=\"center\"\n          >\n            <Button\n              size=\"small\"\n              fullWidth\n              variant=\"outlined\"\n              onClick={() => {\n                ReactGA.event(\"select_content\", {\n                  content_type: \"new-activity\",\n                  item_id: \"empty-activity\",\n                });\n                dispatch(emptyActivityPathCreated({ routineId }));\n              }}\n            >\n              New Empty Activity\n            </Button>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={6}\n            sm={3}\n            md={6}\n            lg={3}\n            justifyContent=\"center\"\n          >\n            <Button\n              size=\"small\"\n              fullWidth\n              variant=\"outlined\"\n              onClick={() => {\n                ReactGA.event(\"select_content\", {\n                  content_type: \"new-activity\",\n                  item_id: \"strike-activity\",\n                });\n                dispatch(\n                  emptyActivityPathCreated({\n                    routineId,\n                    activityType: activityTypes.STRIKE,\n                  })\n                );\n              }}\n            >\n              New Martial Strike\n            </Button>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={6}\n            sm={3}\n            md={6}\n            lg={3}\n            justifyContent=\"center\"\n          >\n            <Button\n              size=\"small\"\n              fullWidth\n              variant=\"outlined\"\n              onClick={() => {\n                ReactGA.event(\"select_content\", {\n                  content_type: \"new-activity\",\n                  item_id: \"save-activity\",\n                });\n                dispatch(\n                  emptyActivityPathCreated({\n                    routineId,\n                    activityType: activityTypes.SAVE,\n                  })\n                );\n              }}\n            >\n              New Caster Save\n            </Button>\n          </Grid>\n        </Grid>\n        {/* <Button\n        variant=\"outlined\"\n        onClick={() =>\n          dispatch(activityPathCreated({ routineId, isStrike: false }))\n        }\n      >\n        + Save\n      </Button> */}\n        {/* <EffectInput /> */}\n        {/* </div> */}\n      </Paper>\n      {displayAllRoutines\n        ? apIds.map((apId) => <ActivityPath key={apId} id={apId} level={0} />)\n        : \"\"}\n    </React.Fragment>\n  );\n}\n\n// const NameInput = ({ id, name: baseName }: { id: number; name: string }) => {\n//   const dispatch = useDispatch();\n//   let [name, setName] = useState(baseName);\n//   useEffect(() => setName(baseName), [baseName]);\n//   // const name = useSelector((state) => selectRoutineById(state, id)).name;\n\n//   return (\n//     <React.Fragment>\n//       <label htmlFor=\"routineName\">Routine Name:</label>\n//       <input\n//         id=\"routineName\"\n//         type=\"text\"\n//         placeholder=\"Enter routine name\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//         onBlur={() => dispatch(routineUpdated({ id, changes: { name } }))}\n//       />\n//     </React.Fragment>\n//   );\n// };\n// const DescriptionInput = ({\n//   id,\n//   description: baseDescription,\n// }: {\n//   id: number;\n//   description: string;\n// }) => {\n//   const dispatch = useDispatch();\n//   const [description, setDescription] = useState(baseDescription);\n//   useEffect(() => setDescription(baseDescription), [baseDescription]);\n\n//   return (\n//     <div>\n//       <textarea\n//         className=\"routineDescription\"\n//         id=\"routineDescription\"\n//         placeholder=\"Enter routine description\"\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         onBlur={() =>\n//           dispatch(routineUpdated({ id, changes: { description } }))\n//         }\n//       />\n//     </div>\n//   );\n// };\n\nexport default SelectedRoutine;\n","import {\n  Chip,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  FormControl,\n  Grid,\n  Button,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\n\nimport {\n  routineCreated,\n  routineRemoved,\n  routineUpdated,\n  selectAllRoutines,\n  selectSelectedRoutine,\n  setRoutine,\n} from \"./RoutineSlice/routineSlice\";\n\nconst Routines = () => {\n  const routines = useAppSelector(selectAllRoutines);\n  const selectedRoutine = useAppSelector(selectSelectedRoutine);\n  const dispatch = useAppDispatch();\n\n  const routineOptions: JSX.Element[] = [];\n  const routineDisplays: JSX.Element[] = [];\n  routines.forEach((routine) => {\n    routineOptions.push(\n      <MenuItem value={routine.id} key={routine.id}>\n        {routine.name}\n      </MenuItem>\n    );\n    routineDisplays.push(\n      <Box component=\"li\" key={routine.id} sx={{ margin: 0.5, maxWidth: 1 }}>\n        <Chip\n          label={routine.name}\n          variant={routine.display ? \"filled\" : \"outlined\"}\n          size=\"small\"\n          color=\"secondary\"\n          onClick={() => {\n            dispatch(\n              routineUpdated({\n                id: routine.id,\n                changes: { display: !routine.display },\n              })\n            );\n            dispatch(setRoutine(routine.id));\n          }}\n          onDelete={() => dispatch(routineRemoved(routine.id))}\n          sx={{ maxWidth: 1 }}\n        />\n      </Box>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Paper\n        variant=\"outlined\"\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          listStyle: \"none\",\n          p: 0.5,\n          my: 2,\n        }}\n        component=\"ul\"\n      >\n        {routineDisplays}\n      </Paper>\n      <Paper sx={{ my: 2, p: 1 }}>\n        <Grid container spacing={1}>\n          {selectedRoutine !== undefined ? (\n            <Grid item xs={12} sm={6} md={12} lg={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"select-routine-label\">\n                  Select Routine\n                </InputLabel>\n                <Select\n                  labelId=\"select-routine-label\"\n                  id=\"select-routine\"\n                  value={selectedRoutine}\n                  label=\"Select Routine\"\n                  onChange={(e) => dispatch(setRoutine(e.target.value))}\n                >\n                  {routineOptions}\n                </Select>\n              </FormControl>\n            </Grid>\n          ) : (\n            \"\"\n          )}\n          <Grid\n            item\n            container\n            xs={6}\n            sm={3}\n            md={6}\n            lg={3}\n            justifyContent=\"center\"\n          >\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                dispatch(routineCreated({ copy: false }));\n              }}\n            >\n              Create New Routine\n            </Button>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={6}\n            sm={3}\n            md={6}\n            lg={3}\n            justifyContent=\"center\"\n          >\n            <Button\n              variant=\"outlined\"\n              onClick={() => dispatch(routineCreated({ copy: true }))}\n            >\n              Copy Selected Routine\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </React.Fragment>\n  );\n};\n\nexport default Routines;\n","import { Button, Grid, Paper, TextField } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"../App/hooks\";\n// import { exampleRoutines } from \"../Model/exampleRoutines\";\nimport { importStates } from \"../Model/types\";\nimport {\n  importRoutine,\n  selectImportState,\n  selectSelectedRoutineObject,\n} from \"../Routines/RoutineSlice/routineSlice\";\n// import { useSelector } from \"react-redux\";\n\n/* TODO: \n  Convert to mui\n  Add save routines button\n  Add load example routines button\n*/\nconst ImportExport = () => {\n  const routine = useAppSelector(selectSelectedRoutineObject);\n  const importState = useAppSelector(selectImportState);\n  const [messageSeen, setMessageSeen] = useState(false);\n  const [textValue, setTextValue] = useState(\"\");\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!messageSeen) {\n      if (importState === importStates.Failure) {\n        setTextValue(\"Import failed\");\n        setMessageSeen(true);\n      } else if (importState === importStates.Successful) {\n        setTextValue(\"Import successful\");\n        setMessageSeen(true);\n      }\n    }\n  }, [importState, messageSeen]);\n\n  const tryToAddRoutine = () => {\n    dispatch(importRoutine(textValue));\n    setMessageSeen(false);\n  };\n  const paste = () => {\n    setTextValue(JSON.stringify(routine));\n  };\n\n  //   const saveRoutines = () => {try {\n  //       const serialState = JSON.stringify(state);\n  //       localStorage.setItem('appState', serialState);\n  //     } catch(err) {\n  //         console.log(err);\n  //     }\n  // };\n  // const loadSavedRoutines = () => {};\n  // const addExampleRoutines = () => {\n  //   for (let r of exampleRoutines) {\n  //     dispatch(importRoutine(r));\n  //   }\n  // };\n  const copy = () => {\n    if (navigator.clipboard !== undefined) {\n      // textAreaRef.current.select();\n      // textAreaRef!.current.setSelectionRange(0, 99999); /* For mobile devices */\n      navigator.clipboard.writeText(textValue);\n      setTextValue(\"Copied\");\n      // document.execCommand(\"copy\");\n    }\n  };\n  return (\n    <Paper sx={{ p: 1 }}>\n      <Grid container>\n        <Grid item>\n          <Button onClick={tryToAddRoutine}>Import</Button>\n        </Grid>\n        <Grid item>\n          <Button onClick={paste}>Export</Button>\n        </Grid>\n        <Grid item>\n          <Button onClick={copy}>Copy</Button>\n        </Grid>\n        {/* <Grid item>\n          <Button onClick={saveRoutines}>Save Routines</Button>\n        </Grid> */}\n        {/* <Grid item>\n          <Button onClick={loadSavedRoutines}>Load Saved Routines</Button>\n        </Grid> */}\n        {/* <Grid item>\n          <Button onClick={addExampleRoutines}>Add example Routines</Button>\n        </Grid> */}\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            multiline\n            maxRows={5}\n            label=\"Routine code\"\n            placeholder=\"Enter routine code here to import.\"\n            value={textValue}\n            onChange={(e) => setTextValue(e.target.value)}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default ImportExport;\n","import React, { useState } from \"react\";\n\nimport { useAppDispatch } from \"../../App/hooks\";\nimport {\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  Select,\n  FormControl,\n  InputLabel,\n  Chip,\n  FormControlLabel,\n  Switch,\n  Slider,\n  Button,\n  Stack,\n  FormLabel,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\nimport { diceSizeOptions, makeOptions } from \"../../Model/options\";\nimport {\n  DieTrend,\n  dieTrends,\n  ItemTrend,\n  itemTrends,\n  ProfTrend,\n  profTrends,\n  StatTrend,\n  statTrends,\n} from \"../../Model/types\";\nimport { activityPathCreated } from \"../RoutineSlice/routineSlice\";\nimport {\n  activityTypes,\n  cantrips,\n  strikeActivities,\n  classes,\n  critSpecs,\n  runeTrends,\n  StrikeInfo,\n  weaponTraits,\n  classOptions,\n  skillProfTrends,\n  skillActivities,\n  SkillInfo,\n  CantripInfo,\n  spells,\n  SpellInfo,\n  spellProfTrends,\n  attackSpells,\n  WeaponInfo,\n  impulses,\n  impulseProfTrends,\n  ImpulseInfo,\n  blastTraits,\n} from \"../../Model/newActivityInfo\";\nimport { TooltipSelect } from \"../../TooltipSelect\";\nimport ReactGA from \"react-ga4\";\nReactGA.initialize(\"G-JR2YK097BG\");\n\n/*\n  get activity type: strike, skill, cantrip, spell\n\n  if type is strike \n    choose class\n    choose activity\n    attak score, damage score, cantrip score for ea/magus\n    choose weapon die and traits\n    choose number of attacks\n\n*/\nexport default function NewActivity({\n  routineId,\n  parentId,\n}: {\n  routineId?: number;\n  parentId?: number;\n}): JSX.Element {\n  const [activityType, setActivityType] = useState<string>(\n    activityTypes.Strike\n  );\n\n  return (\n    <Paper sx={{ my: 2, p: 1 }}>\n      {/* <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ m: 2, p: 2 }}>\n        <Grid item xs=\"auto\">\n          <Typography>Enter activity information</Typography>\n        </Grid> */}\n      {/* <Grid item xs=\"auto\"> */}\n      <FormControl fullWidth sx={{ my: 2, p: 1 }}>\n        <InputLabel>Activity Type</InputLabel>\n        <Select\n          value={activityType}\n          label=\"Activity Type\"\n          onChange={(e) => {\n            setActivityType(e.target.value);\n          }}\n        >\n          {makeOptions(activityTypes)}\n        </Select>\n      </FormControl>\n      {/* </Grid> */}\n      {/* <Grid item> */}\n      {activityTypes.Strike === activityType ? (\n        <StrikeSelection />\n      ) : activityTypes.Skill === activityType ? (\n        <SkillSelection />\n      ) : activityTypes.Cantrip === activityType ? (\n        <CantripSelection />\n      ) : activityTypes.Spell === activityType ? (\n        <SpellSelection />\n      ) : activityTypes.Impulse === activityType ? (\n        <ImpulseSelection />\n      ) : (\n        \"\"\n      )}\n      {/* </Grid> */}\n      {/* </Grid> */}\n    </Paper>\n  );\n}\n\nfunction StrikeSelection() {\n  const [strikeInfo, setStrikeInfo] = useState<StrikeInfo>({\n    cClass: classes[6],\n    classOption: \"\",\n    activity: \"Strike\",\n    spell: attackSpells[0],\n    attackScore: statTrends.AS18a,\n    damageScore: statTrends.AS18a,\n    cantripScore: statTrends.AS16pp,\n\n    numPrevStrikes: 0,\n    numStrikes: 1,\n    twf: false,\n    isStrikeSecondaryWeapon: [false],\n    previousHits: 0,\n\n    weapon1: {\n      dieSize: 8,\n      traits: Object.fromEntries(weaponTraits.map((trait) => [trait, false])),\n      deadlySize: 8,\n      fatalSize: 10,\n      critSpec: false,\n      critSpecLevel: 5,\n      critSpecType: critSpecs[0],\n      runes: dieTrends.RUNE2,\n\n      numPrevStrikes: 0,\n    },\n    weapon2: {\n      dieSize: 8,\n      traits: Object.fromEntries(weaponTraits.map((trait) => [trait, false])),\n      deadlySize: 8,\n      fatalSize: 10,\n      critSpec: false,\n      critSpecLevel: 5,\n      critSpecType: critSpecs[0],\n      runes: dieTrends.RUNE2,\n\n      numPrevStrikes: 0,\n    },\n  });\n  // const [cClass, setCClass] = useState<typeof classes[number]>(classes[6]);\n  // const [classOption, setClassOption] = useState<string>(\"\");\n  // const [activity, setActivity] =\n  //   useState<typeof strikeActivities[number]>(\"Strike\");\n  // const [spell, setSpell] = useState<typeof attackSpells[number]>(\n  //   attackSpells[0]\n  // );\n  // const [attackScore, setAttackScore] = useState<StatTrend>(statTrends.AS18a);\n  // const [damageScore, setDamageScore] = useState<StatTrend>(statTrends.AS18a);\n  // const [cantripScore, setCantripScore] = useState<StatTrend>(\n  //   statTrends.AS16pp\n  // );\n\n  // const [numStrikes, setNumStrikes] = useState<number>(1);\n  // const [numPrevStrikes, setNumPrevStrikes] = useState<number>(0);\n  // const [twf, setTwf] = useState<boolean>(false);\n  // const [isStrikeSecondaryWeapon, setIsStrikeSecondaryWeapon] = useState<\n  //   boolean[]\n  // >([false]);\n  // const [previousHits, setPreviousHits] = useState<number>(0);\n\n  // const [dieSize, setDieSize] = useState<number>(diceSizes[8]);\n  // const [traits, setTraits] = useState(\n  //   // Array.from(weaponTraits, () => false)\n  //   Object.fromEntries(weaponTraits.map((trait) => [trait, false]))\n  // );\n  // const [deadlySize, setDeadlySize] = useState<number>(diceSizes[8]);\n  // const [fatalSize, setFatalSize] = useState<number>(diceSizes[10]);\n  // const [critSpec, setCritSpec] = useState<boolean>(false);\n  // const [critSpecLevel, setCritSpecLevel] = useState<number>(5);\n  // const [critSpecType, setCritSpecType] = useState<string>(critSpecs[0]);\n  // const [runes, setRunes] = useState<DieTrend>(dieTrends.RUNE2);\n\n  // const [dieSize2, setDieSize2] = useState<number>(diceSizes[8]);\n  // const [traits2, setTraits2] = useState(\n  //   // Array.from(weaponTraits, () => false)\n  //   Object.fromEntries(weaponTraits.map((trait) => [trait, false]))\n  // );\n  // const [deadlySize2, setDeadlySize2] = useState<number>(diceSizes[8]);\n  // const [fatalSize2, setFatalSize2] = useState<number>(diceSizes[10]);\n  // const [critSpec2, setCritSpec2] = useState<boolean>(false);\n  // const [critSpecLevel2, setCritSpecLevel2] = useState<number>(5);\n  // const [critSpecType2, setCritSpecType2] = useState<string>(critSpecs[0]);\n  // const [runes2, setRunes2] = useState<DieTrend>(dieTrends.RUNE2);\n\n  // const strikeInfo: StrikeInfo = {\n  //   cClass,\n  //   classOption,\n  //   activity,\n  //   spell,\n  //   attackScore,\n  //   damageScore,\n  //   cantripScore,\n\n  //   numPrevStrikes,\n  //   numStrikes,\n  //   twf,\n  //   isStrikeSecondaryWeapon,\n  //   previousHits,\n\n  //   dieSize,\n  //   traits,\n  //   deadlySize,\n  //   fatalSize,\n  //   critSpec,\n  //   critSpecLevel,\n  //   critSpecType,\n  //   runes,\n\n  //   dieSize2,\n  //   traits2,\n  //   deadlySize2,\n  //   fatalSize2,\n  //   critSpec2,\n  //   critSpecLevel2,\n  //   critSpecType2,\n  //   runes2,\n  // };\n\n  const dispatch = useAppDispatch();\n\n  const setClass = (className: (typeof classes)[number]) => {\n    const newStrikeInfo = { ...strikeInfo };\n    newStrikeInfo.cClass = className;\n    if (classOptions[className].length > 0) {\n      newStrikeInfo.classOption = classOptions[className][0];\n    } else {\n      newStrikeInfo.classOption = \"\";\n    }\n    setStrikeInfo(newStrikeInfo);\n  };\n  const showClassOptions = (): boolean => {\n    return classOptions[strikeInfo.cClass].length > 0;\n  };\n  const showCantrip = (): boolean => {\n    if (strikeInfo.activity === \"Spell Strike\") {\n      return true;\n    }\n    return false;\n  };\n  const showCantripScore = (): boolean => {\n    if (strikeInfo.cClass === \"Inventor\") {\n      if (\n        strikeInfo.classOption === \"Overdrive Success\" ||\n        strikeInfo.classOption === \"Overdrive Critical\"\n      ) {\n        return true;\n      }\n    }\n    if (strikeInfo.activity === \"Spell Strike\") {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        spacing={{ xs: 1, sm: 2 }}\n        sx={{ py: 2 }}\n        id=\"create-new-activity\"\n      >\n        <Grid item>\n          <TooltipSelect\n            title=\"Which class's proficiency and weapon specialization to use.\"\n            value={strikeInfo.cClass}\n            label=\"Class\"\n            onChange={(e) => {\n              setClass(e.target.value as (typeof classes)[number]);\n            }}\n          >\n            {makeOptions(classes)}\n          </TooltipSelect>\n        </Grid>\n\n        {showClassOptions() ? (\n          <Grid item>\n            <TooltipSelect\n              title=\"Which abilities are applied\"\n              value={strikeInfo.classOption}\n              label=\"Class Option\"\n              onChange={(e) => {\n                setStrikeInfo({ ...strikeInfo, classOption: e.target.value });\n              }}\n            >\n              {makeOptions(classOptions[strikeInfo.cClass])}\n            </TooltipSelect>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n\n        <Grid item>\n          <TooltipSelect\n            title=\"Which activity to use\"\n            value={strikeInfo.activity}\n            label=\"Activity\"\n            onChange={(e) => {\n              const newStrikeInfo = { ...strikeInfo };\n              newStrikeInfo.activity = e.target\n                .value as (typeof strikeActivities)[number];\n              if (e.target.value === \"Double Slice\") {\n                newStrikeInfo.numStrikes = 2;\n                newStrikeInfo.isStrikeSecondaryWeapon = [false, true];\n              }\n              setStrikeInfo(newStrikeInfo);\n            }}\n          >\n            {makeOptions(strikeActivities)}\n          </TooltipSelect>\n        </Grid>\n        {showCantrip() ? (\n          <Grid item>\n            <TooltipSelect\n              title=\"Which spell to add to the strike\"\n              value={strikeInfo.spell}\n              label=\"Spell\"\n              onChange={(e) => {\n                setStrikeInfo({\n                  ...strikeInfo,\n                  spell: e.target.value as (typeof attackSpells)[number],\n                });\n              }}\n            >\n              {makeOptions(attackSpells)}\n            </TooltipSelect>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        <Grid item>\n          <TooltipSelect\n            title=\"What ability score bonus progression to add to the attack roll.\"\n            value={strikeInfo.attackScore}\n            label=\"Attack Abilitiy Score\"\n            onChange={(e) => {\n              setStrikeInfo({\n                ...strikeInfo,\n                attackScore: e.target.value as StatTrend,\n              });\n            }}\n          >\n            {makeOptions(statTrends)}\n          </TooltipSelect>\n        </Grid>\n        <Grid item>\n          <TooltipSelect\n            title=\"What ability score bonus progression to add to the damage roll.\n            Not applied to ranged attacks.\"\n            value={strikeInfo.damageScore}\n            label=\"Damage Abilitiy Score\"\n            onChange={(e) => {\n              setStrikeInfo({\n                ...strikeInfo,\n                damageScore: e.target.value as StatTrend,\n              });\n            }}\n          >\n            {makeOptions(statTrends)}\n          </TooltipSelect>\n        </Grid>\n        {showCantripScore() ? (\n          <Grid item>\n            <TooltipSelect\n              title=\"What ability score bonus progression to add to the damage roll.\"\n              value={strikeInfo.cantripScore}\n              label=\"Mental Abilitiy Score\"\n              onChange={(e) => {\n                setStrikeInfo({\n                  ...strikeInfo,\n                  cantripScore: e.target.value as StatTrend,\n                });\n              }}\n            >\n              {makeOptions(statTrends)}\n            </TooltipSelect>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n\n      <WeaponInput\n        weapon={strikeInfo.weapon1}\n        setWeapon={(weapon) =>\n          setStrikeInfo({ ...strikeInfo, weapon1: weapon })\n        }\n      />\n\n      {/* <Grid\n        container\n        columnSpacing={{ xs: 1, sm: 2 }}\n        sx={{ my: 2 }}\n        alignItems=\"center\"\n      > */}\n      {/* <Grid item xs=\"auto\"> */}\n      <FormControlLabel\n        control={\n          <Switch\n            checked={strikeInfo.twf}\n            onChange={(e) =>\n              setStrikeInfo({ ...strikeInfo, twf: e.target.checked })\n            }\n          />\n        }\n        label=\"Use Two Weapons\"\n        sx={{ py: 2 }}\n      />\n      {/* </Grid> */}\n      {strikeInfo.twf ? (\n        <WeaponInput\n          weapon={strikeInfo.weapon2}\n          setWeapon={(weapon) =>\n            setStrikeInfo({ ...strikeInfo, weapon2: weapon })\n          }\n        />\n      ) : (\n        \"\"\n      )}\n      {/* </Grid> */}\n\n      <Grid container spacing={{ xs: 1, sm: 2 }} sx={{ py: 2 }}>\n        <Grid item xs=\"auto\">\n          <TooltipSelect\n            title=\"Select the number of previous attacks.\"\n            value={strikeInfo.numPrevStrikes}\n            label=\"Previous Attacks\"\n            onChange={(e) => {\n              setStrikeInfo({\n                ...strikeInfo,\n                numPrevStrikes: Number(e.target.value),\n              });\n            }}\n          >\n            {makeOptions([0, 1, 2])}\n          </TooltipSelect>\n        </Grid>\n        {strikeInfo.activity !== \"Double Slice\" ? (\n          <Grid item xs=\"auto\">\n            <TooltipSelect\n              title=\"Select the number of attacks to make with the selected options.\"\n              value={strikeInfo.numStrikes}\n              label=\"Number of Strikes\"\n              onChange={(e) => {\n                const newNumStrikes = Number(e.target.value);\n                const newStrikeInfo = { ...strikeInfo };\n                const isStrikeSecondaryWeapon = [];\n                for (let i = 0; i < newNumStrikes; i++) {\n                  if (i < strikeInfo.numStrikes) {\n                    isStrikeSecondaryWeapon.push(\n                      strikeInfo.isStrikeSecondaryWeapon[i]\n                    );\n                  } else {\n                    isStrikeSecondaryWeapon.push(false);\n                  }\n                }\n                newStrikeInfo.numStrikes = newNumStrikes;\n                newStrikeInfo.isStrikeSecondaryWeapon = isStrikeSecondaryWeapon;\n                setStrikeInfo(newStrikeInfo);\n              }}\n            >\n              {makeOptions([1, 2, 3, 4, 5, 6])}\n            </TooltipSelect>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {strikeInfo.cClass === \"Ranger\" &&\n        strikeInfo.classOption === \"Precision Edge\" ? (\n          <Grid item xs=\"auto\">\n            <TooltipSelect\n              title=\"Select the number of previous hits.\"\n              value={strikeInfo.previousHits}\n              label=\"Previous Hits\"\n              onChange={(e) => {\n                setStrikeInfo({\n                  ...strikeInfo,\n                  previousHits: Number(e.target.value),\n                });\n              }}\n            >\n              {makeOptions([0, 1, 2, 3])}\n            </TooltipSelect>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n\n        {/* Add Strike button */}\n        <Grid item xs=\"auto\">\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              ReactGA.event(\"select_content\", {\n                content_type: \"create-new-strike\",\n                item_id: strikeInfo.cClass,\n              });\n              dispatch(activityPathCreated({ strikeInfo }));\n            }}\n          >\n            Create New Activity\n          </Button>\n        </Grid>\n      </Grid>\n\n      {strikeInfo.twf && strikeInfo.activity !== \"Double Slice\" ? (\n        <Stack spacing={{ xs: 1, sm: 2 }}>\n          {strikeInfo.isStrikeSecondaryWeapon.map((isSecondary, index) => (\n            <FormControl component=\"fieldset\" key={index}>\n              <FormLabel component=\"legend\">Strike {index + 1}</FormLabel>\n              <RadioGroup\n                row\n                aria-label={\"strike-\" + (index + 1)}\n                value={isSecondary ? 2 : 1}\n                onClick={(e) => {\n                  const newStrikeInfo = { ...strikeInfo };\n                  const newIsSecondary =\n                    strikeInfo.isStrikeSecondaryWeapon.slice();\n                  newIsSecondary[index] =\n                    (e.target as HTMLInputElement).value === \"2\";\n                  newStrikeInfo.isStrikeSecondaryWeapon = newIsSecondary;\n                  setStrikeInfo(newStrikeInfo);\n                }}\n              >\n                <FormControlLabel\n                  value={1}\n                  control={<Radio />}\n                  label=\"Weapon 1\"\n                />\n                <FormControlLabel\n                  value={2}\n                  control={<Radio />}\n                  label=\"Weapon 2\"\n                />\n              </RadioGroup>\n            </FormControl>\n          ))}\n        </Stack>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n}\n\nfunction WeaponInput({\n  weapon,\n  setWeapon,\n  isElementalBlast = false,\n}: {\n  weapon: WeaponInfo;\n  setWeapon: (weapon: WeaponInfo) => void;\n  isElementalBlast?: boolean;\n}) {\n  return (\n    <Grid\n      container\n      columnSpacing={{ xs: 1, sm: 2 }}\n      sx={{ py: 2 }}\n      alignItems=\"center\"\n    >\n      <Grid item xs=\"auto\">\n        <Typography variant=\"h6\">{isElementalBlast ? \"Blast details\" : \"Weapon\"}</Typography>\n      </Grid>\n\n      <Grid item>\n        <TooltipSelect\n          title=\"Weapon damage die\"\n          value={weapon.dieSize}\n          label=\"Damage Die\"\n          onChange={(e) => {\n            setWeapon({ ...weapon, dieSize: Number(e.target.value) });\n          }}\n        >\n          {diceSizeOptions}\n        </TooltipSelect>\n      </Grid>\n\n      {!isElementalBlast ? (\n      <Grid item>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={weapon.critSpec}\n              onChange={(e) =>\n                setWeapon({ ...weapon, critSpec: e.target.checked })\n              }\n            />\n          }\n          label=\"Critical Specialization\"\n        />\n      </Grid>\n      ) : null}\n      {/* crit spec level slider */}\n      {weapon.critSpec ? (\n        <Grid item>\n          <Typography align=\"center\" id=\"crit-spec-level\">\n            At Level {weapon.critSpecLevel}\n          </Typography>\n          <Slider\n            aria-labelledby=\"crit-spec-level\"\n            value={weapon.critSpecLevel}\n            min={1}\n            max={20}\n            marks\n            onChange={(e, nv) =>\n              setWeapon({ ...weapon, critSpecLevel: Number(nv) })\n            }\n          />\n        </Grid>\n      ) : (\n        \"\"\n      )}\n      {weapon.critSpec ? (\n        <Grid item>\n          <TooltipSelect\n            title=\"What weapon group's effect to apply on a critical hit.\"\n            value={weapon.critSpecType}\n            label=\"Weapon Group\"\n            onChange={(e) =>\n              setWeapon({ ...weapon, critSpecType: e.target.value })\n            }\n          >\n            {makeOptions(critSpecs)}\n          </TooltipSelect>\n        </Grid>\n      ) : (\n        \"\"\n      )}\n      {/* Weapon Traits */}\n      <Grid item>\n        <Paper\n          variant=\"outlined\"\n          sx={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            listStyle: \"none\",\n            p: 0.5,\n            my: 1,\n          }}\n          component=\"ul\"\n        >\n          {(isElementalBlast ? blastTraits : weaponTraits).map((traitName, index) => (\n            <Box component=\"li\" key={traitName} sx={{ margin: 0.5 }}>\n              <Chip\n                label={traitName}\n                size=\"small\"\n                color=\"secondary\"\n                variant={weapon.traits[traitName] ? \"filled\" : \"outlined\"}\n                onClick={() => {\n                  const newTraits = {\n                    ...weapon.traits,\n                    [traitName]: !weapon.traits[traitName],\n                  };\n                  // newTraits[traitName] = !traits[traitName];\n                  setWeapon({ ...weapon, traits: newTraits });\n                }}\n              />\n            </Box>\n          ))}\n        </Paper>\n      </Grid>\n      {weapon.traits[\"deadly\"] ? (\n        <Grid item>\n          <TooltipSelect\n            title=\"Deadly damage die.\"\n            value={weapon.deadlySize}\n            label=\"Deadly Die\"\n            onChange={(e) => {\n              setWeapon({ ...weapon, deadlySize: Number(e.target.value) });\n            }}\n          >\n            {diceSizeOptions}\n          </TooltipSelect>\n        </Grid>\n      ) : (\n        \"\"\n      )}\n      {weapon.traits[\"fatal\"] ? (\n        <Grid item>\n          <TooltipSelect\n            title=\"Fatal damage die.\"\n            value={weapon.fatalSize}\n            label=\"Fatal Die\"\n            onChange={(e) => {\n              setWeapon({ ...weapon, fatalSize: Number(e.target.value) });\n            }}\n          >\n            {diceSizeOptions}\n          </TooltipSelect>\n        </Grid>\n      ) : (\n        \"\"\n      )}\n\n      {!isElementalBlast ? (\n        <Grid item>\n        <TooltipSelect\n          title=\"What levels the damages from property runes such as 'flaming' are applied.\"\n          value={weapon.runes}\n          label=\"Damage Rune Levels\"\n          onChange={(e) => {\n            setWeapon({ ...weapon, runes: e.target.value as DieTrend });\n          }}\n        >\n          {makeOptions(runeTrends)}\n        </TooltipSelect>\n      </Grid>\n      ) : (\n        null\n      )}\n      \n    </Grid>\n  );\n}\n\nfunction SkillSelection() {\n  const [proficiency, setProficiency] = useState<ProfTrend>(\n    profTrends.MAXSKILL\n  );\n  const [abilityScore, setAbilityScore] = useState<StatTrend>(statTrends.AS18a);\n  const [itemBonus, setItemBonus] = useState<ItemTrend>(itemTrends.SKILL);\n  const [skillActivity, setSkillActivity] = useState<\n    (typeof skillActivities)[number]\n  >(skillActivities[0]);\n\n  const skillInfo: SkillInfo = {\n    proficiency,\n    abilityScore,\n    itemBonus,\n    skillActivity,\n  };\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which proficiency progression to apply.\"\n          label=\"Proficiency\"\n          value={proficiency}\n          onChange={(e) => {\n            setProficiency(e.target.value as ProfTrend);\n          }}\n        >\n          {makeOptions(skillProfTrends)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which ability score progression to apply.\"\n          label=\"Ability Score\"\n          value={abilityScore}\n          onChange={(e) => {\n            setAbilityScore(e.target.value as StatTrend);\n          }}\n        >\n          {makeOptions(statTrends)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which item bonus progression to apply.\"\n          label=\"Item Bonus\"\n          value={itemBonus}\n          onChange={(e) => {\n            setItemBonus(e.target.value as ItemTrend);\n          }}\n        >\n          {makeOptions(itemTrends)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which skill activity to use.\"\n          label=\"Activity\"\n          value={skillActivity}\n          onChange={(e) => {\n            setSkillActivity(\n              e.target.value as (typeof skillActivities)[number]\n            );\n          }}\n        >\n          {makeOptions(skillActivities)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            ReactGA.event(\"select_content\", {\n              content_type: \"create-new-skill\",\n              item_id: skillActivity,\n            });\n            dispatch(activityPathCreated({ skillInfo }));\n          }}\n        >\n          Create New Activity\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction CantripSelection() {\n  const [proficiency, setProficiency] = useState<ProfTrend>(\n    profTrends.CASTERSPELL\n  );\n  const [abilityScore, setAbilityScore] = useState<StatTrend>(statTrends.AS18a);\n  const [cantrip, setCantrip] = useState<(typeof cantrips)[number]>(\n    cantrips[0]\n  );\n\n  const cantripInfo: CantripInfo = {\n    proficiency,\n    abilityScore,\n    cantrip,\n  };\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which proficiency progression to apply.\"\n          label=\"Proficiency\"\n          value={proficiency}\n          onChange={(e) => {\n            setProficiency(e.target.value as ProfTrend);\n          }}\n        >\n          {makeOptions(spellProfTrends)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which ability score progression to apply.\"\n          label=\"Ability Score\"\n          value={abilityScore}\n          onChange={(e) => {\n            setAbilityScore(e.target.value as StatTrend);\n          }}\n        >\n          {makeOptions(statTrends)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which cantrip to use.\"\n          label=\"Cantrip\"\n          value={cantrip}\n          onChange={(e) => {\n            setCantrip(e.target.value as (typeof cantrips)[number]);\n          }}\n        >\n          {makeOptions(cantrips)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            ReactGA.event(\"select_content\", {\n              content_type: \"create-new-cantrip\",\n              item_id: cantrip,\n            });\n            dispatch(activityPathCreated({ cantripInfo }));\n          }}\n        >\n          Create New Activity\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction SpellSelection() {\n  const [proficiency, setProficiency] = useState<ProfTrend>(\n    profTrends.CASTERSPELL\n  );\n  const [abilityScore, setAbilityScore] = useState<StatTrend>(statTrends.AS18a);\n  const [spell, setSpell] = useState<(typeof spells)[number]>(spells[0]);\n\n  const spellInfo: SpellInfo = {\n    proficiency,\n    abilityScore,\n    spell,\n  };\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Grid container spacing={{ xs: 1, sm: 2 }}>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which proficiency progression to apply.\"\n          label=\"Proficiency\"\n          value={proficiency}\n          onChange={(e) => {\n            setProficiency(e.target.value as ProfTrend);\n          }}\n        >\n          {makeOptions(spellProfTrends)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which ability score progression to apply.\"\n          label=\"Ability Score\"\n          value={abilityScore}\n          onChange={(e) => {\n            setAbilityScore(e.target.value as StatTrend);\n          }}\n        >\n          {makeOptions(statTrends)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <TooltipSelect\n          title=\"Select which spell to use.\"\n          label=\"Spell\"\n          value={spell}\n          onChange={(e) => {\n            setSpell(e.target.value as (typeof spells)[number]);\n          }}\n        >\n          {makeOptions(spells)}\n        </TooltipSelect>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            ReactGA.event(\"select_content\", {\n              content_type: \"create-new-spell\",\n              item_id: spell,\n            });\n            dispatch(activityPathCreated({ spellInfo }));\n          }}\n        >\n          Create New Activity\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction ImpulseSelection() {\n  const [proficiency, setProficiency] = useState<ProfTrend>(\n    profTrends.CASTERSPELL\n  );\n  const [abilityScore, setAbilityScore] = useState<StatTrend>(statTrends.AS18a);\n  const [impulse, setImpulse] = useState<(typeof impulses)[number]>(\n    impulses[0]\n  );\n\n  // for kinetic blast\n  const [isTwoAction, setIsTwoAction] = useState<boolean>(false);\n  const [strScore, setStrScore] = useState<StatTrend>(statTrends.AS16pp);\n  const [weapon, setWeapon] = useState({\n    dieSize: 8,\n    traits: Object.fromEntries(weaponTraits.map((trait) => [trait, false])),\n    deadlySize: 8,\n    fatalSize: 10,\n    critSpec: false,\n    critSpecLevel: 5,\n    critSpecType: critSpecs[1] as string,\n    runes: dieTrends.NONE as DieTrend,\n\n    numPrevStrikes: 0,\n  });\n\n  const impulseInfo: ImpulseInfo = {\n    proficiency,\n    abilityScore,\n    impulse,\n    isTwoAction,\n    strScore,\n    weaponInfo: weapon,\n  };\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <Grid container spacing={{ xs: 1, sm: 2 }}>\n        <Grid item>\n          <TooltipSelect\n            title=\"Select which proficiency progression to apply.\"\n            label=\"Proficiency\"\n            value={proficiency}\n            onChange={(e) => {\n              setProficiency(e.target.value as ProfTrend);\n            }}\n          >\n            {makeOptions(impulseProfTrends)}\n          </TooltipSelect>\n        </Grid>\n        <Grid item>\n          <TooltipSelect\n            title=\"Select which ability score progression to apply.\"\n            label=\"Ability Score\"\n            value={abilityScore}\n            onChange={(e) => {\n              setAbilityScore(e.target.value as StatTrend);\n            }}\n          >\n            {makeOptions(statTrends)}\n          </TooltipSelect>\n        </Grid>\n        <Grid item>\n          <TooltipSelect\n            title=\"Select which impulse to use.\"\n            label=\"Impulse\"\n            value={impulse}\n            onChange={(e) => {\n              setImpulse(e.target.value as (typeof impulses)[number]);\n            }}\n          >\n            {makeOptions(impulses)}\n          </TooltipSelect>\n        </Grid>\n        {impulse === \"Elemental Blast\" ? (\n          <>\n          <Grid item>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={isTwoAction}\n                  onChange={(e) =>\n                    setIsTwoAction(e.target.checked)\n                  }\n                />\n              }\n              label=\"Is two action blast\"\n            />\n          </Grid>\n          <Grid item>\n            <TooltipSelect\n              title=\"Select which ability score progression to apply.\"\n              label=\"Strength Score\"\n              value={strScore}\n              onChange={(e) => {\n                setStrScore(e.target.value as StatTrend);\n              }}\n            >\n              {makeOptions(statTrends)}\n            </TooltipSelect>\n          </Grid>\n          </>\n        ) : null}\n      </Grid>\n\n      {impulse === \"Elemental Blast\" ? (\n        <WeaponInput weapon={weapon} setWeapon={setWeapon} isElementalBlast={true} />\n      ) : null}\n\n      <Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              ReactGA.event(\"select_content\", {\n                content_type: \"create-new-impulse\",\n                item_id: impulse,\n              });\n              dispatch(activityPathCreated({ impulseInfo }));\n            }}\n          >\n            Create New Activity\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport ReactGA from \"react-ga4\";\n\nimport Display from \"../Display/Display\";\nimport SelectedRoutine from \"../Routines/SelectedRoutine\";\nimport Routines from \"../Routines/Routines\";\nimport Export from \"../Sharing/Export\";\n\nimport \"./PF2App.css\";\n\nimport {\n  selectSelectedRoutine,\n  selectSelectedActivityPath,\n  selectCreateNewActivity,\n} from \"../Routines/RoutineSlice/routineSlice\";\nimport { Container, Grid, Box, Button } from \"@mui/material\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n// import Header from \"./Header\";\nimport { ActivityPath } from \"../Routines/Activity/ActivityPath\";\nimport NewActivity from \"../Routines/NewActivity/NewActivity\";\nimport { useAppSelector } from \"./hooks\";\n\n// Initialize google analytics\nReactGA.initialize(\"G-JR2YK097BG\");\n\nfunction PF2App() {\n  const isBigEnough = useMediaQuery((theme: any) => {\n    return theme.breakpoints.up(\"md\");\n  });\n\n  ReactGA.send(\"pageview\");\n\n  return (\n    <React.Fragment>\n      {/* <Header /> */}\n      <Container maxWidth=\"xl\">\n        {isBigEnough ? (\n          <Grid\n            container\n            columnSpacing={{ xs: 2, md: 2, lg: 3, xl: 4 }}\n            sx={{ height: \"100vh\" }}\n          >\n            <Grid\n              id=\"container\"\n              item\n              xs={12}\n              md={6}\n              sx={{ height: \"100%\", overflow: \"auto\" }}\n            >\n              <Controls />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={6}\n              sx={{ mt: 0, height: 1, overflow: \"hidden auto\" }}\n            >\n              <Display />\n            </Grid>\n          </Grid>\n        ) : (\n          <React.Fragment>\n            <Display />\n            <Controls />\n          </React.Fragment>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst Controls = () => {\n  const selectedRoutine = useAppSelector(selectSelectedRoutine);\n  const selectedActivityPath = useAppSelector(selectSelectedActivityPath);\n  const createNewActivity = useAppSelector(selectCreateNewActivity);\n\n  useEffect(() => {\n    if (createNewActivity) {\n      window.location.href = \"#create-new-activity\";\n      ReactGA.event(\"select_content\", {\n        content_type: \"new-activity\",\n        item_id: \"create-new-activity\",\n      });\n    }\n  }, [createNewActivity]);\n\n  return (\n    <Box sx={{}}>\n      <Routines />\n      {selectedRoutine !== undefined ? (\n        <SelectedRoutine routineId={selectedRoutine} />\n      ) : (\n        \"\"\n      )}\n      {selectedActivityPath !== undefined ? (\n        <ActivityPath id={selectedActivityPath} open={true} />\n      ) : createNewActivity ? (\n        <NewActivity />\n      ) : (\n        \"\"\n      )}\n      <Export />\n      <Grid\n        container\n        sx={{ mb: 2, mt: 0 }}\n        justifyContent=\"space-evenly\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <Donate />\n        </Grid>\n        <Grid item>\n          <Contact />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nconst Donate = () => {\n  return (\n    <Box\n      sx={{ height: 60, width: 217 }}\n      onClick={() =>\n        ReactGA.event(\"select_content\", {\n          content_type: \"buy-me-a-coffee\",\n        })\n      }\n    >\n      <a\n        href=\"https://www.buymeacoffee.com/bahalbach\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <img\n          src=\"https://cdn.buymeacoffee.com/buttons/v2/default-red.png\"\n          alt=\"Buy Me A Coffee\"\n          width=\"217px\"\n          height=\"60px\"\n        />\n      </a>\n    </Box>\n  );\n};\n\nconst Contact = () => {\n  return (\n    <Button\n      sx={{ height: 60, width: 217 }}\n      variant=\"contained\"\n      color=\"primary\"\n      href=\"mailto:bahalbach@gmail.com\"\n    >\n      Contact Me\n    </Button>\n  );\n};\n\nexport default PF2App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport routineReducer, {\n  importRoutine,\n  routineAdded,\n  setRoutine,\n} from \"../Routines/RoutineSlice/routineSlice\";\nimport targetReducer, { targetAdded } from \"../Display/targetSlice\";\nimport sharingReducer from \"../Display/sharingSlice\";\nimport weaknessReducer from \"../Display/weaknessSlice\";\nimport {\n  ACTrends,\n  graphTypes,\n  HPTrends,\n  SaveTrends,\n} from \"../Model/types\";\nimport { exampleRoutines } from \"../Model/exampleRoutines\";\n\nconst empty: { [key: number]: number } = {};\nfor (let i = 1; i <= 20; i++) {\n  empty[i] = 0;\n}\n\nconst makeStore = () => {\n  const store = configureStore({\n    reducer: {\n      routines: routineReducer,\n      weaknesses: weaknessReducer,\n      targets: targetReducer,\n      sharing: sharingReducer,\n    },\n  });\n\n  store.dispatch(\n    targetAdded({\n      id: 0,\n      name: \"AC: High, Saves: Moderate\",\n\n      levelDiff: 0,\n      persistentMultiplier: 2,\n\n      ACTrend: ACTrends.HIGH,\n      FortTrend: SaveTrends.MODERATE,\n      RefTrend: SaveTrends.MODERATE,\n      WillTrend: SaveTrends.MODERATE,\n      PerTrend: SaveTrends.MODERATE,\n      HPTrend: HPTrends.MODERATE,\n      percentHP: 100,\n\n      flatfooted: false,\n      percentSelectedRoutine: false,\n      weaknesses: [],\n\n      graphType: graphTypes.DISTRIBUTION,\n      routineLevel: 1,\n      targetLevel: 1,\n      overrideAC: 16,\n      overrideFort: 7,\n      overrideRef: 7,\n      overrideWill: 7,\n      overridePer: 7,\n      overrideHP: 20,\n      currentHP: 20,\n    })\n  );\n\n  // default damages and effects\n  try {\n    if (localStorage.getItem(\"routineState\") === null) {\n      // add in some example routines\n      store.dispatch(\n        routineAdded({\n          id: 0,\n          name: \"Baseline\",\n          display: true,\n          apIds: [],\n          levelDiff: 0,\n          description: \"No damage. Just so graphs display 0 with autoscalling.\",\n          startLevel: 1,\n          endLevel: 20,\n        })\n      );\n\n      for (let r of exampleRoutines) {\n        store.dispatch(importRoutine(r));\n      }\n\n      store.dispatch(setRoutine(2));\n      // set the first routine you see to be Fighter - 2 Strike - d12 Sword\n    }\n  } catch {\n    // ignore errors\n  }\n  return store;\n};\nexport { makeStore };\nconst store = makeStore();\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","const fighterGs2 = `{\"id\":101,\"name\":\"Fighter - 2 Strike - d12 Sword\",\"display\":false,\"apIds\":[{\"name\":\"Fighter - Strike - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1003},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1004}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1002}],\"apIds\":[{\"name\":\"Fighter - Strike - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"-5 (1x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1001},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1002}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1001}],\"apIds\":[],\"id\":1002,\"parentId\":1001}],\"id\":1001,\"routineId\":101}],\"levelDiff\":0,\"description\":\"2 Strike with class Fighter () after 0 previous strikes. Weapon is d12 Sword\",\"startLevel\":1,\"endLevel\":20}`;\nconst fighterPA = `{\"id\":102,\"name\":\"Fighter - 1 Power Attack - d12 Sword\",\"display\":false,\"apIds\":[{\"name\":\"Fighter - Power Attack - d12 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"17\":2,\"18\":3,\"19\":3,\"20\":3},\"diceSize\":12,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1005},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1006}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1003}],\"apIds\":[],\"id\":1003,\"routineId\":102}],\"levelDiff\":0,\"description\":\"1 Power Attack with class Fighter () after 0 previous strikes. Weapon is d12 Sword\",\"startLevel\":1,\"endLevel\":20}`;\nconst fighterDSpick = `{\"id\":103,\"name\":\"Fighter - Double Slice - d6 fatal d10 Pick | d4 agile fatal d8 Pick\",\"display\":false,\"apIds\":[{\"name\":\"Fighter - Double Slice - d6 fatal d10 Pick\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[],\"effects\":[],\"apIds\":[{\"name\":\"Fighter - Double Slice - d4 agile fatal d8 Pick\",\"type\":\"Strike\",\"condition\":\"On Crit\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":10,\"fatal\":true,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1007},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1008},{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":10,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1009},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":4,\"fatal\":true,\"fatalDie\":8,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1010},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1011},{\"damageCondition\":\"On Crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1012}],\"effects\":[],\"apIds\":[],\"id\":1005,\"parentId\":1004},{\"name\":\"Fighter - Double Slice - d4 agile fatal d8 Pick\",\"type\":\"Strike\",\"condition\":\"On Success\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1013},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1014},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":4,\"fatal\":true,\"fatalDie\":8,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1015},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1016},{\"damageCondition\":\"On Crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1017}],\"effects\":[],\"apIds\":[],\"id\":1006,\"parentId\":1004},{\"name\":\"Fighter - Double Slice - d4 agile fatal d8 Pick\",\"type\":\"Strike\",\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"profTrend\":\"Fighter Weapon (1, 5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":4,\"fatal\":true,\"fatalDie\":8,\"damageTrend\":[\"18 to 24 apex(17)\",\"Fighter Weapon Specialization\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1018},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1019},{\"damageCondition\":\"On Crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"None\",\"dieAdjustments\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":4,\"6\":4,\"7\":4,\"8\":4,\"9\":4,\"10\":4,\"11\":4,\"12\":6,\"13\":6,\"14\":6,\"15\":6,\"16\":6,\"17\":6,\"18\":6,\"19\":8,\"20\":8},\"id\":1020}],\"effects\":[],\"apIds\":[],\"id\":1007,\"parentId\":1004}],\"id\":1004,\"routineId\":103}],\"levelDiff\":0,\"description\":\"2 Double Slice with class Fighter () after 0 previous strikes. Weapon is d6 fatal d10 Pick. Weapon two is d4 agile fatal d8 Pick\",\"startLevel\":1,\"endLevel\":20}`;\nconst fireball = `{\"id\":2,\"name\":\"Fireball\",\"display\":false,\"apIds\":[{\"name\":\"Fireball\", \"id\":2,\"condition\":\"Always\",\"rollType\":\"Normal\",\"type\":\"Save\",\"profTrend\":\"Caster Spell (7, 15, 19)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"None\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"Ref\",\"targetInfoId\":0,\"damages\":[{\"id\":7,\"damageCondition\":\"Basic save\",\"dieTrend\":\"2 x Spell Level\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1}],\"effects\":[],\"apIds\":[]}],\"levelDiff\":0,\"description\":\"A 2d6 / spell level basic reflex save.\",\"startLevel\":1,\"endLevel\":20}`;\nconst rogueDS = `{\"id\":105,\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 deadly d8 Sword | d6 agile Sword\",\"display\":true,\"apIds\":[{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 deadly d8 Sword\",\"type\":\"Strike\",\"condition\":\"Always\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1009}],\"apIds\":[{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 agile Sword\",\"type\":\"Strike\",\"condition\":\"On Crit\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1025},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1026},{\"damageCondition\":\"Always\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":2,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1027},{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Deadly (1, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":8,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1028},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1029},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1030}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1006}],\"apIds\":[],\"id\":1011,\"parentId\":1010},{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 agile Sword\",\"type\":\"Strike\",\"condition\":\"On Success\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"Always\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1031},{\"damageCondition\":\"Always\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1032},{\"damageCondition\":\"Failure or worse\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1033},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1034},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1035},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1036}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1007}],\"apIds\":[],\"id\":1012,\"parentId\":1010},{\"name\":\"Rogue (Sneak Attack) - Double Slice - d6 agile Sword\",\"type\":\"Strike\",\"condition\":\"Failure or worse\",\"rollType\":\"Normal\",\"profTrend\":\"Martial Weapon (5, 13)\",\"statTrend\":\"18 to 24 apex(17)\",\"itemTrend\":\"Weapon (2, 10, 16)\",\"bonusAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"MAP\":\"0 (0x-5)\",\"targetType\":\"AC\",\"damages\":[{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"bludgeoning\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Weapon (1, 4, 12, 19)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[\"18 to 24 apex(17)\",\"Martial Weapon Specializaton\"],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1037},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"fire\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Always\"],\"dieTrend\":\"Runes (8, 10, 16)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1038},{\"damageCondition\":\"x1 hit, x2 crit\",\"damageType\":\"precision\",\"material\":\"none\",\"persistent\":false,\"multiplier\":1,\"damageWhen\":[\"Flatfooted\"],\"dieTrend\":\"Sneak Attack (1, 5, 11, 17)\",\"dieAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"diceSize\":6,\"fatal\":false,\"fatalDie\":10,\"damageTrend\":[],\"damageAdjustments\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0},\"id\":1039}],\"effects\":[{\"effectCondition\":\"On Crit\",\"effectType\":\"Flatfooted\",\"effectValue\":1,\"startLevel\":5,\"endLevel\":20,\"damageWhen\":[\"Always\"],\"id\":1008}],\"apIds\":[],\"id\":1013,\"parentId\":1010}],\"id\":1010,\"routineId\":105}],\"levelDiff\":0,\"description\":\"2 Double Slice with class Rogue (Sneak Attack) after 0 previous strikes. Weapon is d6 deadly d8 Sword. Weapon two is d6 agile Sword\",\"startLevel\":1,\"endLevel\":20}`;\n\nexport const exampleRoutines = [\n  fighterGs2,\n  fighterPA,\n  fighterDSpick,\n  rogueDS,\n  fireball,\n];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createTheme } from \"@mui/material/styles\";\nimport { red } from \"@mui/material/colors\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: red[900],\n    },\n    background: {\n      default: \"#222222\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport PF2App from \"./App/PF2App\";\nimport store from \"./App/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { CssBaseline } from \"@mui/material\";\nimport theme from \"./App/theme\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <PF2App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}